NEW
  AUTO 3,1
*--------------------------------------
				.DUMMY
				.OR ZPDRV+4

pPipeBuf		.BS 2

PIPE.BASEH		.BS 1
PIPE.PTRH		.BS 1
PIPE.TOPH		.BS 1

				.ED
*--------------------------------------
PIPE.Open		ldy #S.FD.PIPE.S

				lda (pFD),y
				inc
				sta (pFD),y

				lda IO.hFD
				clc
				rts
*--------------------------------------
PIPE.Close		ldy #S.FD.PIPE.S

				lda (pFD),y
				bmi .1					remote PS closed its end

				lda #$80
				sta (pFD),y
				clc
				rts

.1				ldy #S.FD.PIPE.pBuf+1
				lda (pFD),y
				beq .2

				pha
				dey
				lda (pFD),y
				tay
				pla

				jsr MEM.FreeYA

.2				jmp DEV.FreeFD
*--------------------------------------
* (pStack)+2	buf
* (pStack)+0	count
*--------------------------------------
PIPE.Write		ldy #S.FD.PIPE.S

				lda (pFD),y
				bpl .10

				jmp PIPE.eEOF			Remote PS closed the Pipe

.10				ldy #0
				jsr RAMSW.GetStkYW		get cnt
				>STYA ZPCnt

				ldy #S.FD.PIPE.Free
				lda (pFD),y
				cmp ZPCnt
				iny
				lda (pFD),y
				sbc ZPCnt+1
				bcc PIPE.eNODATA		not enough room in PIPE

				ldy #S.FD.PIPE.Head+1
				jsr PIPE.GetpPipeBufY

				lda ZPCnt
				eor #$ff
				tax

				lda ZPCnt+1
				eor #$ff
				pha

				ldy #2						get src buf
				jsr RAMSW.GetStkYW
				>STYA ZPpBuf

				ldy #S.FD.PIPE.Head
				lda (pFD),y
				tay

.1				inx
				bne .2

				pla
				inc
				beq .8

				pha

.2				jsr RAMSW.GetZPpBuf
				sta (pPipeBuf),y

				>INCW ZPpBuf

				iny
				bne .1

				lda PIPE.PTRH
				inc
				cmp PIPE.TOPH
				beq .6

				sta PIPE.PTRH
				inc pPipeBuf+1
				bra .1

.6				stz PIPE.PTRH
				lda PIPE.BASEH			Pipe Buffer Base
				sta pPipeBuf+1
				bra .1

.8				tya
				ldy #S.FD.PIPE.Head
				sta (pFD),y
				iny
				lda PIPE.PTRH
				sta (pFD),y
				ldy #S.FD.PIPE.Free
				jsr PIPE.SubCnt

				iny						#S.FD.PIPE.Used

				jsr PIPE.AddCnt
				>LDYA ZPCnt
				clc
				rts

PIPE.eEOF		lda #MLI.E.EOF
				.HS 2C					BIT ABS
PIPE.eNODATA	lda #E.NODATA
				sec
				rts
*--------------------------------------
PIPE.Read		ldy #S.FD.PIPE.Used+1

				lda (pFD),y				Data ?
				dey
				ora (pFD),y
				bne .10					yes...

				ldy #S.FD.PIPE.S
				lda (pFD),y
				bmi PIPE.eEOF			Remote PS closed the Pipe

				bpl PIPE.eNODATA

.10				ldy #S.FD.PIPE.Tail+1
				jsr PIPE.GetpPipeBufY

				jsr RAMSW.GetStk		get cnt lo
				tax
				ldy #S.FD.PIPE.Used
				cmp (pFD),y

				ldy #1
				jsr RAMSW.GetStkY		get cnt hi
				pha
				iny						#S.FD.PIPE.Used+1
				sbc (pFD),y
				pla
				bcc .12					cnt < Used

				dey
				lda (pFD),y
				tax
				iny
				lda (pFD),y				X,A = Used

.12				stx ZPCnt
				sta ZPCnt+1

				eor #$ff
				pha
				txa
				eor #$ff
				tax

				ldy #2					get dest buf
				jsr RAMSW.GetStkYW
				>STYA ZPpBuf

				ldy #S.FD.PIPE.Tail
				lda (pFD),y
				tay

				bit A2osX.IOOpt
				bpl .1

				sta IO.SETWRITEAUX

.1				inx
				bne .2

				pla
				inc
				beq .8

				pha

.2				lda (pPipeBuf),y
				sta (ZPpBuf)

				>INCW ZPpBuf

				iny
				bne .1

				lda PIPE.PTRH
				inc
				cmp PIPE.TOPH
				beq .6

				sta PIPE.PTRH
				inc pPipeBuf+1
				bra .1

.6				stz PIPE.PTRH
				lda PIPE.BASEH
				sta pPipeBuf+1			Restore Pipe Buf base
				bra .1
*--------------------------------------
.8				sta IO.CLRWRITEAUX

				tya
				ldy #S.FD.PIPE.Tail
				sta (pFD),y
				iny
				lda PIPE.PTRH
				sta (pFD),y
				ldy #S.FD.PIPE.Free
				jsr PIPE.AddCnt

				iny						#S.FD.PIPE.Used

				jsr PIPE.SubCnt

				>LDYA ZPCnt

				clc
				rts
*--------------------------------------
PIPE.Stat		jsr SHARED.ClrStat

				lda #S.STAT.MODE.FO+S.STAT.MODE.XG+S.STAT.MODE.RG+S.STAT.MODE.XU+S.STAT.MODE.RU+S.STAT.MODE.FIFO
				sta K.S.STAT+S.STAT.MODE
				lda /S.STAT.MODE.FO+S.STAT.MODE.XG+S.STAT.MODE.RG+S.STAT.MODE.XU+S.STAT.MODE.RU+S.STAT.MODE.FIFO
				sta K.S.STAT+S.STAT.MODE+1

*				clc

.9				rts
*--------------------------------------
PIPE.GetpPipeBufY
				lda (pFD),y				Y=Head+1 or Tail+1
				sta PIPE.PTRH

				ldy #S.FD.PIPE.Size+1
				lda (pFD),y
				sta PIPE.TOPH

				ldy #S.FD.PIPE.pBuf+1
				lda (pFD),y

				sta PIPE.BASEH			Pipe Buffer Base
				clc
				adc PIPE.PTRH
				sta pPipeBuf+1

				dey

				lda (pFD),y
				sta pPipeBuf

				rts
*--------------------------------------
PIPE.AddCnt		clc
				lda (pFD),y
				adc ZPCnt
				sta (pFD),y

				iny

				lda (pFD),y
				adc ZPCnt+1
				sta (pFD),y
				rts
*--------------------------------------
PIPE.SubCnt		sec
				lda (pFD),y
				sbc ZPCnt
				sta (pFD),y

				iny

				lda (pFD),y
				sbc ZPCnt+1
				sta (pFD),y
				rts
*--------------------------------------
PIPE.EOF		clc

				ldy #S.FD.PIPE.Used
				lda (pFD),y
				iny
				ora (pFD),y
				beq .8

				lda #0
*				clc
				rts

.8				dec						lda #$ff
*				clc
				rts
*--------------------------------------
MAN
SAVE usr/src/sys/kernel.s.pipe
LOAD usr/src/sys/kernel.s
ASM
