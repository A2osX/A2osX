NEW
  AUTO 3,1
*--------------------------------------
CORE.Run		ldx #2					Skip PS0

.1				stx CORE.PSIndex

				lda pPSs+1,x
				beq .80

				ldy pPSs,x
				>STYA pPS

				lda (pPS)				get S.PS.F
*				bit #S.PS.F.HOLD		Waiting for Another Task to Terminate?
*				beq .2

				bpl .2

				ldy #S.PS.CPID
				jsr PS.GetYw
				jsr PS.FindYA
				bcc .8					yes, still running....

				lda (pPS)				get S.PS.F again
				eor #S.PS.F.HOLD		unmark as HOLD
				sta (pPS)

.2				jsr CORE.PSSelect		Restore ZP & Ptrs

.3				lda (pPS)
				bit #S.PS.F.SLEEP
				beq .30

				eor #S.PS.F.SLEEP		unmark as SLEEP
				sta (pPS)

				jsr RAMSW.PSResume
				bra .31

.30				jsr RAMSW.PSExec

.31				bcc .4					INIT/RUN Exit ?

				jsr CORE.UpdPPS			Yes, go Update Parent PS

				ldy #S.PS.S
				lda #S.PS.S.QUIT
				sta (pPS),y
				bra .3					try executing QUIT now...

.4				lda (pPS)
				bit #S.PS.F.SLEEP
				bne .7

				ldy #S.PS.S
				lda (pPS),y
				bne .5

				lda #S.PS.S.RUN			go from INIT to RUN
				sta (pPS),y
				bra .7

.5				cmp #S.PS.S.QUIT
				bne .7

				ldy #S.PS.PID
				jsr PS.GetYw			INITD ?
				bne .6

				jmp CORE.Quit

.6				ldx CORE.PSIndex
				jsr PS.DestroyX
				bra .8

.7				jsr CORE.PSLeave		Save ZP & Ptrs

.8				ldx CORE.PSIndex

.80				inx
				inx
				cpx #K.PS.MAX*2
				bcc .1
*--------------------------------------
CORE.Sig		jsr CORE.GetSig
				beq .4

				jsr CORE.Dispatch

				>LDYA pPSs
				>STYA pPS

				>LDYAI K.STACKTOP
				>STYA pStack
*--------------------------------------
.4				bit IO.OPENAPPLE
				bpl .8

				lda IO.KBD
				bpl .8

				cmp #"0"
				bcc .8

				cmp #"9"+1
				bcs .8

				sta IO.KBDSTROBE

				and #$0F

				cmp A2osX.ASCREEN		Same as active screen...nothing to do
				beq .8

				tax
				lda A2osX.SCRNDEVS,x	Get DevID
				beq .8					No device claimed this screen

				tax
				>LDYA pFDs,x
				>STYA pFD

				jsr DEV.GetPDrv

				ldx #IOCTL.CONTROL
				jsr DEV.pDrvJmp

.8				jmp CORE.Run
*--------------------------------------
CORE.Quit		php
				sei
				jsr IRQ.Off				SELF MODIFIED

				plp

				lda IRQ.IntNum
				sta K.MLI.PARAMS+1

				>MLICALL MLI.DEALLOCIRQ

				bit IO.RDIOUDIS
				sta IO.SETIOUDIS
				sta IO.CLRDHIRES
				bmi .1

				sta IO.CLRIOUDIS

.1				ldx #5

.2				stz K.MLI.PARAMS+1,x
				dex
				bpl .2

				lda #4
				ldx #MLI.QUIT
				jmp PRODOS.MLICall
*--------------------------------------
CORE.UpdPPS		sta .1+1				save RC From INIT or RUN

				ldy #S.PS.PPID			Notify Parent Process for exit code...
				jsr PS.GetYw
				beq .8					no parent process

				jsr PS.FindYA			X unmodified
				bcs .8					parent is dead.....skipping...

				>STYA ZPPtr1
				lda (ZPPtr1)			Parent PS is HOLD?

*				bit #S.PS.F.HOLD
*				beq .8					no...

				bpl .8

				ldy #S.PS.CPID
				lda (ZPPtr1),y
				ldy	#S.PS.PID
				cmp (pPS),y
				bne .8

				iny
				lda (pPS),y
				ldy #S.PS.CPID+1
				cmp (ZPPtr1),y
				bne .8					Hold, but not waiting this PS

.1				lda #$FF				SELF MODIFIED
				ldy #S.PS.ERRNO			give it ERRNO
				sta (ZPPtr1),y

				lda (ZPPtr1)
				eor #S.PS.F.HOLD		release Parent PS HOLD...
				sta (ZPPtr1)

.8				rts
*--------------------------------------
CORE.GetSig		bit A2osX.bIRQ			do we have IRQ enabled for Ticks ?
				bpl .1					no, regular poll

				lda IRQ.Tick			a Tick ?
				beq .8					no, no event

				dec IRQ.Tick
				bra .2

.1				lda IO.VBL				get VLINE status
				tax
				eor CORE.VBLState
				bpl .8					no change,no tick

				txa
				sta CORE.VBLState		save new
				bpl .8					Up2down transition,no tick

.2				lda #0
				dec CORE.TickSec
				bne .3					not yet One Sec

				lda A2osX.IrqMode
				eor #$C0
				sta A2osX.IrqMode

				ldx A2osX.ASCREEN		/dev/console
				bne .22

				sta $400+38				Screen Line 0

.22				ldx CORE.TickPerSec
				stx CORE.TickSec

				lda #S.PS.SIG.T1SEC
				bra .4					Force Resync T1 & T10...

.3				dec CORE.Tick10t
				bne .6

.4				inc A2osX.T16
				bne .5

				inc A2osX.T16+1

.5				ldx CORE.TickPer10t
				stx CORE.Tick10t

				ora #S.PS.SIG.T10TH

				rts						NZ

.6				tax						Finally, do we have an event ?

				rts

.8				lda #0

				rts						Z
*--------------------------------------
* A = ClockMask
*--------------------------------------
CORE.Dispatch	sta .2+1

				ldx #2					skip PS0

.1				stx CORE.PSIndex

				lda pPSs+1,x
				beq .7

				ldy pPSs,x
				>STYA pPS

				ldy #S.PS.SIG
				lda (pPS),y
				and .2+1
				beq .7

				ldy #S.PS.S
				lda (pPS),y
				cmp #S.PS.S.RUN
				bne .7

				stx CORE.PSIndex

				lda #S.PS.S.SIG			Flag this PS for IRQ Mgr
				sta (pPS),y
				jsr CORE.PSSelect

.2				lda #$FF				SELF MODIFIED

				ldx #S.PS.S.SIG
				jsr RAMSW.PSExecX

				ldy #S.PS.S
				lda #S.PS.S.RUN
				sta (pPS),y
				jsr CORE.PSLeave

				ldx CORE.PSIndex

.7				inx
				inx
				cpx #K.PS.MAX*2
				bcc .1

*				sec

				rts
*--------------------------------------
CORE.PSSelect	ldy #S.PS.ZP+$30-1
				ldx #$30-1

.1				lda (pPS),y
				sta R1,x
				dey
				dex
				bpl .1

				ldy #S.PS.Bnk
				lda (pPS),y
				sta (pRWReg)
				sta A2osX.ActBnk

				rts
*--------------------------------------
CORE.PSLeave	ldx #$30-1
				ldy #S.PS.ZP+$30-1

.1				lda R1,x
				sta (pPS),y
				dey
				dex
				bpl .1

				rts
*--------------------------------------
MAN
SAVE usr/src/sys/kernel.s.core
LOAD usr/src/sys/kernel.s
ASM
