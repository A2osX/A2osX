PR#3
PREFIX /A2OSX.BUILD
LOMEM $A00
INC 1
AUTO 6
				.LIST OFF
				.OP	65C02
				.OR	$2000
				.TF /A2OSX.BUILD/SYS/KERNEL
*--------------------------------------
				.INB /A2OSX.BUILD/INC/MACROS.I
				.INB /A2OSX.BUILD/INC/A2OSX.I
				.INB /A2OSX.BUILD/INC/IO.I
				.INB /A2OSX.BUILD/INC/PRODOS.I
				.INB /A2OSX.BUILD/INC/MLI.ERR.I
*--------------------------------------
TmpPtr1			.EQ	$0					for X.PRINTF.S
ZPPtr1			.EQ ZPKERNEL			Temp Ptrs for use in very limited scope
ZPPtr2			.EQ ZPKERNEL+2			(could be trashed by any JSR)
ZPPtr3			.EQ ZPKERNEL+4
ZPPtr4			.EQ ZPKERNEL+6

				sei
 				ldx	#$FF				init 6502 stack to highest
				txs
				sta SETALTZP

				stx A2osX.SaveSM
				stx A2osX.SaveSX

				sta CLRALTZP			Make sure MAIN ZP is enabled for X.PRINT.F
				cli
				
				jsr Kernel.Init2
				>DEBUGOA
				jmp Kernel.Init3

				.INB /A2OSX.SRC/X.PRINTF.S
				.INB /A2OSX.SRC/SYS/KERNEL.S.INIT2
				.INB /A2OSX.SRC/SYS/KERNEL.S.INIT3

*				Global Page

A2osX.GP		.EQ *
				.PH $BD00
				.INB /A2OSX.SRC/SYS/KERNEL.S.GP
				.EP
A2osX.GP.SIZE	.EQ *-A2osX.GP

* LC AUX $D000 BANK1 API Calls $00-$3E

A2osX.D1		.EQ *
				.PH	$D000
				.DA #RRAMWRAMBNK1
				.INB /A2OSX.SRC/SYS/KERNEL.S.FIO
				.INB /A2OSX.SRC/SYS/KERNEL.S.DRV
				.INB /A2OSX.SRC/SYS/KERNEL.S.LIB
				.INB /A2OSX.SRC/SYS/KERNEL.S.TIME
				.INB /A2OSX.SRC/SYS/KERNEL.S.FILE
				.INB /A2OSX.SRC/SYS/KERNEL.S.DIR

				.INB /A2OSX.SRC/SYS/KERNEL.S.PFT
				.INB /A2OSX.SRC/SYS/KERNEL.S.BIN
				.EP
A2osX.D1.SIZE	.EQ *-A2osX.D1

* LC AUX $D000 BANK2 API Calls $40-$8E

A2osX.D2		.EQ *
				.PH	$D000
				.DA #RRAMWRAMBNK2
				.INB /A2OSX.SRC/SYS/KERNEL.S.CIO
				.INB /A2OSX.SRC/SYS/KERNEL.S.STR
				.INB /A2OSX.SRC/SYS/KERNEL.S.DEV
				.INB /A2OSX.SRC/SYS/KERNEL.S.PS
				.INB /A2OSX.SRC/SYS/KERNEL.S.ARG
				.INB /A2OSX.SRC/SYS/KERNEL.S.ENV
			
				.INB /A2OSX.SRC/SYS/KERNEL.S.RUN
				.INB /A2OSX.SRC/SYS/KERNEL.S.EVT
				.INB /A2OSX.SRC/SYS/KERNEL.S.TSK
				.EP
A2osX.D2.SIZE	.EQ *-A2osX.D2

* LC AUX $E000 API Calls $80-$FE

A2osX.E0		.EQ *
				.PH $E000
				.INB /A2OSX.SRC/SYS/KERNEL.S.JMP
				.INB /A2OSX.SRC/SYS/KERNEL.S.DAT
				.INB /A2OSX.SRC/SYS/KERNEL.S.IRQ
				.INB /A2OSX.SRC/SYS/KERNEL.S.MEM
				.INB /A2OSX.SRC/SYS/KERNEL.S.CNV
				.INB /A2OSX.SRC/SYS/KERNEL.S.CHR
* Make sure KERNEL.S.D01 is the last one
				.INB /A2OSX.SRC/SYS/KERNEL.S.D01
				.EP
A2osX.E0.SIZE	.EQ *-A2osX.E0

* CONTROL SECTION :
				.LIST ON
				.DO A2osX.GP.SIZE>$1E0
* !!!!!!!!! ERROR:GP too big !!!!!!!!!!
				.FIN
				.DO A2osX.D1.SIZE>$1000
* !!!!!!!!! ERROR:BNK1 too big !!!!!!!!
				.FIN
				.DO A2osX.D2.SIZE>$1000
* !!!!!!!!! ERROR:BNK2 too big !!!!!!!!
				.FIN		
				.LIST OFF
MAN
SAVE /A2OSX.SRC/SYS/KERNEL.S
ASM
