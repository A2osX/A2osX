PR#3
PREFIX /A2OSX.SRC
NEW
INC 1
AUTO 6
				.LIST OFF
*--------------------------------------
* S.BinRelocateYA :
* YA = Ptr to Code
* R.AX = Code Length
* R.BX = Range Start address to relocate
* R.CX = Range End  address to relocate
* R.DX = offset to apply to all abs addresses between R.BX and R.CX
*--------------------------------------
S.BinRelocateYA	>STYA ZPQuickPtr1

				ldy #H.BIN.JMP			relocate Main JMP
				lda (ZPQuickPtr1),y
				clc
				adc R.DL
				sta (ZPQuickPtr1),y

				iny
				lda (ZPQuickPtr1),y
				adc R.DH
				sta (ZPQuickPtr1),y

				ldy #H.BIN.RELOC.TABLE	skip Header, CS.SIZE & DS.SIZE... (16 bytes)
				bra S.JmpRelocate
				
S.DrvRelocateYA	>STYA ZPQuickPtr1

				ldy #0
				
S.JmpRelocate	lda (ZPQuickPtr1),y		Start Relocate JMP table
				tax
				iny
				ora (ZPQuickPtr1),y
				beq S.CodeRelocate		$0000 = end of table
				
				dey
				txa
				clc
				adc R.DL
				sta (ZPQuickPtr1),y

				iny
				lda (ZPQuickPtr1),y
				adc R.DH
				sta (ZPQuickPtr1),y

				iny

				bra S.JmpRelocate
				
S.CodeRelocate	lda ZPQuickPtr1
				clc
				adc R.AL				Make ZPQuickPtr2=End of code
				sta ZPQuickPtr2			=ZPQuickPtr1+AX (code len)
				lda ZPQuickPtr1+1
				adc R.AH
				sta ZPQuickPtr2+1
	
				iny
				tya						add current offset in Y to Ptr
				clc
				adc ZPQuickPtr1
				sta ZPQuickPtr1
				bcc .5	
				inc ZPQuickPtr1+1		ZPQuickPtr1=Current Code PTR
				clc
				
.5				lda (ZPQuickPtr1)		get OPCODE
				tax
				lda OPCODES,x			get OPCODE definition
				bpl .7					abs addressing?
				
				and #3					save Opcode length...
				pha
				
				ldy #1
				lda (ZPQuickPtr1),y		Get LO
				sec
				sbc R.BL
				iny
				lda (ZPQuickPtr1),y		Get HI
				sbc R.BH
				bcc .6					addr < AX, out of range
				
				dey
				lda (ZPQuickPtr1),y		Get LO
				sec
				sbc R.CL
				iny
				lda (ZPQuickPtr1),y		Get HI
				sbc R.CH
				bcs .6					addr > CX, out of range
				
				dey
				lda (ZPQuickPtr1),y		Get LO
				clc
				adc R.DL				add DX to abs address
				sta (ZPQuickPtr1),y		store relocated addr LO
				iny
				lda (ZPQuickPtr1),y		Get HI
				adc R.DH
				sta (ZPQuickPtr1),y		store relocated addr HI
				
.6				pla

.7				clc						A = OPCODE length
				adc ZPQuickPtr1
				sta ZPQuickPtr1
				bcc .8
				inc ZPQuickPtr1+1
				
.8				lda ZPQuickPtr1			is Current PTR < Code Limit ?
				sec
				sbc ZPQuickPtr2
				lda ZPQuickPtr1+1
				sbc ZPQuickPtr2+1
				bcc .5					yes, continue relocating
				
				clc
				rts
*--------------------------------------
* 65C02 OPCODES
* Bit 7 : 1 absolute addressing
* Bit 1-0 : opcode + @ length
*--------------------------------------
*					x0.x1.x2.x3.x4.x5.x6.x7.x8.x9.xA.xB.xC.xD.xE.xF
OPCODES			.HS 01.02.02.01.02.02.02.02.01.02.01.01.83.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.83.01.01.83.83.83.03
				.HS 83.02.02.01.02.02.02.02.01.02.01.01.83.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.83.01.01.83.83.83.03
				.HS 01.02.02.01.02.02.02.02.01.02.01.01.83.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.83.01.01.01.83.83.03
				.HS 01.02.02.01.02.02.02.02.01.02.01.01.83.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.83.01.01.83.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.02.01.01.83.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.83.01.01.83.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.02.01.01.83.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.83.01.01.83.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.02.01.01.83.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.83.01.01.01.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.02.01.01.83.83.83.03
				.HS 02.02.02.01.02.02.02.02.01.83.01.01.01.83.83.03
*--------------------------------------
MAN
SAVE SYS/KERNEL.S.REL
LOAD SYS/KERNEL.S
ASM
