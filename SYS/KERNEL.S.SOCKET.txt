NEW
  AUTO 3,1
*--------------------------------------
* int     socket(int, int, int);
* int     bind(int, const struct sockaddr *, socklen_t);
* int     connect(int, const struct sockaddr *, socklen_t);
* int     listen(int, int);
* int     accept(int, struct sockaddr *restrict, socklen_t *restrict);
* int     shutdown(int, int);
*
* ssize_t recv(int, void *, size_t, int);
* ssize_t recvfrom(int, void *restrict, size_t, int, struct sockaddr *restrict, socklen_t *restrict);
* ssize_t recvmsg(int, struct msghdr *, int);
* ssize_t send(int, const void *, size_t, int);
* ssize_t sendmsg(int, const struct msghdr *, int);
* ssize_t sendto(int, const void *, size_t, int, const struct sockaddr *, socklen_t);
*
* int     getpeername(int, struct sockaddr *restrict, socklen_t *restrict);
* int     getsockname(int, struct sockaddr *restrict, socklen_t *restrict);
* int     getsockopt(int, int, int, void *restrict, socklen_t *restrict);
* int     setsockopt(int, int, int, const void *, socklen_t);
*
****** int     sockatmark(int);
****** int     socketpair(int, int, int, int [2]);
*--------------------------------------
*/--------------------------------------
* # Socket
* ## C / CSH
* `#include <sys/socket.h>`
* `int socket(int socket_family, int socket_type, int protocol);`
* ## ASM
* `>SS`
* `>PUSHWI AF_`
* `>PUSHWI SOCK_`
* `>PUSHWI Protocol`
* `>LIBC Socket`
* `>SR`
* ## RETURN VALUE
*  CC = success
*  YA = sockfd
*\--------------------------------------
K.Socket
*/--------------------------------------
* # Bind
* ## C / CSH
* `#include <sys/socket.h>`
* `int bind(int socket, const struct sockaddr *address, socklen_t address_len);`
* ## ASM
* `>SS`
* `>PUSHW socket`
* `>PUSHW address`
* `>PUSHWI address_len`
* `>LIBC Bind`
* `>SR`
* ## RETURN VALUE
*  CC = success
*\--------------------------------------
K.Bind
*/--------------------------------------
* # Connect
* ## C / CSH
* `#include <sys/socket.h>`
* `int connect(int socket, const struct sockaddr *address, socklen_t address_len);`
* ## ASM
* `>SS`
* `>PUSHW socket`
* `>PUSHW address`
* `>PUSHWI address_len`
* `>LIBC Bind`
* `>SR`
* ## RETURN VALUE
*  CC = success
*\--------------------------------------
K.Connect
*/--------------------------------------
* # Listen
* ## C / CSH
* `#include <sys/socket.h>`
* `int listen(int socket, int backlog);`
* ## ASM
* `>SS`
* `>PUSHW socket`
* `>PUSHWI backlog`
* `>LIBC Listen`
* `>SR`
* ## RETURN VALUE
*  CC = success
*\--------------------------------------
K.Listen
*/--------------------------------------
* # Accept
* ## C / CSH
* `#include <sys/socket.h>`
* `int accept(int socket, struct sockaddr *restrict address, socklen_t *restrict address_len);`
* ## ASM
* `>SS`
* `>PUSHW socket`
* `>PUSHW address`
* `>PUSHWI address_len`
* `>LIBC Accept`
* `>SR`
* ## RETURN VALUE
*  CC = success
*  YA = hFD
*  CS = error
*  YA = -1 (ERRNO)
*\--------------------------------------
K.Accept
*--------------------------------------
MAN
SAVE usr/src/sys/kernel.s.socket
LOAD usr/src/sys/kernel.s
ASM
