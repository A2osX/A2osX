NEW
  AUTO 3,1
*/--------------------------------------
* # GetPWUID
* ## C
* `#include <pwd.h>`
* `int getpwuid(int uid, S.PW *passwd);`
* ## ASM
* `PUSHB uid`
* `>PUSHW passwd`
* `>LIBC getpwuid`
* ## RETURN VALUE
*\--------------------------------------
K.GetPWUID		ldy #2					UID
				jsr RAMSW.GetStkYW
				>STYA ZPPtr1

				ldy #0					passwd
				jsr RAMSW.StkY2FORPNT

				>LDYA PWD.pUsrDB
				beq PWD.GetPW.9

				>STYA ZPPtr3

.1				lda (ZPPtr3)
				beq PWD.GetPW.99		EOF

				ldy #0
				jsr PWD.NextS		skip USERNAME

				jsr PWD.NextS		skip PASSWORD

				jsr PWD.GetByte		get UID
				cmp ZPPtr1+1
				beq PWD.GetPW.8

				jsr PWD.NextL
				bra .1

PWD.GetPW.8		ldx FORPNT+1
				beq .8					Dry run, no output

				jmp PWD.Rec2PW

.8				clc						a = UID
				rts

PWD.GetPW.9		lda #E.IPWDDB
				.HS 2C					BIT ABS

PWD.GetPW.99	lda #E.IUSR
				sec
				rts
*/--------------------------------------
* # GetGRGID
* ## C
* `#include <pwd.h>`
* `int getgrgid(int gid, S.GRP *group);`
* ## ASM
* `>PUSHB gid`
* `>PUSHW group`
* `>LIBC getgrgid`
* ## RETURN VALUE
*\--------------------------------------
K.GetGRGID		jsr RAMSW.StkY2FORPNT

				ldy #2
				jsr RAMSW.GetStkYW
				>STYA ZPPtr1

				>LDYA PWD.pGrpDB
				beq PWD.GetGR.9

				>STYA ZPPtr3

.1				lda (ZPPtr3)
				beq PWD.GetGR.99		EOF

				ldy #0
				jsr PWD.NextS			skip USERNAME

				jsr PWD.GetByte			get UID
				cmp ZPPtr1+1
				beq PWD.GetGR.8

				jsr PWD.NextL
				bra .1

PWD.GetGR.8		ldx FORPNT+1
				beq .8					Dry run, no output

				jmp PWD.Rec2GR

.8				clc						a = UID
				rts

PWD.GetGR.9		lda #E.IPWDDB
				.HS 2C					BIT ABS

PWD.GetGR.99	lda #E.IUSR
				sec
				rts
*/--------------------------------------
* # GetPWName
* ## C
* `#include <pwd.h>`
* `int getpwname(const char* name, S.PW *passwd);`
* ## ASM
* `>PUSHW name`
* `>PUSHW passwd`
* `>LIBC getpwname`
* ## RETURN VALUE
*\--------------------------------------
K.GetPWName		ldy #2					name
				jsr RAMSW.StkY2TXTPTR

				ldy #0					passwd
				jsr RAMSW.StkY2FORPNT

				>LDYA PWD.pUsrDB
				beq PWD.GetPW.9

				>STYA ZPPtr3

				ldy #0
				jsr RAMSW.xTXTPTRgY
				beq PWD.GetPW.99

.1				lda (ZPPtr3)
				beq PWD.GetPW.99

				ldy #$ff
.2				iny
				jsr RAMSW.xTXTPTRgY
				beq .4

				cmp (ZPPtr3),y
				beq .2

.3				jsr PWD.NextL
				bra .1

.4				lda (ZPPtr3),y
				cmp #':'
				bne .3

				ldx FORPNT+1
				beq .8

				jmp PWD.Rec2PW

.8				iny
				jsr PWD.NextS			skip PASSWORD
				jmp PWD.GetByte			get UID
*/--------------------------------------
* # GetGRName
* ## C
* `#include <pwd.h>`
* `int getgrname(const char* name, S.GRP *group);`
* ## ASM
* `>PUSHW name`
* `>PUSHW group`
* `>LIBC getgrname`
* ## RETURN VALUE
*\--------------------------------------
K.GetGRName		ldy #2					name
				jsr RAMSW.StkY2TXTPTR

				ldy #0					passwd
				jsr RAMSW.StkY2FORPNT

				>LDYA PWD.pGrpDB
				beq PWD.GetGR.9

				>STYA ZPPtr3

				ldy #0
				jsr RAMSW.xTXTPTRgY
				beq PWD.GetGR.99

.1				lda (ZPPtr3)
				beq PWD.GetGR.99

				ldy #$ff
.2				iny
				jsr RAMSW.xTXTPTRgY
				beq .4

				cmp (ZPPtr3),y
				beq .2

.3				jsr PWD.NextL
				bra .1

.4				lda (ZPPtr3),y
				cmp #':'
				bne .3

				ldx FORPNT+1
				beq .8

				jmp PWD.Rec2GR

.8				iny
				jmp PWD.GetByte			get GID
*/--------------------------------------
* # PutPW
* ## C
* `#include <pwd.h>`
* `int putpw(S.PW* passwd);`
* ## ASM
* `>LDYA passwd`
* `>LIBC putpw`
* ## RETURN VALUE
*\--------------------------------------
K.PutPW			>STYA TXTPTR

				jsr PWD.PutPW
				bcs .9

				ldx #PWD.UsrFile
				jmp PWD.FlushFileX

.9				rts
*/--------------------------------------
* # PutGR
* ## C
* `#include <pwd.h>`
* `int putgr(S.GRP *group);`
* ## ASM
* `>LDYA group`
* `>LIBC putgr`
* ## RETURN VALUE
*\--------------------------------------
K.PutGR			>STYA TXTPTR

				jsr PWD.PutGR
				bcs .9

				ldx #PWD.GrpFile
				jmp PWD.FlushFileX

.9				rts
*/--------------------------------------
* # OpenSession
* ## C
* `#include <pwd.h>`
* `SESSION *opensession(const char *name, const char *passwd);`
* ## ASM
* `>PUSHW name`
* `>PUSHW passwd`
* `>LIBC OpenSession`
* ## RETURN VALUE
*\--------------------------------------
K.OpenSession	ldy #2					name
				jsr RAMSW.StkY2TXTPTR

				ldy #0					passwd
				jsr RAMSW.StkY2FORPNT

				lda PWD.pUsrDB+1
				beq .1

				lda TXTPTR+1
				bne .3

.1				>LDYAI PWD.ROOT.L
				jsr MEM.Malloc
				bcs .9

				>STYA ZPPtr1

				ldy #PWD.ROOT.L-1

.2				lda PWD.ROOT,y
				sta (ZPPtr1),y
				dey
				bpl .2

				>LDYA ZPPtr1
*				clc
				rts
*--------------------------------------
.3				jsr PWD.FindRec
				bcs .9

				tya						Y = Name length +1

*				clc
				adc ZPPtr3
				sta ZPPtr4

				lda ZPPtr3+1
				adc #0
				sta ZPPtr4+1

				ldy #31

				sec

.5				jsr RAMSW.xFORPNTgY
				eor (ZPPtr4),y			Check MD5
				bne .9

				dey
				bpl .5

				jsr PWD.GetSessionLen

				jsr MEM.Malloc
				bcs .9

				>STYA ZPPtr2

				jsr PWD.Record2Session

				>LDYA ZPPtr2
				clc
.9				rts
*/--------------------------------------
* # CloseSession
* ## C
* `#include <pwd.h>`
* `int closesession(SESSION *);`
* ## ASM
* `>PUSHB hSID`
* `>LIBC CloseSession`
* ## RETURN VALUE
*\--------------------------------------
K.CloseSession	jmp K.Free
*--------------------------------------
* PRIVATE
*--------------------------------------
PWD.GetUID		>LDYA PWD.pUsrDB

				>STYA ZPPtr3

				stz .8+1
.1				lda (ZPPtr3)
				beq .8					End of DB

				ldy #0
				jsr	PWD.NextS		skip name
				jsr PWD.NextS		skip password
				jsr PWD.GetByte
				cmp .8+1
				bcc .4

				sta .8+1

.4				jsr PWD.NextL
				bra .1

.8				lda #$ff				SELF MODIFIED
				inc
				beq .9

				clc
				rts

.9 				lda #E.IUSR
				sec
				rts
*--------------------------------------
PWD.DelRec
.1				iny
				lda (ZPPtr3),y
				cmp #C.CR
				bne .1

				sty .3+1
				tya
				sec
				adc ZPPtr3
				sta ZPPtr4
				lda ZPPtr3+1
				adc #0
				sta ZPPtr4+1

				ldy #$ff

.2				iny
				lda (ZPPtr4),y
				sta (ZPPtr3),y
				bne .2

				lda PWD.UsrDBSize
				sec
.3				sbc #$ff				SELF MODIFIED
				sta PWD.UsrDBSize
				bcs .8

				dec PWD.UsrDBSize+1

.8				clc

.9				rts
*--------------------------------------
PWD.FindRec		>LDYA PWD.pUsrDB

				>STYA ZPPtr3

.2				lda (ZPPtr3)
				beq .9					End of DB

				ldy #$ff

.3				iny
				jsr RAMSW.xTXTPTRgY
				beq .4

				cmp (ZPPtr3),y
				beq .3

.5				jsr PWD.NextL
				bra .2

.4				lda (ZPPtr3),y
				cmp #':'
				bne .5

				iny						skip ":"

				clc
				rts

.9				lda #E.IUSR
				sec
				rts
*--------------------------------------
* Record : USERNAME:PASSWORD:UID:GID:GECOS:HOME:SHELL\CR
*--------------------------------------
PWD.Rec2PW		ldy #0

				ldx #0					NAME

.1				lda (ZPPtr3),y
				iny
				cmp #':'
				beq .2

				jsr SHARED.xFORPNTpn
				inx
				bra .1

.2				lda #0
				jsr SHARED.xFORPNTpn
				inx
				cpx #S.PW.PASSWD
				bne .2

.3				lda (ZPPtr3),y
				iny
				cmp #':'
				beq .4

				jsr SHARED.xFORPNTpn
				inx
				bra .3

.4				lda #0
				jsr SHARED.xFORPNTpn
				inx
				cpx #S.PW.UID
				bne .4

				jsr PWD.GetByte		UID
				jsr SHARED.xFORPNTpn

				iny

				jsr PWD.GetByte		GID
				jsr SHARED.xFORPNTpn

				iny

				ldx #S.PW.GECOS

.5				lda (ZPPtr3),y
				iny
				cmp #':'
				beq .6
				jsr SHARED.xFORPNTpn
				inx
				bra .5
.6				lda #0
				jsr SHARED.xFORPNTpn
				inx
				cpx #S.PW.DIR
				bne .6

.7				lda (ZPPtr3),y
				iny
				cmp #':'
				beq .8
				jsr SHARED.xFORPNTpn
				inx
				bra .7
.8				lda #0
				jsr SHARED.xFORPNTpn
				inx
				cpx #S.PW.SHELL
				bne .8

.9				lda (ZPPtr3),y
				iny
				cmp #C.CR
				beq .10
				jsr SHARED.xFORPNTpn
				inx
				bra .9
.10				lda #0
				jsr SHARED.xFORPNTpn

				clc
				rts
*--------------------------------------
PWD.Rec2GR		ldy #0

				ldx #0					NAME

.1				lda (ZPPtr3),y
				iny
				cmp #':'
				beq .2

				jsr SHARED.xFORPNTpn
				inx
				bra .1

.2				lda #0
				jsr SHARED.xFORPNTpn

				jsr PWD.GetByte		UID
				jsr SHARED.xFORPNTpn

				clc
				rts
*--------------------------------------
* Record : USERNAME:PASSWORD:UID:GID:GECOS:HOME:SHELL\CR
*--------------------------------------
PWD.GetSessionLen
				ldy #0

				jsr PWD.NextS			USERNAME
				tya
				clc
				adc #S.SESSION.NAME
				tax

				jsr PWD.NextS			skip PASSWORD
				jsr PWD.NextS			skip UID
				jsr PWD.NextS			skip GID

.1				inx
				iny
				lda (ZPPtr3),y
				beq .8

				eor #C.CR
				bne .1

.8				phx						A = 0
				ply
				rts
*--------------------------------------
PWD.Record2Session
				ldy #0

				jsr PWD.NextS			skip USERNAME
				jsr PWD.NextS			skip PASSWORD
				jsr PWD.GetByte		get UID
				sta ZPPtr1

				iny

				jsr PWD.GetByte		get GID
				sta ZPPtr1+1

				iny

				lda #0
				ldx ZPPtr1
				bne .1

				ora #S.SESSION.P.ROOT

.1				ldx ZPPtr1+1
				bne .2

				ora #S.SESSION.P.SYSADMIN

.2				jsr SHARED.PutCP2

				lda ZPPtr1
				jsr SHARED.PutCP2	UID

				lda ZPPtr1+1
				jsr SHARED.PutCP2	GID

				phy

				ldy #$ff

.3				iny
				lda (ZPPtr3),y
				cmp #':'
				beq .4

				jsr SHARED.PutCP2
				bra .3

.4				lda #0
				jsr SHARED.PutCP2

				ply

.5				lda (ZPPtr3),y
				cmp #C.CR
				beq .8

				cmp #':'
				bne .6

				lda #0

.6				jsr SHARED.PutCP2
				iny
				bra .5

.8				lda #0
				jmp SHARED.PutCP2
*--------------------------------------
PWD.NextS		lda (ZPPtr3),y
				beq .8

				iny
				cmp #':'
				bne PWD.NextS
.8				rts
*--------------------------------------
PWD.NextL		lda (ZPPtr3),y
				beq .8

				iny
				cmp #C.CR
				bne PWD.NextL

				tya
				clc
				adc ZPPtr3
				sta ZPPtr3
				bcc .8
				inc ZPPtr3+1
.8				rts
*--------------------------------------
PWD.GetByte		stz .8+1

.1				lda (ZPPtr3),y
				beq .8

				cmp #C.CR
				beq .8

				cmp #':'
				beq .8

				and #$f
				pha
				lda .8+1
				asl
				asl
				clc
				adc .8+1
				asl
				sta .8+1
				pla
				clc
				adc .8+1
				sta .8+1

				iny

				bra .1

.8				lda #$ff				SELF MODIFIED

				clc
				rts
*--------------------------------------
PWD.AppRec
.1				lda (ZPPtr3)
				beq .8

				inc ZPPtr3
				bne .1
				inc ZPPtr3+1
				bra .1

.8				sec
				.HS 90					BCC
*--------------------------------------
PWD.GetRecLen	clc
				ldx #0
				ldy #S.PW.NAME

				jsr PWD.StoreS
				lda #':'
				jsr PWD.StoreC
				ldy #S.PW.PASSWD

				jsr PWD.StoreS

				lda #':'
				jsr PWD.StoreC

				ldy #S.PW.UID
				jsr RAMSW.xTXTPTRgY
				jsr PWD.StoreB

				lda #':'
				jsr PWD.StoreC

				ldy #S.PW.GID
				jsr RAMSW.xTXTPTRgY
				jsr PWD.StoreB
				lda #':'
				jsr PWD.StoreC

				ldy #S.PW.GECOS

				jsr PWD.StoreS
				lda #':'
				jsr PWD.StoreC

				ldy #S.PW.DIR

				jsr PWD.StoreS
				lda #':'
				jsr PWD.StoreC

				ldy #S.PW.SHELL

				jsr PWD.StoreS
				lda #C.CR
				jsr PWD.StoreC

				txa
PWD.RTS			rts
*--------------------------------------
PWD.StoreS		jsr RAMSW.xTXTPTRgY
				beq PWD.RTS

				jsr PWD.StoreC
				iny
				bra PWD.StoreS
*--------------------------------------
PWD.StoreB		php
				phx
				jsr MATH.A2STR10NP
				plx
				plp

				ldy #0

.1				lda FOUTBuf,y
				beq PWD.RTS

				iny
				jsr PWD.StoreC
				bra .1
*--------------------------------------
PWD.StoreC		inx
				bcc .9					Dry run, no store

				sta (ZPPtr3)
				inc ZPPtr3
				bne .9

				inc ZPPtr3+1

.9				rts
*--------------------------------------
PWD.FlushFileX	stx .2+1

				>LDYAI PWD.pUsrDB+4,x
				>PUSHBI	O.WRONLY+O.CREATE
				>PUSHBI S.FI.T.TXT
				>PUSHWZ					Aux type
				jsr K.FOpen
				bcs .9

				sty .7+1
				sta .7+1

				>PUSHYA

.2				ldx #$ff				SELF MODIFIED
				>PUSHW PWD.pUsrDB+0,x
				>PUSHW PWD.pUsrDB+2,x
				jsr K.FWrite
				bcc .7

				pha
				jsr .7
				pla

				sec
				rts

.7				ldy #$ff				SELF MODIFIED
.8				lda #$ff				SELF MODIFIED
				jmp K.FClose

.9				rts
*--------------------------------------
PWD.PutPW		>LDYA PWD.pUsrDB
				bne PWD.PutPW.1

				ldy #S.PW.UID
				jsr RAMSW.xTXTPTRgY
				bne .99					Must be ROOT user

				jsr PWD.GetRecLen
				tay
				lda #0

				>STYA PWD.UsrDBSize

				iny
				bne .1

				inc

.1				jsr MEM.Malloc
				bcs .9

				>STYA PWD.pUsrDB
				>STYA ZPPtr3

				lda #0
				sta (ZPPtr3)

				jsr PWD.AppRec

				>LDYA PWD.pGrpDB
				beq .2

				jsr K.Free

.2				>LDYAI PWD.GROUP.L
				>STYA PWD.GrpDBSize
				jsr MEM.Malloc
				bcs .9

				>STYA PWD.pGrpDB
				>STYA ZPPtr3

				ldy #PWD.GROUP.L-1

.3				lda PWD.GROUP,y
				sta (ZPPtr3),y
				dey
				bpl .3

				clc
.9				rts

.99				lda #E.IUSR
				sec
				rts
*--------------------------------------
PWD.PutPW.1		>STYA ZPPtr3

				ldy #S.PW.PASSWD
				jsr RAMSW.xTXTPTRgY
				bne .12

				jsr PWD.FindRec
				bcs .99
				jmp PWD.DelRec
*--------------------------------------
.12				jsr PWD.FindRec
				bcs .11

				jsr PWD.DelRec
				bcs .99
				bra .13
*--------------------------------------
.11				jsr PWD.GetUID			new user, get UID
				bcs .99

				ldy #S.PW.UID
				sta IO.CLRWRITEAUX
				sta (TXTPTR),y
				sta IO.SETWRITEAUX

.13				jsr PWD.GetRecLen

				clc
				adc PWD.UsrDBSize
				sta PWD.UsrDBSize
				tay

				lda #0
				adc PWD.UsrDBSize+1
				sta PWD.UsrDBSize+1

				iny
				bne .14

				inc

.14				jsr MEM.Malloc
				bcs .99

				>STYA ZPPtr3
				pla

				>LDYA PWD.pUsrDB
				>STYA ZPPtr4

				ldy #0

.3				lda (ZPPtr4),y
				sta (ZPPtr3),y
				beq .4

				iny
				bne .3
				inc ZPPtr4+1
				inc ZPPtr3+1
				bra .3

.4				pla
				sta ZPPtr3+1

				>LDYA PWD.pUsrDB
				jsr K.Free

				>LDYA ZPPtr3
				>STYA PWD.pUsrDB

				jsr PWD.AppRec

				lda #0
				jsr PWD.StoreC

				clc
				rts

.9				lda #E.IPWDDB
				sec
.99				rts
*--------------------------------------
PWD.PutGR		>LDYA PWD.pGrpDB
				beq .9

				>STYA ZPPtr3


.9				lda #E.IPWDDB
				sec
				rts
*--------------------------------------
PWD.ROOT		.DA #S.SESSION.P.ROOT
				.DA #0
				.DA 0					UID
				.DA 0					GID
				.DA 0
				.AZ "root"				LOGNAME
				.AZ "Root User"			GECOS
				.AZ "/root/"			HOME
				.AZ "/bin/sh"			SHELL
PWD.ROOT.L		.EQ	*-PWD.ROOT
*--------------------------------------
PWD.GROUP		.AS "root:0"
				.DA #C.CR
				.AS "users:1"
				.DA #C.CR
				.DA #0
PWD.GROUP.L		.EQ *-PWD.GROUP
*--------------------------------------
PWD.UsrFile		.EQ 0
PWD.pUsrDB		.BS 2
PWD.UsrDBSize	.BS 2
PWD.ETCPASSWD	.AZ "/etc/passwd"
PWD.GrpFile		.EQ *-PWD.UsrFile
PWD.pGrpDB		.BS 2
PWD.GrpDBSize	.BS 2
PWD.ETCGROUP	.AZ "/etc/group"
*--------------------------------------
MAN
SAVE usr/src/sys/kernel.s.pwd
LOAD usr/src/sys/kernel.s
ASM
