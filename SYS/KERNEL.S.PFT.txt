NEW
  AUTO 3,1
*--------------------------------------
PFT.GetPath0	ldy #0
				.HS 2C					BIT ABS
PFT.GetPath1	ldy #1
				.HS 2C					BIT ABS
PFT.GetPath2	ldy #2
				.HS 2C					BIT ABS
PFT.GetPath4	ldy #4

				jsr RAMSW.GetStkYW

PFT.GetPathYA	jsr RAMSW.YA2PathBuf

				jsr STDLIB.Expand
				jmp STDLIB.RealPath
*--------------------------------------
PFT.CheckExtFS	stx .6+1				Save SYSCALL #

				ldx #0

.1				lda pPFTs+1,x
				beq .8

				sta .3+2
				lda pPFTs,x
				sta .3+1

				ldy #$ff

.2				iny

.3				lda $FFFF,y				SELF MODIFIED
				beq .4					end of filter string....

				cmp K.PathBuf,y			can be \0
				beq .2

				bra .8

.4				lda K.PathBuf,y
				beq .5					path is "/FILTER" ?

				cmp #'/'				path is "/FILTER/..." ?
				bne .8

				iny

.5				lda pCBs,x
				sta .7+1

				lda pCBs+1,x
				sta .7+2

				pla						discard JSR return @
				pla

				>LDYAI K.PathBuf		pass full path to handler

.6				ldx #$ff				SELF MODIFIED SYSCALL #

.7				jmp $ffff				SELF MODIFIED

.8				inx
				inx
				cpx #K.PFT.MAX*2
				bcc .1

				clc
				rts
*--------------------------------------
* X = 0 /dev VS = /dev/ VC = /dev/file
* X = 2 /mnt VS = /mnt/ VC = /mnt/file
* X = 4 /prodos/path VC
*--------------------------------------
PFT.Translate	>LDYAI K.MLI.PATH
				>STYA K.MLI.PARAMS+1

				stz K.MLI.PATH

				jsr PFT.CheckDirs
				bcc .20					/dev /mnt ....

				ldy #$ff

				ldx #0

.10				iny
				lda SYS.BOOT,y			add /BOOT/DIR/ prefix
				beq .11

				sta K.MLI.PATH+1,x
				inx
				cpx #MLI.MAXPATH+1
				bcc .10

				lda #MLI.E.INVPATH
*				sec
				rts

.11				stx K.MLI.PATH

				ldy #1					skip leading /
				jsr PFT.Y2MLIPath
				bcs .9

				ldx #4					PRODOS
				clv						not special DIR

*				clc

				rts
*--------------------------------------
.20				bvs	.8					CC/VS, /dev or /mnt, X = special DIR

				txa						/dev/file
				beq .7					nothing to do

				ldy #4					skip /mnt from /mnt/VOLUME
				jsr PFT.Y2MLIPath
				bcs .9

				ldx #4					Standard ProDOS /VOLUME

.7

*				clv

.8

*				clc

.9				rts
*--------------------------------------
PFT.CheckDirs	bit .9					if V, NO additional path

				ldx #0

.1				lda PFT.Dirs,x
				sta .3+1
				lda PFT.Dirs+1,x
				sta .3+2

				ldy #0
				bra .3

.2				cmp K.PathBuf,y
				bne .7

				iny

.3				lda $FFFF,y				SELF MODIFIED
				bne .2

				lda K.PathBuf,y
				bne .4

				lda #'/'				/XXX\0, append '/'
				sta K.PathBuf,y
				iny
				lda #0
				sta K.PathBuf,y

				clc						V set
				rts

.4				cmp #'/'
				bne .7

				iny
				lda K.PathBuf,y
				beq .8					/XXX/\0, V set

				clv						/XXX/something.... clear V

.8				clc
				rts

.7				inx
				inx
				cpx #4
				bcc .1

				clv

*				sec

.9				rts
*--------------------------------------
PFT.Y2MLIPath	ldx K.MLI.PATH

.1				lda K.PathBuf,y
				beq .8

				iny

				sta K.MLI.PATH+1,x
				inx
				cpx #MLI.MAXPATH+1
				bcc .1

				lda #MLI.E.INVPATH
*				sec
				rts

.8				stx K.MLI.PATH

				clc
				rts
*--------------------------------------
PFT.CheckNode4	ldy #4

PFT.CheckNodeY	jsr RAMSW.GetStkYW

PFT.CheckNodeYA	>STYA pFILE

				lda (pFILE)				#S.FILE.hFD
				jsr SHARED.GethFDpFDA

				ldy #S.FD.PFT
				lda (pFD),y
				beq .8					Handler is 0, back to kernel....

				tay

				lda pCBs,y
				sta .1+1

				lda pCBs+1,y
				sta .1+2

				pla						discard JSR return @
				pla

				>LDYA pFILE

.1				jmp $ffff				SELF MODIFIED

.8				jsr DEV.GetPDrv

				lda (pFD)				#S.FD.T
				cmp #S.FD.T.CDEV
				bcs .80

				ldy #S.FD.REG.REF		REG or DIR
				lda (pFD),y

				sta K.MLI.PARAMS+1

.80				>LDYA pFILE

				clc
				rts
*--------------------------------------
PFT.Dirs		.DA PFT.DEV
				.DA PFT.MNT

PFT.DEV			.AZ "/dev"
PFT.MNT			.AZ "/mnt"
*--------------------------------------
MAN
SAVE usr/src/sys/kernel.s.pft
LOAD usr/src/sys/kernel.s
ASM
