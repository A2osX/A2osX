NEW
PREFIX /A2OSX.BUILD
AUTO 4,1
				.LIST OFF	
				.OP	65C02
				.OR	$2000
				.TF DRV/UTHERNET2.DRV
*--------------------------------------
				.INB INC/MACROS.I
				.INB INC/A2OSX.I
				.INB INC/MLI.ERR.I
				.INB INC/NIC.I
				.INB INC/NIC.W5100.I
				.INB INC/ETH.I
*--------------------------------------
ZPArgPtr		.EQ ZPDRV
*--------------------------------------
*			File Header (16 Bytes)
*--------------------------------------
CS.START		cld
				jmp Dev.Detect			cld,jmp abs=DRV
				.DA #$61				6502,Level 1 (65c02)
				.DA #1					DRV Layout Version 1
				.DA 0
				.DA CS.END-CS.START			Code Length
				.DA 0
				.DA 0
				.DA 0
*--------------------------------------
* Relocation Table
*--------------------------------------
L.MSG.DETECT	.DA MSG.DETECT
L.MSG.DETECT.OK	.DA MSG.DETECT.OK
L.MSG.DETECT.KO	.DA MSG.DETECT.KO
L.DRV.CS.START	.DA DRV.CS.START
L.FD.DEV		.DA FD.DEV
L.FD.DEV.NAME	.DA FD.DEV.NAME
L.SSCANF.MAC	.DA SSCANF.MAC
L.MAC0			.DA DCB+S.DCB.NIC.MAC
L.MAC1			.DA DCB+S.DCB.NIC.MAC+1
L.MAC2			.DA DCB+S.DCB.NIC.MAC+2
L.MAC3			.DA DCB+S.DCB.NIC.MAC+3
L.MAC4			.DA DCB+S.DCB.NIC.MAC+4
L.MAC5			.DA DCB+S.DCB.NIC.MAC+5
				.DA 0					End Of Reloc Table
*--------------------------------------
Dev.Detect		>STYA ARGS

				>LDYA L.MSG.DETECT
				>SYSCALL puts
				
				ldx #$70+$88
				ldy #7
				
.1				lda A2osX.S,y		IO based detection, avoid scanning in Disk Controller IO!!!!
				bne .2
				
				lda #W5100.MR.RST
				sta W5100.MR,x

				lda #0
				
.10				dec						give some time....
				bne .10

				lda #W5100.MR.AI+W5100.MR.IND
				sta W5100.MR,x

				pha
				pla

				lda W5100.MR,x
				cmp #W5100.MR.AI+W5100.MR.IND
				bne .2
				
				>AR.SELECT RTR
				
				lda W5100.DR,x		Get RTR HI
				cmp /2000
				bne .2
				lda W5100.DR,x		Get RTR LO 
				cmp #2000
				beq	.3
				
.2				dec FD.DEV.NAME+3
				txa
				sec
				sbc #$10
				tax
				dey
				bne .1
				
				>LDYA L.MSG.DETECT.KO
				>SYSCALL puts

				lda #MLI.E.NODEV
				sec
				rts
				
.3				stx DEVSLOTx0
				lda #A2osX.S.NIC
				sta A2osX.S,y
				
				jsr Dev.ParseArgs
				bcs .9
				
.8				>PUSHW L.FD.DEV.NAME
				>PUSHBI 2
				>LDYA L.MSG.DETECT.OK
				>SYSCALL printf
				
				>PUSHWI DRV.END
				>PUSHWI DRV.CS.END
				>PUSHWI DRV.CS.START
				>LDYA L.DRV.CS.START
				>SYSCALL InsDrv
				bcs .9
				>STYA FD.DEV+S.FD.DEV.DRVPTR
				
				>LDYA L.FD.DEV
				>SYSCALL MKDEV

.9				rts
*--------------------------------------
Dev.ParseArgs	>LDYA ARGS
				>STYA ZPArgPTR
				lda (ZPArgPTR)
				bne .1
				
				lda A2osX.RANDOM16
				eor A2osX.TIMER16
				sta DCB+S.DCB.NIC.MAC+3
				eor A2osX.RANDOM16+1
				sta DCB+S.DCB.NIC.MAC+4
				eor A2osX.TIMER16+1
				sta DCB+S.DCB.NIC.MAC+5
				clc
				rts
				
.1				>PUSHW L.MAC5
				>PUSHW L.MAC4
				>PUSHW L.MAC3
				>PUSHW L.MAC2
				>PUSHW L.MAC1
				>PUSHW L.MAC0
				>PUSHBI 12				6 x byte PTRs
				>PUSHW L.SSCANF.MAC
				>LDYA ZPArgPtr
				>SYSCALL sscanf
				bcc .8
				
				lda #K.E.SYN
				sec
.8				rts
*--------------------------------------
CS.END
ARGS			.BS 2
MSG.DETECT		.AZ "UtherNet2/W5100 Driver."
MSG.DETECT.OK	.AZ "UtherNet2/W5100 Installed As Device : %s\r\n"
MSG.DETECT.KO	.AZ "Hardware Not Found."
SSCANF.MAC		.AZ "%h:%h:%h:%h:%h:%h"
*--------------------------------------
FD.DEV			.DA #S.FD.T.CDEV
				.DA #0					HANDLER
				.DA #0					BUSID
				.DA #0					DEVID
				.DA 0					BUSPTR
				.BS 2					DRVPTR
FD.DEV.NAME		.AZ "ETH7"				NAME
				.HS 000000
*--------------------------------------
*			Driver Code
*--------------------------------------
ZPIOCTL			.EQ ZPDRV
ZPBufPtr		.EQ ZPDRV+2
Counter			.EQ ZPDRV+4
Offset			.EQ ZPDRV+6
RXTX.Size		.EQ ZPDRV+8
*--------------------------------------
DRV.CS.START	cld
				jmp (.1,x)
.1				.DA STATUS
				.DA A2osX.BADCALL
				.DA A2osX.BADCALL
				.DA A2osX.BADCALL
				.DA CONTROL
				.DA A2osX.BADCALL
				.DA OPEN
				.DA CLOSE
				.DA READ
				.DA WRITE
				.DA A2osX.BADCALL		IRQ
				.DA 0					end or relocation
*--------------------------------------
STATUS			>STYA ZPIOCTL

				ldy #S.IOCTL.STATCODE
				lda (ZPIOCTL),y
				beq .1
				
				cmp #S.IOCTL.STATCODE.GETDIB
				bne STATUS.DCB
				
				ldx #S.DIB-1
				.HS 2C					bit abs
.1				ldx #3

				ldy #S.IOCTL.BUFPTR
				lda (ZPIOCTL),y
				sta .3+1
				iny
				lda (ZPIOCTL),y
				sta .3+2
				
.2				lda DIB,x
.3				sta $ffff,x				SELF MODIFIED
				dex
				bpl .2
				
				clc
				rts
				
STATUS.DCB		cmp #S.IOCTL.STATCODE.GETDCB
				bne STATUS.9

.1				ldy #S.IOCTL.BUFPTR
				lda (ZPIOCTL),y
				sta .3+1
				iny
				lda (ZPIOCTL),y
				sta .3+2
				
				ldx #S.DCB.NIC-1
				
.2				lda DCB,x
.3				sta $ffff,x				SELF MODIFIED
				dex
				bpl .2

				clc
				rts
				
STATUS.9		lda #MLI.E.BADCTL
				sec
				rts				
*--------------------------------------
CONTROL			>STYA ZPIOCTL

				ldy #S.IOCTL.CTRLCODE
				lda (ZPIOCTL),y
				cmp #S.IOCTL.CTRLCODE.SETDCB
				bne STATUS.9
				
.1				ldy #S.IOCTL.BUFPTR
				lda (ZPIOCTL),y
				sta .2+1
				iny
				lda (ZPIOCTL),y
				sta .2+2
				
				ldx #S.DCB.NIC-1
				
.2				lda $ffff,x				SELF MODIFIED
				sta DCB,x
				dex
				bpl .2
				
				clc
				rts
*--------------------------------------
OPEN			jsr CLOSE

*				ldx DEVSLOTx0			Done by CLOSE

				lda #W5100.MR.AI+W5100.MR.IND
				sta W5100.MR,x

				>AR.SELECT SHAR
				
				ldy	#0

.1				lda DCB+S.DCB.NIC.MAC,y
				sta W5100.DR,x
				iny
				cpy #6
				bne .1

				>AR.SELECT RMSR
				lda #3					8k,0k,0k,0k
				sta W5100.DR,x		...for Socket RX Buffers
				sta W5100.DR,x		...for Socket TX Buffers

				>AR.SELECT S0.MR
				lda #W5100.AR.S0.MR.MACRAW+W5100.AR.S0.MR.MF
				sta W5100.DR,x

				>AR.SELECT S0.CR
				lda #W5100.AR.S0.CR.OPEN
				sta W5100.DR,x

				clc
				rts
*--------------------------------------
CLOSE			ldx DEVSLOTx0

				lda #W5100.MR.RST
				sta W5100.MR,x

				lda $C019				we can use VBL as we are not on //c
.1				eor $C019
				bpl .1
				
				lda $C019
.2				eor $C019
				bpl .2
				
				clc
				rts
*--------------------------------------
READ			php
				sei

				>STYA ZPIOCTL

				ldx DEVSLOTx0

				>AR.SELECT S0.RX.RSR
				lda W5100.DR,x			get the received size HI
				ora W5100.DR,x      	LO
				bne .1

				lda #MLI.E.EOF

.9				plp
				sec
				rts

.1				>AR.SELECT S0.RX.RD
				lda W5100.DR,x			get the received ptr HI
				sta offset+1
				ldy W5100.DR,x			get the received ptr LO
				sty offset

				and /RXTX.MASK
				ora /RX.BASE
				sta W5100.AR,x
				tya
				sta W5100.AR+1,x
				
				lda W5100.DR,x			get RX.Size HI
				sta RXTX.Size+1
				
				ldy W5100.DR,x			get RX.Size LO
				sty RXTX.Size

				>SYSCALL getmem
				bcs .9

				>STYA ZPBufPtr
				stx .8+1

				phy
				ldy #S.IOCTL.BUFPTR+1
				sta (ZPIOCTL),y
				dey
				pla
				sta (ZPIOCTL),y

				ldy #S.IOCTL.BYTECNT
				
				lda RXTX.Size
				sec
				sbc #2				Header Size
				sta (ZPIOCTL),y
				eor #$ff
				sta Counter
				
				iny

				lda RXTX.Size+1
				sbc #0
				sta (ZPIOCTL),y
				eor #$ff
				sta Counter+1
				
				ldx DEVSLOTx0

				ldy #0
				
.2				inc Counter
				bne .3
				inc Counter+1
				beq .4
				
.3				lda W5100.DR,x
				sta (ZPBufPtr),y
				iny
				bne .2
				inc ZPBufPtr+1
				bne .2

.4				>AR.SELECT S0.RX.RD

				lda Offset
				clc
				adc RXTX.Size
				pha						save LO

				lda Offset+1
				adc RXTX.Size+1
				
				sta W5100.DR,x			write HI
				pla
				sta W5100.DR,x			write LO

				>AR.SELECT S0.CR
				lda #W5100.AR.S0.CR.RCVD
				sta W5100.DR,x

.8				ldx	#$ff				SELF MODIFIED hMem

				plp
				clc
				rts
*--------------------------------------
WRITE			php
				sei
				
				>STYA ZPIOCTL
				
				ldx DEVSLOTx0

				ldy #S.IOCTL.BYTECNT
				lda (ZPIOCTL),y
				sta RXTX.Size
				eor #$ff
				sta Counter

				iny
				lda (ZPIOCTL),y
				sta RXTX.Size+1
				eor #$ff
				sta Counter+1
				
				>AR.SELECT S0.TX.FSR
				
				lda W5100.DR,x		get send size HI
				ldy W5100.DR,x      LO
				cpy RXTX.Size
				sbc RXTX.Size+1
				bcs WRITE.1

				lda #MLI.E.EOF
				
				plp
				sec
				rts
				
WRITE.1			ldy #S.IOCTL.BUFPTR
				lda (ZPIOCTL),y
				sta ZPBufPtr
				iny
				lda (ZPIOCTL),y
				sta ZPBufPtr+1
				
				ldy #S.ETH.SRCMAC+5
				ldx #5
				
.1				lda DCB+S.DCB.NIC.MAC,x
				sta (ZPBufPtr),y
				dey
				dex
				bpl .1

				ldx DEVSLOTx0
				
				>AR.SELECT S0.TX.WR
				lda W5100.DR,x			Get HI
				ldy W5100.DR,x			Get LO
				and /RXTX.MASK
				ora /TX.BASE
				sta W5100.AR,x			Write HI
				sta Offset+1
				tya
				sta W5100.AR+1,x		Write LO
				sta Offset
				
				ldy #0
				
.2				inc Counter
				bne .3

				inc Counter+1
				beq .8
				
.3				lda (ZPBufPtr),y
				sta W5100.DR,x
				iny
				bne .2
				inc ZPBufPtr+1
				bne .2
				
.8				>AR.SELECT S0.TX.WR
				
				lda Offset
				clc
				adc RXTX.Size
				pha						save LO
				
				lda Offset+1
				adc RXTX.Size+1
				sta W5100.DR,x			write HI
				pla
				sta W5100.DR,x			write LO
				
				>AR.SELECT S0.CR
				lda #W5100.AR.S0.CR.SEND
				sta W5100.DR,x

				plp
				clc
				rts
*--------------------------------------
DRV.CS.END
DEVSLOTx0		.BS 1
*--------------------------------------
DIB				.DA #0
				.DA #0,#0,#0			size
				>PSTR "UtherNetII/W5100"
				.DA #S.DIB.T.NIC
				.BS 1					Subtype
				.DA K.VER				Version
*--------------------------------------
DCB				.DA #S.DCB.T.NIC
				.DA #0					FLAGS
				.DA #S.DCB.NIC.LINK.OK+S.DCB.NIC.LINK.FD
				.DA #S.DCB.NIC.SPEED.100
				.HS 0008DC123456		MAC
				.BS 12					IP/MASK/GW
*--------------------------------------
DRV.END
MAN
SAVE /A2OSX.SRC/DRV/UTHERNET2.DRV.S
ASM
