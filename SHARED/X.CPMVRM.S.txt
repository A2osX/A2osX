NEW
  AUTO 3,1
				.LIST OFF
*--------------------------------------
X.RESET.SRC.DIR	.EQ 0					single pass
*--------------------------------------
				.DUMMY
				.OR ZPBIN
ZS.START
ZPPtr1			.BS 2
ZPPtr2			.BS 2
ZPFileName		.BS 2
ZPFileStat		.BS 2

bContinue		.BS 1
bRecurse		.BS 1
bQuiet			.BS 1
bPause			.BS 1

Count			.BS 2

PageCount		.EQ *
ArgIndex		.BS 1

pSrcFullPath	.BS 2

				.DO X.COPY.TO.DEST=1
X.COPY.MINBUF	.EQ 1024
X.COPY.MAXBUF	.EQ 16384

bNoConfirm		.BS 1

pDstFullPath	.BS 2
pSrcFile		.BS 2
pDstFile		.BS 2
pCopyBuf		.BS 2
				.FIN

ZS.END			.ED
*--------------------------------------
*			File Header (16 Bytes)
*--------------------------------------
CS.START		cld
				jmp (.1,x)
				.DA #$61				6502,Level 1 (65c02)
				.DA #2					BIN Layout Version 2
				.DA #0					S.PS.F.EVENT
				.DA #0
				.DA CS.END
				.DA ID.END
				.DA DS.END
				.DA #64					Stack Size
				.DA #ZS.END-ZS.START	Zero Page Size
*--------------------------------------
* Relocation Table
*--------------------------------------
.1				.DA CS.INIT
				.DA CS.RUN
				.DA CS.SIG
				.DA	CS.QUIT
L.MSG.USAGE		.DA MSG.USAGE
L.MSG.DIR		.DA MSG.DIR
L.MSG.REG		.DA MSG.REG
				.DO X.COPY.TO.DEST=1
L.MSG.OVERWRITE	.DA MSG.OVERWRITE
				.FIN
L.MSG.OK		.DA MSG.OK
L.MSG.ERR		.DA MSG.ERR
L.MSG.CRLF		.DA MSG.CRLF
L.MSG.DONE		.DA MSG.DONE
				.DA 0
*--------------------------------------
CS.INIT			clc
CS.INIT.RTS		rts
*--------------------------------------
CS.RUN			jsr CS.RUN.CheckOpt
				bcs CS.INIT.RTS

				>LDYAI 256
				>LIBC Malloc
				bcs CS.INIT.RTS

				>STYA pSrcFullPath

				.DO X.COPY.TO.DEST=1
				>LDYAI 256
				>LIBC Malloc
				bcs CS.INIT.RTS

				>STYA pDstFullPath
				.FIN
*--------------------------------------
CS.RUN.Loop		>SLEEP

				jsr X.CheckCtrl
				bcs .99

				bvs CS.RUN.Loop

				jsr X.GetEntry
				bcs .80

				jsr X.IncludeMatch
				bcs .8					no match, skip....

				jsr X.IgnoreMatch
				bcc .8

				jsr CS.RUN.BuildFilePath

				ldy #S.STAT.MODE+1
				lda (ZPFileStat),y
				and #$70
				bne .1					REG file ?

				jsr CS.RUN.REG
				bra .7
*--------------------------------------
.1				cmp /S.STAT.MODE.DIR	DIR ?
				bne .98

				bit bRecurse
				bpl .8

				lda (ZPFileName)
				cmp #'.'
				bne .2					Skip "." & ".."

				ldy #1
				lda (ZPFileName),y
				beq .8

				cmp #'.'
				bne .2					Skip "." & ".."

				iny
				lda (ZPFileName),y
				beq .8

.2				jsr CS.RUN.DIR

.7				jsr CS.RUN.CheckErr
				bcs .99

.8				jsr X.GetNextEntry
				bcc CS.RUN.Loop

.80				jsr CS.RUN.LEAVE
				bcc .8

				rts

.98				lda #MLI.E.UNSUPST
				sec
.99				rts
*--------------------------------------
CS.RUN.LEAVE 	jsr X.LeaveSubDir		exit this sub dir....
				bcs .90					base, we are done, exit

				jsr X.BasePath..
				.DO X.DELETE.SOURCE=1

				jsr X.GetEntry
				jsr CS.RUN.BuildFilePath
				jsr CS.RUN.DIR.MSG
				bcs .99

				>LDYA pSrcFullPath
				>LIBC Remove
				.ELSE
				clc
				.FIN

				rts

.90				bit bQuiet
				bmi .98

				>SS
				>PUSHW L.MSG.DONE
				>PUSHW Count
				>PUSHBI 2
				>LIBC PrintF
				>SR
				bcs .99

.98				lda #0
				sec
.99				rts
*--------------------------------------
CS.RUN.DIR		jsr CS.RUN.DIR.MSG
				bcs .99

				.DO X.COPY.TO.DEST=1

				jsr CS.RUN.CheckOverwrite
				bcs .99					ABORT

				bmi .99					NO

				bne .8					YES, no create but enter

				>SS
				>PUSHW pDstFullPath		NOT EXISTS
				ldy #S.STAT.MODE+1
				lda (ZPFileStat),y
				>PUSHA
				dey
				lda (ZPFileStat),y
				>PUSHA
				>LIBC MKDir
				>SR
				bcs .99

				jsr CS.RUN.IncCount
				.FIN

.8				>LDYA ZPFileName
				jmp X.EnterSubDirYA

.99				rts
*--------------------------------------
CS.RUN.REG		ldx #2
				jsr CS.RUN.REG.MSG
				bcs .99

				.DO X.COPY.TO.DEST=1

				jsr CS.RUN.CheckOverwrite
				bcs .99					ABORT

				bmi .99					do not overwrite

.2				.DO X.DELETE.SOURCE=1	mv file, check if srcbase=dstbase
				bne .3					overwrite, copy over

				>SS
				>PUSHW.G pSrcBasePath
				>PUSHW.G pDstBasePath
				>LIBC StrCaseCmp
				>SR
				bcs .3					not same dir, go copy/delete

				>SS
				>PUSHW pSrcFullPath
				>PUSHW pDstFullPath
				>LIBC Rename
				>SR
				bcc .8

				rts

				.FIN
.3				jsr CS.RUN.CopyStart
				bcs .99

				.FIN

.4				.DO X.DELETE.SOURCE=1

				>LDYA pSrcFullPath
				>LIBC Remove
				bcs .99

				.FIN

.8				jmp CS.RUN.IncCount

.99				rts
*--------------------------------------
CS.RUN.DIR.MSG	ldx #0

CS.RUN.REG.MSG	bit bQuiet
				bmi .8

				>LDYA L.MSG.DIR,x

				>SS
				>PUSHYA
				>PUSHW pSrcFullPath

				.DO X.COPY.TO.DEST=1
				>PUSHW pDstFullPath
				>PUSHBI 4
				.ELSE
				>PUSHBI 2
				.FIN

				>LIBC PrintF
				>SR
				rts

.8				clc
				rts
*--------------------------------------
CS.RUN.CR		>SS
				>PUSHW L.MSG.CRLF
				>PUSHBI 0
				>LIBC PrintF
				>SR
CS.RUN.CR.RTS	rts
*--------------------------------------
				.DO X.COPY.TO.DEST=1
CS.RUN.CopyStart
				stz pSrcFile+1
				stz pDstFile+1
				stz pCopyBuf+1

				>LDYA pSrcFullPath
				clc
				jsr CS.RUN.Open
				bcs .9

				>STYA pSrcFile

				>LDYA pDstFullPath
				sec
				jsr CS.RUN.Open

				bcs .9

				>STYA pDstFile

				lda /X.COPY.MAXBUF

.1				sta PageCount

				ldy #0
				>LIBC Malloc
				bcc .2

				tax

				lda PageCount
				lsr
				cmp /X.COPY.MINBUF
				bcs .1

				txa
				sec
.9				jmp CS.RUN.CopyEnd

.2				>STYA pCopyBuf
*--------------------------------------
CS.RUN.Copy		>SS
				>PUSHW pSrcFile
				>PUSHW pCopyBuf			Dst Ptr
				>PUSHB PageCount		Bytes To Read
				>PUSHBI 0
				>LIBC FRead
				>SR

				bcc .1

				cmp #MLI.E.EOF
				sec
				bne CS.RUN.CopyEnd

				lda #0
				clc
				bra CS.RUN.CopyEnd

.1				>STYA ZPPtr2

				>SS
				>PUSHW pDstFile
				>PUSHW pCopyBuf			Src Ptr
				>PUSHW ZPPtr2			Bytes To Write
				>LIBC FWrite
				>SR
				bcs CS.RUN.CopyEnd

				bit bQuiet
				bmi .2

				lda #'.'
				>LIBC PutChar

.2				jsr	X.CheckCtrl
				bcs CS.RUN.CopyEnd
				
				bvs .2

				lda ZPPtr2+1
				cmp PageCount
				bcc CS.RUN.CopyEnd

				jmp CS.RUN.Copy
*--------------------------------------
CS.RUN.CopyEnd	php
				pha

				>LDYA pDstFile
				beq .1

				>LIBC FClose

.1				>LDYA pSrcFile
				beq .2

				>LIBC FClose

.2				>LDYA pCopyBuf
				beq .3

				>LIBC Free

.3				pla
				plp

CS.RUN.Copy.RTS	rts
				.FIN
*--------------------------------------
CS.RUN.Open		>SS
				>PUSHYA

				lda #O.RDONLY
				bcc .1

				lda #O.WRONLY+O.CREATE

.1				>PUSHA

				ldy #S.STAT.P.TYPE
				>PUSHB (ZPFileStat),y

				ldy #S.STAT.P.AUXTYPE+1
				>PUSHB (ZPFileStat),y
				dey
				>PUSHB (ZPFileStat),y

				>LIBC FOpen
				>SR
				rts
*--------------------------------------
CS.RUN.CheckErr	bcs .1

				bit bQuiet
				bmi .8

				>LDYA L.MSG.OK
				>LIBC PutS

.8				rts

.1				pha
				tay

				>SS
				>PUSHW L.MSG.ERR
				tya
				>PUSHA
				>PUSHBI 1
				>LIBC PrintF
				>SR

				pla
				sec
				bit bContinue
				bpl .99

				clc

.99				rts
*--------------------------------------
CS.RUN.BuildFilePath
				>SS
				>PUSHW pSrcFullPath
				>PUSHW.G pSrcBasePath
				>LIBC StrCpy
				>SR

				>SS
				>PUSHW pSrcFullPath
				>PUSHW ZPFileName
				>LIBC StrCat
				>SR

				.DO X.COPY.TO.DEST=1
				>SS
				>PUSHW pDstFullPath
				>PUSHW.G pDstBasePath
				>LIBC StrCpy
				>SR

				>SS
				>PUSHW pDstFullPath
				>LDYA.G pDstFileName
				cmp #0
				bne .1

				>LDYA ZPFileName

.1				>PUSHYA
				>LIBC StrCat
				>SR
				.FIN
				rts
*--------------------------------------
CS.RUN.IncCount	inc Count
				bne .8

				inc Count+1

.8				rts
*--------------------------------------
				.DO X.COPY.TO.DEST=1
CS.RUN.CheckOverwrite
*--------------------------------------
				>SS
				>PUSHW pDstFullPath
				>PUSHEA.G STATBUF
				>LIBC Stat
				>SR
				bcs .8					File Not exists...

				bit bNoConfirm
				bmi .4					no prompt, override

				bit bQuiet
				bmi .10

				jsr CS.RUN.CR

.10				>SS
				>PUSHW L.MSG.OVERWRITE
				>PUSHW pDstFullPath
				>PUSHBI 2
				>LIBC PrintF
				>SR
				bcs .99

.1				>LIBC GetChar

				cmp #3
				beq .99					abort

				jsr X.ToUpper

				cmp #'N'
				bne .2

				lda #$80				EXISTS, NO OVERWRITE
				clc
				rts

.2				cmp #'Y'
				beq .4

.3				cmp #'A'
				bne .1

*				sec
				ror bNoConfirm

.4				lda #$01				EXISTS, OVERWRITE
				clc
				rts

.8				lda #0					NOT EXISTS
				clc
.99				rts
				.FIN
*--------------------------------------
CS.RUN.CheckOpt	jsr CS.RUN.NextOpt
				bcs .7

				>STYA ZPPtr1

				lda (ZPPtr1)
				cmp #'-'
				bne .5

				ldy #1
				lda (ZPPtr1),y
				beq .98

.1				ldx #OptionVars-OptionList-1

.2				cmp OptionList,x
				beq .3

				dex
				bpl .2

.98				>LDYA L.MSG.USAGE
				>LIBC PutS
				lda #E.SYN
				sec
.99				rts

.3				lda OptionVars,x
				beq .4					-I

				tax
				dec 0,x

				iny
				lda (ZPPtr1),y
				bne .1

				bra CS.RUN.CheckOpt

.4				iny
				lda (ZPPtr1),y
				bne .98

				>LDYA.G pIgnore
				cmp #0
				bne .98

				jsr CS.RUN.NextOpt
				bcs .98

				>LIBC StrDup
				bcs .99

				>STYA.G pIgnore
				bra CS.RUN.CheckOpt
*--------------------------------------
.5				>LDA.G index

				.DO X.COPY.TO.DEST=1
				bne .6					Already have a Src dir...
				.ELSE
				bne .98
				.FIN

				jsr X.InitSrcDirPtr1
				bcc CS.RUN.CheckOpt		success, scan for any other args

				rts

				.DO X.COPY.TO.DEST=1
.6				>LDA.G pDstBasePath+1
				bne .98					we already have a second arg....error!

				jsr X.InitDstDirPtr1
				bcc CS.RUN.CheckOpt		success, scan for any other args

				bra .98

				.FIN
*--------------------------------------
.7				>LDA.G index			processed all args
				beq .98					, no src ? ERROR

				.DO X.COPY.TO.DEST=1
				>LDA.G pDstBasePath+1
				bne .8					we also have a Dst folder

				ldy #S.PS.pCWD			no dst folder, use actual prefix
				jsr A2osX.GetPSy
				pha
				iny
				jsr A2osX.GetPSy
				ply
				jsr X.InitDstDirYA
				bcs .99
				.FIN

.8				clc
				rts
*--------------------------------------
CS.RUN.NextOpt	inc ArgIndex
				lda ArgIndex
				>LIBC ArgV
				rts
*--------------------------------------
CS.SIG			sec
				rts
*--------------------------------------
CS.QUIT			jsr X.Quit

				.DO X.COPY.TO.DEST=1

				>LDYA pDstFullPath
				beq .1

				>LIBC Free

.1				.FIN

				>LDYA pSrcFullPath
				beq .2

				>LIBC Free

.2				clc
				rts
*--------------------------------------
MAN
SAVE usr/src/shared/x.cpmvrm.s
LOAD usr/src/bin/cp.s
ASM
