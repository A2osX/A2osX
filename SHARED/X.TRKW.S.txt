NEW
  AUTO 3,1
*--------------------------------------
* In:
* X = Slotn0
* ZPPtr1 = pSrcBuf
*--------------------------------------
X.TrkW			lda IO.D2.ReadProt,x
				lda IO.D2.ReadMode,x
				bmi .9					Write protected

				ldy ZPPtr1
				stz ZPPtr1

				lda (ZPPtr1),y

				iny

*				bne .10					no chance this happens because mem blocks are $FFF0 aligned....
*				inc ZPPtr1+1
*.10

				cmp	#$80				if CC, it is a sync byte
				ora #$80				make sure Bit7 high

				sta IO.D2.WriteMode,x	(5) goto write mode
				ora IO.D2.WShift,x		(4)

				nop						(2)

				bra .2					(3)

.1				lda (ZPPtr1),y			(5) as NibbleBuf is page aligned, no page crossing
				beq	.8					(2)(3 if Z) END OF TRACK
* nobody will never try to write 00000000, right?

				cmp	#$80				(2) if CC, it is a sync byte
				ora #$80				(2) make sure Bit7 high
				sta IO.D2.WLoad,x		(5)
				ora IO.D2.WShift,x		(4) keep C unmodified
				iny						(2)
				bne .2					(2)(3 if nz)

* 32us Byte,next page :	2 (beq failed)+5 +2+2+5+4+2+2 (bne failed) + 5 + 3 (bcs succeeded) = 32
				inc ZPPtr1+1			(5)

				bcs .1					(2)(3 if cs) regular 32us byte

* 40us Byte,next page :	2 (beq failed) +2+2+5+4+2+2 (bne failed) + 5 + 2 (bcs failed) +2+2+2+3 = 40
				nop						(2) Sync 40us byte : add 8 cycles
				nop						(2)
				nop						(2)

				bra .1					(3)

* 32us Byte,same page :	5+2 (beq failed) +2+2+5+4+2+3 (bne succeeded) + 2 +2 + 3 (bcs succeeded) = 32
.2				nop						(2)
				nop						(2)

				bcs .1					(2)(3 if cs) regular 32us byte

* 40us Byte,same page :	5+2 (beq failed) +2+2+5+4+2+2 (bne failed) + 5 + 2 (bcs failed) +2+2+2+3 = 40
				nop						(2) Sync 40us byte : add 8 cycles
				nop						(2)
				nop						(2)

				bra .1					(3)

.8				pha						(3) make sure 32us elapsed before switching to read mode (beq(3)+pha(3)=beq(2)+cmp(2)+ora(2))
				lda IO.D2.ReadMode,x	close write mode
				lda IO.D2.RData,x
				pla						from pha (3)

				clc
				rts

.9				lda #MLI.E.WRTPROT
				sec
				rts
*--------------------------------------
				.LIST ON
X.TrkW.Size 	.EQ *-X.TrkW
				.LIST OFF
*--------------------------------------
MAN
SAVE usr/src/shared/x.trkw.s
LOAD usr/src/lib/libblkdev.s
ASM
