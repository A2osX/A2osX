NEW
  AUTO 3,1
				.LIST OFF
*--------------------------------------
* Software Switches
*--------------------------------------
IO.KBD			.EQ $C000				R
IO.CLR80STORE	.EQ $C000				W
IO.SET80STORE	.EQ $C001				W
IO.CLRREADAUX	.EQ $C002				W
IO.SETREADAUX	.EQ $C003				W
IO.CLRWRITEAUX	.EQ $C004				W
IO.SETWRITEAUX	.EQ $C005				W
IO.CLRCXROM		.EQ $C006				W
IO.SETCXROM		.EQ $C007				W
IO.CLRALTZP		.EQ $C008				W
IO.SETALTZP		.EQ $C009				W
IO.CLRC3ROM		.EQ $C00A				W
IO.SETC3ROM		.EQ $C00B				W
IO.CLR80DISP	.EQ $C00C				W
IO.SET80DISP	.EQ $C00D				W
IO.CLRALTCHAR	.EQ $C00E				W
IO.SETALTCHAR	.EQ $C00F				W
IO.KBDSTROBE	.EQ	$C010				W
IO.RDLCBNK2		.EQ $C011				R
IO.RDLCRAM		.EQ $C012				R
IO.RDREADAUX	.EQ $C013				R
IO.RDWRITEAUX	.EQ $C014				R
IO.RDCXROM		.EQ $C015				R
IO.RDALTZP		.EQ $C016				R
IO.RDC3ROM		.EQ $C017				R
IO.RD80STORE	.EQ $C018				R
IO.VBL			.EQ	$C019				R
IO.RDTEXT		.EQ	$C01A				R
IO.RDMIXED		.EQ	$C01B				R
IO.RDPAGE2		.EQ	$C01C				R
IO.RDHIRES		.EQ	$C01D				R
IO.RDALTCHAR	.EQ $C01E				R
IO.RD80DISP		.EQ $C01F				R
*IO.TAPEOUT		.EQ $C020				W
IO.SPEAKER 		.EQ $C030 				W, toggle speaker diaphragm 
*IO.STROBE		.EQ $C040 				R, generate .5 uS low pulse @ Game pin 5 
*IO.RDVBLIIC	.EQ $C05A				R, VBL switch Status (IIc)
				
*IO.EMUBYTE		.EQ	$C04F				WRR, Write once then Read EMUL, Read Version
				
IO.CLRTEXT		.EQ $C050				W
IO.SETTEXT		.EQ $C051				W
IO.CLRMIXED		.EQ $C052				W
IO.SETMIXED		.EQ $C053				W
IO.CLRPAGE2		.EQ $C054				W
IO.SETPAGE2		.EQ $C055				W
IO.CLRHIRES		.EQ $C056				W
IO.SETHIRES		.EQ $C057				W

*IO.SETAN0		.EQ $C058 				W, Set annunciator-0 output to 0 
*IO.CLRAN0		.EQ $C059 				W, Set annunciator-0 output to 1 
*IO.SETAN1		.EQ $C05A 				W, Set annunciator-1 output to 0 
*IO.CLRAN1		.EQ $C05B 				W, Set annunciator-1 output to 1
*IO.SETAN2		.EQ $C05C 				W, Set annunciator-2 output to 0 
*IO.CLRAN2		.EQ $C05D 				W, Set annunciator-2 output to 1 
IO.SETAN3		.EQ $C05E 				W, Set annunciator-3 output to 0 
IO.CLRAN3		.EQ $C05F 				W, Set annunciator-3 output to 1 
				
IO.SETDHIRES	.EQ $C05E 				W, if IOUDIS Set, turn on double-hires 
IO.CLRDHIRES	.EQ $C05F 				W, if IOUDIS Set, turn off double-hires 
				
*IO.TAPEIN		.EQ $C060				R
				
IO.OPENAPPLE	.EQ $C061				R	
IO.SOLIDAPPLE	.EQ $C062				R
*IO.PB2			.EQ $C063				R

*IO.PADDLE0		.EQ	$C064 				R, bit 7 = status of pdl-0 timer
*IO.PADDLE1		.EQ	$C065 				R, bit 7 = status of pdl-1 timer
*IO.PADDLE2		.EQ	$C066 				R, bit 7 = status of pdl-2 timer
*IO.PADDLE3		.EQ	$C067 				R, bit 7 = status of pdl-3 timer

*IO.PDLTRIG 	.EQ $C070 				W, trigger paddles

IO.SETIOUDIS	.EQ $C07E 				W, enable DHIRES & disable $C058-5F
IO.RDIOUDIS		.EQ $C07E 				R, bit 7 = IOUDIS status
IO.CLRIOUDIS	.EQ $C07F				W, disable DHIRES & enable $C058-5F
*--------------------------------------
*IO.RRAMBNK2	.EQ $C080				R
IO.RROMWRAMBNK2	.EQ $C081				RR
IO.RROMBNK2		.EQ $C082				R
IO.RRAMWRAMBNK2	.EQ $C083				RR
*IO.RRAMBNK1		.EQ $C088				R
*IO.RROMWRAMBNK1	.EQ $C089				RR
IO.RROMBNK1		.EQ $C08A				R
IO.RRAMWRAMBNK1	.EQ $C08B				RR
*--------------------------------------
IO.CLRC8ROM		.EQ $CFFF				R, Release C800-CFFF Rom Space for all cards
MAN
SAVE inc/io.i
