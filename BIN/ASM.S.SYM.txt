NEW
  AUTO 3,1
*---------------------------------------
* Global Symbol Record: (5+ bytes)
*  0 : Flags:
*  1-4 : 32 bits Value
*  5+  : Local Symbols.....
*---------------------------------------
* Local/Private Symbol Record: (4 bytes)
*  0 : Local ID (1->255)
*  1 : Macro Context ID (private)
*  2-3 : 16 bits offset (PC)
*---------------------------------------
SYM.Init		lda #SL..+SL._
				>KAPI SListNew
				bcs .9

				>STYA.G SYM.pList

				lda #SL..+SL._
				>KAPI SListNew
				bcs .9

				>STYA.G FWR.pList

				>LDYAI 256
				>LIBC Malloc
				bcs .9

				>STYA ZPSymbolBuf

.9				rts
*---------------------------------------
SYM.Quit		>LDYA ZPSymbolBuf
				beq .1

				>LIBC Free

.1				>LDYA.G FWR.pList
				cmp #0
				beq .2

				>KAPI SListFree

.2				>LDYA.G SYM.pList
				cmp #0
				beq .8

				>KAPI SListFree

.8
SYM.Quit.RTS	rts
*---------------------------------------
SYM.NewGlobal	jsr SYM.StoreGlobal		Store previous if any
				bcs SYM.Quit.RTS

				stz ZPMacroNextID
				
				>LDA.G ASM.PASS
				bne SYM.GetGlobal
*---------------------------------------
.10				stz SRC.ACC.F

				jsr SYM.FWRLookup
				bcs .1
				
				lda #SYMG.F.FWREF
				tsb SRC.ACC.F

.1				>SS
				>PUSHW.G SYM.pList
				>PUSHW ZPLinePtr
				>PUSHWZ					ScopeID
				>PUSHWI ZPLinePtr		NextPtr
				>KAPI SListNewKey
				>SR
				bcs .9					Already Defined

				>STYA.G SYM.ID

				lda #SYMG
				>STA.G SYM.BufPtr
				tay
				lda #0
				sta (ZPSymbolBuf),y

				jsr SYM.PC2Global

				lda #$FF
				>STA.G SYM.bDirty
				
				.DO SYMDBG=1
				jsr SYM.DebugN
				.FIN

				clc
				rts

.9				cmp #E.DUPKEY
				sec
				bne .99

				lda #E.SYMBOL.REDEF

.99				rts
*---------------------------------------
SYM.GetGlobal	jsr SYM.SYMLookup		Pass #2: should be already defined...
				bcc .1
				
				lda #E.UNDEF.SYMBOL
*				sec
				rts

.1				>STYA.G SYM.ID

				>SS
				>PUSHW.G SYM.pList		Pass #2: Restore full context
				>PUSHW.G SYM.ID
				>PUSHW ZPSymbolBuf
				>PUSHWI $ffff			all
				>PUSHWZ					from Start
				>KAPI SListGetData
				>SR
				bcs .99

				ldy #SYMG

				lda (ZPSymbolBuf)		#SYMG.F
				bit #SYMG.F.LOCALS
				beq .7

.2				lda (ZPSymbolBuf),y
				beq .7
				
				tya
				clc
				adc #SYML
				tay
				bra .2

.7				tya
				>STA.G SYM.BufPtr
				
				lda (ZPSymbolBuf)		#SYMG.F
				bit #SYMG.F.EQU
				bne .8

				>LDA.G ASM.PC
				ldy #SYMG.V
				cmp (ZPSymbolBuf),y
				bne .98

				>LDA.G ASM.PC+1
				ldy #SYMG.V+1
				cmp (ZPSymbolBuf),y
				bne .98

.8				.DO SYMDBG=1
				jsr SYM.DebugG
				.FIN
				
				>STZ.G SYM.bDirty

				clc
				rts

.98				lda #E.OUT.OF.SYNC
				sec
.99				rts
*---------------------------------------
SYM.StoreGlobal	>LDA.G SYM.BufPtr
				beq .8

				>LDA.G SYM.bDirty
				beq .8
				
				>LDA.G ASM.PASS
				bne .8

				>SS
				>PUSHW.G SYM.pList
				>PUSHW.G SYM.ID
				>PUSHW ZPSymbolBuf

				>LDA.G SYM.BufPtr
				tay
				lda #0
				cpy #SYMG
				beq .1

				iny						Add 1 for \0 after locals/privates
				bne .1

				inc
			
.1				>PUSHYA

				>KAPI SListAddData
				>SR

				.DO SYMDBG=1
				php
				pha
				jsr SYM.DebugS
				pla
				plp
				.FIN

				bcs .9
				
				>STZ.G SYM.bDirty

.8				clc

.9				rts
*---------------------------------------
* From .EQ pass #2
*---------------------------------------
SYM.UpdateGlobal
				>SS
				>PUSHW.G SYM.pList
				>PUSHW.G SYM.ID
				>PUSHW ZPSymbolBuf

				>PUSHWI SYMG

				>KAPI SListSetData
				>SR

				.DO SYMDBG=1
				php
				pha
				jsr SYM.DebugU
				pla
				plp
				.FIN

.9				rts
*---------------------------------------
SYM.LookupGlobal
				jsr SYM.SYMLookup
				bcc .10

				>LDA.G ASM.PASS			pass#2?
				beq .11

				lda #E.UNDEF.SYMBOL
				sec
				rts

.11				lda #SYMG.F.FWREF
				tsb SRC.ACC.F

				lda #$FF
				sta SRC.ACC
				sta SRC.ACC+1

				jmp SYM.AddFWFef
*---------------------------------------
.10				>STYA R1			KeyID

.1				>LDA.G SYM.ID
				cmp R1
				bne .3

				iny
				lda (pData),y
				cmp R1+1
				bne .3

				ldy #SYMG-1

.2				lda (ZPSymbolBuf),y
				sta SRC.ACC.F,y
				dey
				bpl .2

				clc
				rts
*---------------------------------------
.3				>SS
				>PUSHW.G SYM.pList
				>PUSHW R1			KeyID
				>PUSHW L.SRC.ACC.F
				>PUSHWI SYMG
				>PUSHWZ					from Start
				>KAPI SListGetData
				>SR

				rts
*---------------------------------------
SYM.SYMLookup	>SS
				>PUSHW.G SYM.pList
				>PUSHW ZPLinePtr
				>PUSHWZ					ScopeID
				>PUSHWI ZPLinePtr		NextPtr
				>KAPI SListLookup
				>SR
				rts
*---------------------------------------
SYM.AddFWFef	>SS
				>PUSHW.G FWR.pList
				>PUSHW ZPLinePtr
				>PUSHWZ					ScopeID
				>PUSHWI ZPLinePtr		NextPtr
				>KAPI SListLookup
				>SR
				bcc .9					Already Defined

				jsr SYM.NewFWRef
				bcs .9
				
				>STYA.G FWR.ID

				>SS
				>PUSHW.G FWR.pList
				>PUSHW.G FWR.ID
				>PUSHW L.SRC.ACC.F
				>PUSHWI 1
				>KAPI SListAddData
				>SR

.9				rts
*---------------------------------------
SYM.NewFWRef	>SS
				>PUSHW.G FWR.pList
				>PUSHW ZPLinePtr
				>PUSHWZ					ScopeID
				>PUSHWI ZPLinePtr		NextPtr
				>KAPI SListNewKey
				>SR
				rts
*---------------------------------------
SYM.FWRLookup	>SS
				>PUSHW.G FWR.pList
				>PUSHW ZPLinePtr
				>PUSHWZ					ScopeID
				>PUSHWZ					NextPtr
				>KAPI SListLookup
				>SR
				rts
*---------------------------------------
SYM.NewPrivateA ldx ZPMacroCtxID

				bra SYM.NewLocal

SYM.NewLocalA	ldx #0

SYM.NewLocal	sta R3					local ID
				stx R3+1				Ctx ID
				
				>LDA.G SYM.BufPtr		not in a global label
				beq .91

				>LDA.G ASM.PASS
				bne SYM.GetLocalA
*---------------------------------------
				jsr SYM.LookupLocal		Pass #1: try to add
				bcc .98					Already Defined

				>LDA.G SYM.BufPtr
*				sec
				adc #SYML
				bcs .90

				lda (pData),y
				tay
				
				lda R3
				sta (ZPSymbolBuf),y

				lda R3+1
				iny
				sta (ZPSymbolBuf),y

				iny						Leave 2 bytes for offset
				iny
				
				iny
				lda #0
				sta (ZPSymbolBuf),y		ending \0
				
				tya
				>STA.G SYM.BufPtr
				
				jsr SYM.PC2Acc
				jsr SYM.Acc2Offset
				bcs .99

				lda (ZPSymbolBuf)
				ora #SYMG.F.LOCALS
				sta (ZPSymbolBuf)

				lda #$FF
				>STA.G SYM.bDirty

				.DO SYMDBG=1
				jsr SYM.DebugAL
				.FIN

				clc
				rts

.91				lda #E.INV.LABEL
				sec
				rts

.90				lda #E.TOO.MANY.LOCAL
				sec
				rts

.98				lda #E.SYMBOL.REDEF
				sec
.99				rts
*---------------------------------------
SYM.GetLocalA	jsr SYM.LookupLocal		Pass #2: must be defined
				bcs .9

				.DO SYMDBG=1
				jsr SYM.DebugGL
				.FIN

				clc
				rts
				
.9				lda #E.UNDEF.SYMBOL
				rts
*---------------------------------------
SYM.LookupLocal	lda (ZPSymbolBuf)
				and #SYMG.F.LOCALS
				beq .99

				ldy #SYMG

.1				lda (ZPSymbolBuf),y
				beq .99

				phy						SYML.ID

				lda (ZPSymbolBuf),y
				cmp R3
				bne .4

				iny						SYML.CtxID
				lda (ZPSymbolBuf),y
				cmp R3+1
				bne .4

				ldy #SYMG.V+3
				ldx #3

.2				lda (ZPSymbolBuf),y
				sta SRC.ACC,x
				dey
				dex
				bpl .2

				ply
				iny
				iny						SYML.O

				lda (ZPSymbolBuf),y
				clc
				adc SRC.ACC
				sta SRC.ACC

				iny
				lda (ZPSymbolBuf),y
				adc SRC.ACC+1
				sta SRC.ACC+1
				bcc .3

				inc SRC.ACC+2
				bne .3
				
				inc SRC.ACC+3

.3				clc
				rts

.4				pla
				clc
				adc #SYML
				tay
				bra .1

.99				lda #E.UNDEF.SYMBOL
				sec
				rts
*---------------------------------------
SYM.PC2Global	jsr SYM.PC2Acc

SYM.ACC2Global	ldy #SYMG-1

.1				lda SRC.ACC.F,y
				sta (ZPSymbolBuf),y
				dey
				bpl .1

				rts
*---------------------------------------
SYM.PC2Acc		ldy #ASM.PC+3
				ldx #3

.1				lda (pData),y
				sta SRC.ACC,x
				dey
				dex
				bpl .1

				rts
*---------------------------------------
SYM.Acc2Offset	sec

				lda SRC.ACC
				ldy #SYMG.V
				sbc (ZPSymbolBuf),y
				pha
				
				lda SRC.ACC+1
				ldy #SYMG.V+1
				sbc (ZPSymbolBuf),y
				pha

				>LDA.G SYM.BufPtr
				tay
				dey
				pla
				sta (ZPSymbolBuf),y
				pla
				dey
				sta (ZPSymbolBuf),y
				
				lda SRC.ACC+2
				ldy #SYMG.V+2
				sbc (ZPSymbolBuf),y
				bne .9
				
				lda SRC.ACC+3
				ldy #SYMG.V+3
				sbc (ZPSymbolBuf),y
				bne .9
				
				clc
				rts
				
.9				lda #E.RANGE
				sec
				rts				
*---------------------------------------
SYM.Dump.End	>SS

				>PUSHW L.MSG.SUMMARY
				>PUSHW R2
				>PUSHBI 2
				>LIBC PrintF
				>SR
				
				jmp OUT.PrintCR

SYM.Dump.8		clc
				rts
*---------------------------------------
SYM.Dump		>LDA.G bListAll
				bmi SYM.Dump.1

				>LDA.G ASM.LI.ON
				bpl SYM.Dump.8

SYM.Dump.1		>LDYA L.MSG.SYMBOLS
				>LIBC PutS

				stz R2
				lda #2
				sta R2+1

.1				>LDYA R2
				>STYA R1

				>SS
				>PUSHW.G SYM.pList
				>PUSHW R1
				>PUSHW ZPTmpBuf
				>KAPI SListGetByID
				>SR
				bcc .2
				
				jmp SYM.Dump.End

.2				>STYA R2			Save Next ID

				>SS
				>PUSHW.G SYM.pList
				>PUSHW R1			KeyID
				>PUSHW ZPSymbolBuf
				>PUSHWI $ffff			All
				>PUSHWZ					from Start
				>KAPI SListGetData
				>SR
				bcs .9
 
				jsr SYM.Dump.GLP
				bcs .9
				
				jmp .1

.9				rts
*---------------------------------------
SYM.Dump.GLP	jsr SYM.Dump.G
				bcs .9

				>LDYA ZPTmpBuf			Label
				>LIBC PutS

				ldx #5
				lda (ZPSymbolBuf)

				bit #SYMG.F.LOCALS
				beq .2

				jsr SYM.Dump.LP
				bcs .9

.2				cpx #5					already CR printed ?
				beq .8

				jmp OUT.PrintCR

.8				clc
.9				rts
*---------------------------------------
SYM.Dump.G		>SS
	
				ldx #8

				ldy #SYMG.V+3

.1				lda (ZPSymbolBuf),y
				bne .2

				dey
				dex
				dex
				bne .1

.2				txa
				lsr
				pha

				>PUSHB L.MSG.EQU0+1,x
				>PUSHB L.MSG.EQU0,x

				pla
				beq .4

				pha
				tax						byte count

				clc
				adc #SYMG.V

				tay

.3				dey
				lda (ZPSymbolBuf),y
				>PUSHA
				dex
				bne .3

				pla						Byte Count

.4				>PUSHA

				>LIBC PrintF
				>SR
				rts
*---------------------------------------
SYM.Dump.LP		ldy #SYMG

				ldx #5

.1				lda (ZPSymbolBuf),y
				beq .8

				phy

				phx
				
				>SS

				tax						ID

				iny
				lda (ZPSymbolBuf),y		MacID
				bne .3

				>PUSHW L.MSG.LSYMBOL
				txa
				>PUSHA

				jsr SYM.Dump.PushValueY

				lda #5
				bra .5

.3				>PUSHW L.MSG.PSYMBOL
				txa
				>PUSHA

				>PUSHB (ZPSymbolBuf),y

				jsr SYM.Dump.PushValueY

				lda #6

.5				>PUSHA

				>LIBC PrintF
				
				>SR

				plx
				dex
				bne .6

				jsr OUT.PrintCR
				ldx #5

.6				pla
				clc
				adc #SYML
				tay

				bra .1

.8				rts
*---------------------------------------
SYM.Dump.PushValueY
				iny
				lda (ZPSymbolBuf),y
				sta SRC.ACC

				iny
				lda (ZPSymbolBuf),y
				sta SRC.ACC+1

				stz SRC.ACC+2
				stz SRC.ACC+3

				ldy #SYMG.V
				ldx #0

				clc

.1				lda (ZPSymbolBuf),y
				adc SRC.ACC,x
				sta SRC.ACC,x
				iny
				inx
				txa
				eor #4
				bne .1

				ldx #3

.2				lda	SRC.ACC,x
				>PUSHA
				dex
				bpl .2

				rts
*---------------------------------------
				.DO SYMDBG=1
SYM.DebugN		>SS
				>PUSHW L.MSG.SYMDBGN
				bra SYM.Debug

SYM.DebugG		>SS
				>PUSHW L.MSG.SYMDBGG
				bra SYM.Debug

SYM.DebugS		>SS
				>PUSHW L.MSG.SYMDBGS
				bra SYM.Debug

SYM.DebugU		>SS
				>PUSHW L.MSG.SYMDBGU
				bra SYM.Debug
				
SYM.DebugAL		>SS
				>PUSHW L.MSG.SYMDBGAL

				bra SYM.Debug
				
SYM.DebugGL		>SS
				>PUSHW L.MSG.SYMDBGGL

SYM.Debug		>PUSHW.G SYM.ID

				>PUSHB.G SYM.BufPtr
				
				lda (ZPSymbolBuf)
				>PUSHA
				
				ldy #SYMG.V+3

.1				lda (ZPSymbolBuf),y
				>PUSHA
				dey
				bne .1

				>PUSHBI 8
				>LIBC PrintF
				>SR

				lda (ZPSymbolBuf)		#SYMG.F
				bit #SYMG.F.LOCALS
				beq .8

				jsr OUT.PrintCR

				ldy #SYMG

.2				lda (ZPSymbolBuf),y
				beq .8
				
				phy
				iny
				lda (ZPSymbolBuf),y		#SYML.CtxID
				bne .3
				
				>SS
				>PUSHW L.MSG.SYMDBGL
			
				jsr .80
				
				>PUSHBI 3

				bra .7
				
.3				>SS
				>PUSHW L.MSG.SYMDBGP
				
				lda (ZPSymbolBuf),y		#SYML.CtxID
				>PUSHA
				
				jsr .80
				
				>PUSHBI 4

.7				>LIBC PrintF
				>SR
				
				pla
				clc
				adc #SYML
				tay
				bra .2

.8				jmp OUT.PrintCR

.80				dey
				lda (ZPSymbolBuf),y		#SYML.ID
				>PUSHA
				iny
				iny
				iny
				lda (ZPSymbolBuf),y
				>PUSHA
				dey
				lda (ZPSymbolBuf),y
				>PUSHA
				rts

				.FIN
*---------------------------------------
MAN
SAVE usr/src/bin/asm.s.sym
LOAD usr/src/bin/asm.s
ASM
