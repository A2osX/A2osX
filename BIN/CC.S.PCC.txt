NEW
  AUTO 3,1
*--------------------------------------
* PCC = Pre Compiled Code
*--------------------------------------
ZS.RT.Ptr1		.EQ ZPBIN
ZS.RT.Ptr2		.EQ ZPBIN+2
*--------------------------------------
PCC.FH			.PH $2000
PCC.FH.ORG		cld
				jmp (PCC.FH.JMP,x)
				.DA #$61				6502,Level 1 (65c02)
				.DA #2					BIN Layout Version 2
				.DA #0					S.PS.F.EVENT
				.DA #0
PCC.FH.CS.END	.EQ *-PCC.FH.ORG
			.DA $FFFF
PCC.FH.ID.END	.EQ *-PCC.FH.ORG
			.DA $FFFF
PCC.FH.DS.SIZE	.EQ *-PCC.FH.ORG
			.DA $FFFF					Data Size
				.DA #256				Stack Size
				.DA #4					ZP Size

PCC.FH.JMP		.DA PCC.FH.INIT
				.DA PCC.FH.RUN
				.DA PCC.FH.SIG
				.DA	PCC.FH.QUIT
PCC.FH.CONST 	.EQ *-PCC.FH.ORG
			.DA $FFFF
				.DA 0

PCC.FH.INIT		>LDYA PCC.FH.ORG+PCC.FH.CONST
				>STYA ZS.RT.Ptr1

				ldx #0

.1				lda (ZS.RT.Ptr1)
				beq .8

				phx

				>LDYA ZS.RT.Ptr1
				>LIBC LoadLib
				plx
				bcs .9

				>STYA PCC.PH.JMPLIBs+1,x
				inx
				inx
				inx

				ldy #0

.2				iny
				lda (ZS.RT.Ptr1),y
				bne .2

				tya
				sec
				adc ZS.RT.Ptr1
				sta ZS.RT.Ptr1
				bcc .1

				inc ZS.RT.Ptr1+1
				bra .1

.8				clc
.9				rts

PCC.FH.QUIT		ldx #9

.1				>LDYA PCC.PH.JMPLIBs+1,x
				beq .2

				phx
				>LIBC UnloadLib
				plx

.2				dex
				dex
				dex
				bpl .1

				clc
				rts

PCC.PH.JMPLIBs	jmp $0000
				jmp $0000
				jmp $0000
				jmp $0000

PCC.FH.SIG		sec
				rts

* int main(int argc, char *argv[]) ;

PCC.FH.RUN		lda #0

.1				pha
				>LIBC ArgV
				bcs .2

				>STYA ZS.RT.Ptr1

				pla
				pha
				asl
				tay

				lda ZS.RT.Ptr1
				sta (pData),y

				lda ZS.RT.Ptr1+1
				iny
				sta (pData),y

				pla
				inc
				bra .1

.2				pla
				jsr PCC.FH.CS			Execute INIT code

				>PUSHA					int ARGC (hi byte=0)

				ldy #S.PS.ARGC
				jsr A2osX.GetPSy
				>PUSHA					int ARGC (lo byte)

				>PUSHW pData			*char[] ARGV
*		>DEBUG
PCC.FH.MAIN		.EQ *-PCC.FH.ORG+1

			jsr $FFFF					jsr main
				
				tya						returned int in Y,A
				sec
				rts

PCC.FH.CS		.EP
PCC.FH.L		.EQ *-PCC.FH
*--------------------------------------
PCC.DEBUG		.DA #PCC.DEBUG.L
				>DEBUG
PCC.DEBUG.L		.EQ *-PCC.DEBUG-1
*--------------------------------------
PCC.SLEEP		.DA #PCC.SLEEP.L
				>SLEEP
PCC.SLEEP.L		.EQ *-PCC.SLEEP-1
*--------------------------------------
PCC.SF			.DA #PCC.SF.L
				ldx pStack
				dex
				dex
				dex
				dex
				dex
				stx pStack
*				stx pBase
PCC.SF.L		.EQ *-PCC.SF-1				
*--------------------------------------
PCC.SL			.DA #PCC.SL.L
				ldx pStack
				dex
				dex
				dex
				dex
				stx pStack
*				stx pBase
PCC.SL.L		.EQ *-PCC.SL-1
*--------------------------------------
PCC.SS			.DA #PCC.SS.L
				ldx pStack
				phx
PCC.SS.L		.EQ *-PCC.SS-1
*--------------------------------------
PCC.SR			.DA #PCC.SR.L
				plx
				stx pStack
PCC.SR.L		.EQ *-PCC.SR-1
*--------------------------------------
PCC.BS			.DA #PCC.BS.L
				ldx pBase
				phx
				ldx pStack
				stx pBase
PCC.BS.L		.EQ *-PCC.BS-1
*--------------------------------------
PCC.BR			.DA #PCC.BR.L
				plx
				stx pBase
PCC.BR.L		.EQ *-PCC.BR-1
*--------------------------------------
PCC.ADDLOCAL	.DA #PCC.ADDLOCAL.L
				clc
				adc pStack
				sta pStack

PCC.ADDLOCAL.L	.EQ *-PCC.ADDLOCAL-1
*--------------------------------------
PCC.REMLOCAL	.DA #PCC.REMLOCAL.L
				clc
				adc pStack
				sta pStack

PCC.REMLOCAL.L	.EQ *-PCC.REMLOCAL-1
*--------------------------------------
PCC.SetRetValue	.DA #PCC.SetRetValue.L

				ldy #0

.1				lda (pStack)
				inc pStack
				sta (pBase),y
				iny
				dex
				bne .1

PCC.SetRetValue.L	.EQ *-PCC.SetRetValue-1
*--------------------------------------
PCC.8to16		.DA #PCC.8to16.L
				lda (pStack)
				pha
				lda #0
				sta (pStack)
				pla
				>PUSHA

PCC.8to16.L		.EQ *-PCC.8to16-1
*--------------------------------------
PCC.JmpOnYA		.DA #PCC.JmpOnYA.L
				cmp (pStack)
				bne .2+5				skip JMP abs
				txa
				ldy #1
				cmp (pStack),y
.2				bne .2+5				skip JMP abs

PCC.JmpOnYA.L	.EQ *-PCC.JmpOnYA-1
*--------------------------------------
PCC.Pop16		.DA #PCC.Pop16.L
				inc pStack
				inc pStack
PCC.Pop16.L		.EQ *-PCC.Pop16-1
*--------------------------------------
PCC.TestZero1	.DA #PCC.TestZero1.L
				lda (pStack)
				inc pStack
				tay
.2				bne .2+5				skip JMP abs

PCC.TestZero1.L	.EQ *-PCC.TestZero1-1
*--------------------------------------
PCC.TestZero2	.DA #PCC.TestZero2.L
				lda (pStack)
				inc pStack
				ora (pStack)
				inc pStack
				tay
.2				bne .2+5				skip JMP abs

PCC.TestZero2.L	.EQ *-PCC.TestZero2-1
*--------------------------------------
PCC.TestZeroX	.DA #PCC.TestZeroX.L
				lda #0

.1				ora (pStack)
				inc pStack
				dex
				bne .1

				tay
.2				bne .2+5				skip JMP abs

PCC.TestZeroX.L	.EQ *-PCC.TestZeroX-1
*--------------------------------------
PCC.TestnZero1	.DA #PCC.TestnZero1.L
				lda (pStack)
				inc pStack
				tay
.2				beq .2+5				skip JMP abs

PCC.TestnZero1.L	.EQ *-PCC.TestnZero1-1
*--------------------------------------
PCC.TestnZero2	.DA #PCC.TestnZero2.L
				lda (pStack)
				inc pStack
				ora (pStack)
				inc pStack
				tay
.2				beq .2+5				skip JMP abs

PCC.TestnZero2.L	.EQ *-PCC.TestnZero2-1
*--------------------------------------
PCC.TestnZeroX	.DA #PCC.TestnZeroX.L
				lda #0

.1				ora (pStack)
				inc pStack
				dex
				bne .1

				tay
.2				beq .2+5				skip JMP abs

PCC.TestnZeroX.L	.EQ *-PCC.TestnZeroX-1
*--------------------------------------
PCC.PushLAddrH	.DA #PCC.PushLAddrH.L
				>PUSHB pBase+1
PCC.PushLAddrH.L	.EQ *-PCC.PushLAddrH-1
*--------------------------------------
PCC.PushLAddrL	.DA #PCC.PushLAddrL.L
				clc
				adc pBase
				>PUSHA
PCC.PushLAddrL.L	.EQ *-PCC.PushLAddrL-1
*--------------------------------------
PCC.GetIAddrY	.DA #PCC.GetIAddrY.L
				clc
				adc PCC.FH.ORG+PCC.FH.CONST
				tay
PCC.GetIAddrY.L	.EQ *-PCC.GetIAddrY-1
*--------------------------------------
PCC.GetIAddrA	.DA #PCC.GetIAddrA.L
				adc PCC.FH.ORG+PCC.FH.CONST+1
PCC.GetIAddrA.L	.EQ *-PCC.GetIAddrA-1
*--------------------------------------
PCC.PushIAddr	.DA #PCC.PushIAddr.L
				clc
				adc PCC.FH.ORG+PCC.FH.CONST
				dec pStack
				>PUSHA

				txa
				adc PCC.FH.ORG+PCC.FH.CONST+1
				ldy #1
				sta (pStack),y

PCC.PushIAddr.L	.EQ *-PCC.PushIAddr-1
*--------------------------------------
PCC.PushUAddr	.DA #PCC.PushUAddr.L
				clc
				adc pData
				dec pStack
				>PUSHA

				txa
				adc pData+1
				ldy #1
				sta (pStack),y

PCC.PushUAddr.L	.EQ *-PCC.PushUAddr-1
*--------------------------------------
PCC.GetLAddr1	.DA #PCC.GetLAddr1.L
				clc
				adc pBase
				sta ZS.RT.Ptr1
				lda pBase+1
				sta ZS.RT.Ptr1+1

PCC.GetLAddr1.L	.EQ *-PCC.GetLAddr1-1
*--------------------------------------
PCC.GetIAddr1	.DA #PCC.GetIAddr1.L
				clc
				adc PCC.FH.ORG+PCC.FH.CONST
				sta ZS.RT.Ptr1
				txa
				adc PCC.FH.ORG+PCC.FH.CONST+1
				sta ZS.RT.Ptr1+1

PCC.GetIAddr1.L	.EQ *-PCC.GetIAddr1-1
*--------------------------------------
PCC.GetUAddr1	.DA #PCC.GetUAddr1.L
				clc
				adc pData
				sta ZS.RT.Ptr1
				txa
				adc pData+1
				sta ZS.RT.Ptr1+1

PCC.GetUAddr1.L	.EQ *-PCC.GetUAddr1-1
*--------------------------------------
PCC.PopAddr1	.DA #PCC.PopAddr1.L
				lda (pStack)
				inc pStack
				sta ZS.RT.Ptr1
				lda (pStack)
				inc pStack
				sta ZS.RT.Ptr1+1

PCC.PopAddr1.L	.EQ *-PCC.PopAddr1-1
*--------------------------------------
PCC.PopValue1	.DA #PCC.PopValue1.L
				lda (pStack)
				inc pStack
				sta (ZS.RT.Ptr1)

PCC.PopValue1.L	.EQ *-PCC.PopValue1-1
*--------------------------------------
PCC.PopValue2	.DA #PCC.PopValue2.L
				lda (pStack)
				inc pStack
				sta (ZS.RT.Ptr1)
				lda (pStack)
				inc pStack
				ldy #1
				sta (ZS.RT.Ptr1),y

PCC.PopValue2.L	.EQ *-PCC.PopValue2-1
*--------------------------------------
PCC.PopValueX	.DA #PCC.PopValueX.L

				ldy #0

.1				lda (pStack)
				inc pStack
				sta (ZS.RT.Ptr1),y
				iny
				dex
				bpl .1

PCC.PopValueX.L	.EQ *-PCC.PopValueX-1
*--------------------------------------
PCC.GetLAddr2	.DA #PCC.GetLAddr2.L
				clc
				adc pBase
				sta ZS.RT.Ptr2
				lda pBase+1
				sta ZS.RT.Ptr2+1

PCC.GetLAddr2.L	.EQ *-PCC.GetLAddr2-1
*--------------------------------------
PCC.GetIAddr2	.DA #PCC.GetIAddr2.L
				clc
				adc PCC.FH.ORG+PCC.FH.CONST
				sta ZS.RT.Ptr2
				txa
				adc PCC.FH.ORG+PCC.FH.CONST+1
				sta ZS.RT.Ptr2+1

PCC.GetIAddr2.L	.EQ *-PCC.GetIAddr2-1
*--------------------------------------
PCC.GetUAddr2	.DA #PCC.GetUAddr2.L
				clc
				adc pData
				sta ZS.RT.Ptr2
				txa
				adc pData+1
				sta ZS.RT.Ptr2+1

PCC.GetUAddr2.L	.EQ *-PCC.GetUAddr2-1
*--------------------------------------
PCC.PopAddr2	.DA #PCC.PopAddr2.L
				lda (pStack)
				inc pStack
				sta ZS.RT.Ptr2
				lda (pStack)
				inc pStack
				sta ZS.RT.Ptr2+1

PCC.PopAddr2.L	.EQ *-PCC.PopAddr2-1
*--------------------------------------
PCC.Deref2		.DA #PCC.Deref2.L
				ldy #1
				lda (ZS.RT.Ptr2),y
				tay
				lda (ZS.RT.Ptr2)

				sta ZS.RT.Ptr2
				sty ZS.RT.Ptr2+1

PCC.Deref2.L	.EQ *-PCC.Deref2-1
*--------------------------------------
PCC.PushDeref2	.DA #PCC.PushDeref2.L
				ldy #1
				>PUSHB (ZS.RT.Ptr2),y
				>PUSHB (ZS.RT.Ptr2)

PCC.PushDeref2.L	.EQ *-PCC.PushDeref2-1
*--------------------------------------
PCC.GetValueA	.DA #PCC.GetValueA.L

				lda (ZS.RT.Ptr2)
				>PUSHA

PCC.GetValueA.L	.EQ *-PCC.GetValueA-1
*--------------------------------------
PCC.GetValueYA	.DA #PCC.GetValueYA.L

				ldy #1
				lda (ZS.RT.Ptr2),y
				>PUSHA
				lda (ZS.RT.Ptr2)
				>PUSHA

PCC.GetValueYA.L	.EQ *-PCC.GetValueYA-1
*--------------------------------------
PCC.PushValueY	.DA #PCC.PushValueY.L

.1				lda (ZS.RT.Ptr2),y
				>PUSHA
				dey
				bpl .1

PCC.PushValueY.L	.EQ *-PCC.PushValueY-1
*--------------------------------------
PCC.Inc1		.DA #PCC.Inc1.L
				lda (ZS.RT.Ptr2)
				inc
				sta (ZS.RT.Ptr2)
PCC.Inc1.L		.EQ *-PCC.Inc1-1
*--------------------------------------
PCC.Inc2		.DA #PCC.Inc2.L
				lda (ZS.RT.Ptr2)
				inc
				sta (ZS.RT.Ptr2)
				bne .1

				ldy #1
				lda (ZS.RT.Ptr2),y
				inc
				sta (ZS.RT.Ptr2),y

.1

PCC.Inc2.L		.EQ *-PCC.Inc2-1
*--------------------------------------
PCC.Inc4		.DA #PCC.Inc4.L
				lda (ZS.RT.Ptr2)
				inc
				sta (ZS.RT.Ptr2)
				bne .2

				ldy #1

.1				lda (ZS.RT.Ptr2),y
				inc
				sta (ZS.RT.Ptr2),y
				beq .2

				iny
				cpy #4
				bne .1

.2

PCC.Inc4.L		.EQ *-PCC.Inc4-1
*--------------------------------------
PCC.Dec1		.DA #PCC.Dec1.L
				lda (ZS.RT.Ptr2)
				dec
				sta (ZS.RT.Ptr2)
PCC.Dec1.L		.EQ *-PCC.Dec1-1
*--------------------------------------
PCC.Dec2		.DA #PCC.Dec2.L
				lda (ZS.RT.Ptr2)
				php
				dec
				sta (ZS.RT.Ptr2)
				plp
				bne .1

				ldy #1
				lda (ZS.RT.Ptr2),y
				dec
				sta (ZS.RT.Ptr2),y

.1

PCC.Dec2.L		.EQ *-PCC.Dec2-1
*--------------------------------------
PCC.Dec4		.DA #PCC.Dec4.L
				lda (ZS.RT.Ptr2)
				clc
				sbc #0
				sta (ZS.RT.Ptr2)
				bcs .2

				ldy #1

.1				lda (ZS.RT.Ptr2),y
				sbc #0
				sta (ZS.RT.Ptr2),y
				bcs .2

				iny
				cpy #4
				bne .1

.2

PCC.Dec4.L		.EQ *-PCC.Dec4-1
*--------------------------------------
PCC.BOPS.bMUL	.DA #PCC.BOPS.bMUL.L
				ldx #0					result

				lda (pStack)
				inc pStack
				tay						b2

.1				tya
				beq .8

				lsr
				tay
				bcc .2

				clc
				txa
				adc (pStack)			b1
				tax

.2				lda (pStack)			b1*2
				asl
				sta (pStack)
				bne .1

.8				txa
				sta (pStack)

PCC.BOPS.bMUL.L	.EQ *-PCC.BOPS.bMUL-1
*--------------------------------------
PCC.BOPS.cMUL
*--------------------------------------
PCC.BOPS.bDIV
*--------------------------------------
PCC.BOPS.cDIV
*--------------------------------------
PCC.BOPS.bMOD
*--------------------------------------
PCC.BOPS.cMOD
*--------------------------------------
PCC.BOPS.ADD	.DA #PCC.BOPS.ADD.L
				clc
				lda (pStack)
				inc pStack
				adc (pStack)
				sta (pStack)
PCC.BOPS.ADD.L	.EQ *-PCC.BOPS.ADD-1
*--------------------------------------
PCC.BOPS.SUB	.DA #PCC.BOPS.SUB.L
				sec
				ldy #1
				lda (pStack),y
				sbc (pStack)
				sta (pStack),y
				inc pStack
PCC.BOPS.SUB.L	.EQ *-PCC.BOPS.SUB-1
*--------------------------------------
PCC.BOPS.SHL	.DA #PCC.BOPS.SHL.L
				lda (pStack)
				inc pStack
				tax
				beq .8

				lda (pStack)

.1				asl
				dex
				bne .1

				sta (pStack)

.8
PCC.BOPS.SHL.L	.EQ *-PCC.BOPS.SHL-1
*--------------------------------------
PCC.BOPS.SHR	.DA #PCC.BOPS.SHR.L
				lda (pStack)
				inc pStack
				tax
				beq .8

				lda (pStack)

.1				lsr
				dex
				bne .1

				sta (pStack)

.8
PCC.BOPS.SHR.L	.EQ *-PCC.BOPS.SHR-1
*--------------------------------------
PCC.BOPS.L		.DA #PCC.BOPS.L.L
				lda (pStack)
				inc pStack
				cmp (pStack)
				bcc .8

				lda #0
				sta (pStack)
				rts

.8				lda #1
				sta (pStack)
PCC.BOPS.L.L	.EQ *-PCC.BOPS.L-1
*--------------------------------------
PCC.BOPS.G		.DA #PCC.BOPS.G.L
				lda (pStack)
				inc pStack
				cmp (pStack)
				beq .1
				bcs .8

.1				lda #0
				sta (pStack)
				rts

.8				lda #1
				sta (pStack)
PCC.BOPS.G.L	.EQ *-PCC.BOPS.G-1
*--------------------------------------
PCC.BOPS.LE		.DA #PCC.BOPS.LE.L
				lda (pStack)
				inc pStack
				cmp (pStack)
				bcc .8
				beq .8

				lda #0
				sta (pStack)
				rts

.8				lda #1
				sta (pStack)
PCC.BOPS.LE.L	.EQ *-PCC.BOPS.LE-1
*--------------------------------------
PCC.BOPS.GE		.DA #PCC.BOPS.GE.L
				lda (pStack)
				inc pStack
				cmp (pStack)
				bcs .8

				lda #0
				sta (pStack)
				rts

.8				lda #1
				sta (pStack)
PCC.BOPS.GE.L	.EQ *-PCC.BOPS.GE-1
*--------------------------------------
PCC.BOPS.EQ		.DA #PCC.BOPS.EQ.L
				lda (pStack)
				inc pStack
				cmp (pStack)
				beq .1

				lda #0
				clc

.1				ror
				sta (pStack)

PCC.BOPS.EQ.L	.EQ *-PCC.BOPS.EQ-1
*--------------------------------------
PCC.BOPS.NE		.DA #PCC.BOPS.NE.L
				lda (pStack)
				inc pStack
				eor (pStack)
				sta (pStack)

PCC.BOPS.NE.L	.EQ *-PCC.BOPS.NE-1
*--------------------------------------
PCC.BOPS.LAND
*--------------------------------------
PCC.BOPS.AND	.DA #PCC.BOPS.AND.L
				lda (pStack)
				inc pStack
				and (pStack)
				sta (pStack)
PCC.BOPS.AND.L	.EQ *-PCC.BOPS.AND-1
*--------------------------------------
PCC.BOPS.LOR
*--------------------------------------
PCC.BOPS.OR		.DA #PCC.BOPS.OR.L
				lda (pStack)
				inc pStack
				ora (pStack)
				sta (pStack)
PCC.BOPS.OR.L	.EQ *-PCC.BOPS.OR-1
*--------------------------------------
PCC.BOPS.EOR	.DA #PCC.BOPS.EOR.L
				lda (pStack)
				inc pStack
				eor (pStack)
				sta (pStack)
PCC.BOPS.EOR.L	.EQ *-PCC.BOPS.EOR-1
*--------------------------------------
MAN
SAVE usr/src/bin/cc.s.pcc
LOAD usr/src/bin/cc.s
ASM
