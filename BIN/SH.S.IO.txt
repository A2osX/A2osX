NEW
  AUTO 3,1
*--------------------------------------
IO.Reset		jsr IO.Reset.In
				jsr IO.Reset.Out
				jmp IO.Reset.Err
*--------------------------------------
IO.Pipe.In		ldx #O.RDONLY+O.TEXT
				jsr IO.Pipe.Open		Open last created PIPE
				bcs .9

				pha
				phy

				ldy #S.PS.pStdIn
				jsr A2osX.GetPSy
				>STA.G IO.pStdIn

				ldy #S.PS.pStdIn+1
				jsr A2osX.GetPSy
				>STA.G IO.pStdIn+1

				pla
				ldy #S.PS.pStdIn
				jsr A2osX.SetPSy
				
				pla
				iny
				jsr A2osX.SetPSy

.9				rts
*--------------------------------------
IO.Set.In		pha
				phy
				
				jsr IO.Reset.In
				
				ldy #S.PS.pStdIn
				jsr A2osX.GetPSy
				>STA.G IO.pStdIn
				
				ldy #S.PS.pStdIn+1
				jsr A2osX.GetPSy
				>STA.G IO.pStdIn+1

				pla
				ldy #S.PS.pStdIn
				jsr A2osX.SetPSy
				
				pla
				iny
				jsr A2osX.SetPSy

				rts
*--------------------------------------
IO.Pop.In		clc
				.HS B0					BCS
*--------------------------------------
IO.Reset.In		sec
				>LDA.G IO.pStdIn+1
				beq .8

				bcc .1

				ldy #S.PS.pStdIn
				jsr IO.Close.Y

.1				>LDA.G IO.pStdIn
				ldy #S.PS.pStdIn
				jsr A2osX.SetPSy
				
				>LDA.G IO.pStdIn+1
				ldy #S.PS.pStdIn+1
				jsr A2osX.SetPSy

				>STZ.G IO.pStdIn+1

.8				clc
				rts
*--------------------------------------
IO.Pipe.Out		>STZ.G IO.FIFONAME		kernel will create a new name

				>SS
				>PUSHEA.G IO.FIFONAME
				>PUSHWZ					mode
				>LIBC MKFIFO
				>SR
				bcs .9

				ldx #O.WRONLY+O.TEXT
				jsr IO.Pipe.Open		Open for OUTPUT
				bcs .9

				pha
				phy
				
				ldy #S.PS.pStdOut
				jsr A2osX.GetPSy
				>STA.G IO.pStdOut
				
				ldy #S.PS.pStdOut+1
				jsr A2osX.GetPSy
				>STA.G IO.pStdOut+1
				
				pla
				ldy #S.PS.pStdOut
				jsr A2osX.SetPSy

				pla
				iny
				jsr A2osX.SetPSy

.9				rts
*--------------------------------------
IO.Set.Out		pha
				phy
				
				jsr IO.Reset.Out

				ldy #S.PS.pStdOut
				jsr A2osX.GetPSy
				>STA.G IO.pStdOut
				
				ldy #S.PS.pStdOut+1
				jsr A2osX.GetPSy
				>STA.G IO.pStdOut+1
				
				pla
				ldy #S.PS.pStdOut
				jsr A2osX.SetPSy
				
				pla
				iny
				jsr A2osX.SetPSy
				
				clc
				rts
*--------------------------------------
IO.Pop.Out		clc
				.HS B0					BCS
*--------------------------------------
IO.Reset.Out	sec
				>LDA.G IO.pStdOut+1
				beq .8

				bcc .1

				ldy #S.PS.pStdOut
				jsr IO.Close.Y

.1				>LDA.G IO.pStdOut
				ldy #S.PS.pStdOut
				jsr A2osX.SetPSy
				
				>LDA.G IO.pStdOut+1
				ldy #S.PS.pStdOut+1
				jsr A2osX.SetPSy
				
				>STZ.G IO.pStdOut+1

.8				clc
				rts
*--------------------------------------
IO.Set.Err		pha
				phy
				
				jsr IO.Reset.Err

				ldy #S.PS.pStdErr
				jsr A2osX.GetPSy
				>STA.G IO.pStdErr
				
				ldy #S.PS.pStdErr+1
				jsr A2osX.GetPSy
				>STA.G IO.pStdErr+1

				pla
				ldy #S.PS.pStdErr
				jsr A2osX.SetPSy
				
				pla
				iny
				jsr A2osX.SetPSy
				
				rts
*--------------------------------------
IO.Reset.Err	>LDA.G IO.pStdErr+1
				beq .8

				ldy #S.PS.pStdErr
				jsr IO.Close.Y

				>LDA.G IO.pStdErr
				ldy #S.PS.pStdErr
				jsr A2osX.SetPSy
				
				>LDA.G IO.pStdErr+1
				ldy #S.PS.pStdErr+1
				jsr A2osX.SetPSy

				>STZ.G IO.pStdErr+1

.8				rts
*--------------------------------------
IO.Close.Y		jsr A2osX.GetPSy
				pha
				iny
				jsr A2osX.GetPSy
				ply
				>LIBC FClose
				rts
*--------------------------------------
IO.Pipe.Open	>LEA.G IO.FIFONAME
*--------------------------------------
IO.FOpenYAX		>STYA.G IO.OpenFile
				txa
				>STA.G IO.OpenMode

				>SS
				>PUSHW.G IO.OpenFile
				>PUSHB.G IO.OpenMode
				>PUSHBI S.FI.T.TXT
				>PUSHWZ					Aux type
				>LIBC FOpen
				>SR
				rts
*--------------------------------------
IO.StatArgVBufPtr
				>LDYA ZPArgVBufPtr

IO.StatYA		>SS
				>PUSHYA
				>PUSHW ZPCLBuf
				>LIBC Stat
				>SR
				bcs .9

				ldy #S.STAT.MODE+1
				lda (ZPCLBuf),y
				and #$F0

.9				rts
*--------------------------------------
IO.Exec			>SS
				>PUSHW ZPArgVBufPtr
				>PUSHBI 0
				>PUSHBI S.PS.F.CLOSEONX
				>LIBC ExecL
				>SR
				rts
*--------------------------------------
IO.PrintBatchErrMsg
				>LDYA ZPInputBuf
				>STYA R1

				ldy #S.PS.ERRNO
				jsr A2osX.GetPSy

				cmp #E.SYN
				beq .10

				>LDYA ZPInputCmdPtr
				bra .11

.10				>LDYA ZPInputBufPtr

.11				>STYA R2

				stz ZPTmpW				Line Count
				stz ZPTmpW+1

.1				inc ZPTmpW
				bne .2

				inc ZPTmpW+1

.2				ldy #$ff

.3				iny
				lda (R1),y
				beq .4					EoF

				cmp #C.CR
				bne .3					Scan until EoL

.4				tya
				clc
				adc R1
				tax
				lda R1+1
				adc #0
				pha

				cpx R2
				sbc R2+1
				pla
				bcs .41

				inx
				bne .40

				inc

.40				stx R1
				sta R1+1
				bra .1

.41				ldy #$ff

.5				iny
				lda (R1),y
				sta (ZPCLBuf),y
				beq .6

				eor #C.CR
				bne .5

				sta (ZPCLBuf),y

.6				>SS
				ldy #S.PS.pStdErr+1
				jsr A2osX.GetPSy
				>PUSHA
				ldy #S.PS.pStdErr
				jsr A2osX.GetPSy
				>PUSHA
				>PUSHW L.MSG.BATCHLINE
				>PUSHW ZPCLBuf
				>PUSHBI 2
				>LIBC FPrintF
				>SR
				
				ldy #$ff
				ldx #'-'

.7				iny
				lda (ZPCLBuf),y
				beq .8

				txa
				sta (ZPCLBuf),y
				bra .7

.8				>SS
				ldy #S.PS.pStdErr+1
				jsr A2osX.GetPSy
				>PUSHA
				ldy #S.PS.pStdErr
				jsr A2osX.GetPSy
				>PUSHA
				>PUSHW L.MSG.BATCHERR
				>PUSHW ZPCLBuf
				>PUSHW ZPTmpW
				>PUSHBI 4
				>LIBC FPrintF
				>SR
				rts
*--------------------------------------
IO.PrintErrMsg	>SS
				ldy #S.PS.ERRNO
				jsr A2osX.GetPSy
				>PUSHA
				>PUSHW ZPCLBuf
				>LIBC GetErrMsg
				>SR

				>SS
				jsr IO.GetStdErr
				>PUSHYA
				>PUSHW L.MSG.ERROR
				ldy #S.PS.ERRNO
				jsr A2osX.GetPSy
				>PUSHA
				>PUSHW ZPCLBuf
				>PUSHBI 3
				>LIBC FPrintF
				>SR

				rts
*--------------------------------------
IO.EscOutYA		>STYA R1			In
				>STYA R2			Out
				
				ldy #0
				
.1				jsr GetPtr1NextChar
				beq .8
				
				cmp #'\'
				bne .6

				lda (R1)
				beq .7

				ldx #OUT.EscCharsCnt-1
	
.2				cmp OUT.EscChars,x
				beq .5
				
				dex
				bpl .2
				
				stz ZPTmpW
				
				jsr ToUpperCase
				cmp #'X'
				bne .3
				
.20				jsr IncPtr1
				
				lda (R1)
				beq .40

				jsr IO.IsHexDigit
				bcs .40

				asl ZPTmpW
				asl ZPTmpW
				asl ZPTmpW
				asl ZPTmpW
				ora ZPTmpW
				sta ZPTmpW
				bra .20

.3				jsr IO.IsOctDigit
				bcs .40

				jsr IncPtr1

				asl ZPTmpW
				asl ZPTmpW
				asl ZPTmpW
				ora ZPTmpW
				sta ZPTmpW
				lda (R1)
				bne .3

.40				lda ZPTmpW
				bra .6

.4				tax
				
				lda #'\'
				sta (R2),y
				iny
				
				txa
				bra .6

.5				lda OUT.EscCodes,x	
				jsr IncPtr1
				
.6				sta (R2),y
				iny
				bra .1
				
.7				lda #'\'
				sta (R2),y
				iny
				lda #0
				
.8				sta (R2),y

				>LDYA R2
*--------------------------------------
IO.OutYA		>SS
				>PUSHYA
				>PUSHBI 0
				>LIBC PrintF
				>SR
				rts
*--------------------------------------
IO.GetStdIn		ldy #S.PS.pStdIn
				jsr A2osX.GetPSy
				pha
				iny
				jsr A2osX.GetPSy
				ply
				rts
*--------------------------------------
IO.GetStdOut	ldy #S.PS.pStdOut
				jsr A2osX.GetPSy
				pha
				iny
				jsr A2osX.GetPSy
				ply
				rts
*--------------------------------------
IO.GetStdErr	ldy #S.PS.pStdErr
				jsr A2osX.GetPSy
				pha
				iny
				jsr A2osX.GetPSy
				ply
				rts
*--------------------------------------
IO.IsOctDigit	cmp #'0'
				bcc .9
				
				cmp #'7'+1
				bcs .9
				
				and #%00000111
				
				clc
				rts
				
.9				sec
				rts
*--------------------------------------
IO.IsHexDigit	cmp #'0'
				bcc .9
				
				cmp #'9'+1
				bcc .8
				
				cmp #'A'
				bcc .9
				
				cmp #'Z'+1
				bcc .7

				cmp #'a'
				bcc .9
				
				cmp #'z'+1
				bcc .9

*				sec

				sbc #$20
				
.7				sec
				sbc #'A'-10

.8				and #$0F
				
				clc
				rts
				
.9				sec
				rts
*--------------------------------------
MAN
SAVE usr/src/bin/sh.s.io
LOAD usr/src/bin/sh.s
ASM
