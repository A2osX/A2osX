NEW
  AUTO 3,1
*--------------------------------------
CP.RUN			bcs .1					> A2

				>LDYA J.KEYWORDS,x
				clc
				jmp EmitJsrYA

.1				jmp (J.CP-$A4,x)
*--------------------------------------
CP.VARIABLE
*--------------------------------------
CP.CONSTANT
*--------------------------------------
CP.ACODE
*--------------------------------------
CP.FCODE
*--------------------------------------
CP.DO
*--------------------------------------
CP.LOOP
*--------------------------------------
CP.pLOOP
*--------------------------------------
CP.I
*--------------------------------------
CP.LEAVE

				clc
				rts
*--------------------------------------
CP.IF			jsr EmitPullA
				jsr EmitPullA

				lda #$AA				TAX
				jsr EmitByte

				lda #$10				BPL
				jsr EmitByte

				lda #3					skip JMP abs
				jsr EmitByte

				jsr EmitPendingJMP		to put jmp -> ELSE/ENDIF later

				clc
				rts
*--------------------------------------
CP.ELSE			jsr CP.PopPtr1			get previous JMP -> ptr1

				jsr EmitPendingJMP		to put jmp -> ENDIF later 

				lda ZPCodePtr
				sta (ZPPtr1)

				ldy #1
				lda ZPCodePtr+1
				sta (ZPPtr1),y			update pending JMP to here

				clc
				rts
*--------------------------------------
CP.ENDIF		jsr CP.PopPtr1

				lda ZPCodePtr
				sta (ZPPtr1)

				ldy #1
				lda ZPCodePtr+1
				sta (ZPPtr1),y

				clc
				rts
*--------------------------------------
CP.BEGIN
*--------------------------------------
CP.UNTIL
*--------------------------------------
CP.REPEAT
*--------------------------------------
CP.WHILE

*--------------------------------------
CP.COMMENT
				clc
				rts
*--------------------------------------
CP.PushCodePtr	ldy RP

				lda ZPCodePtr+1
				sta (pData),y
				dey

				lda ZPCodePtr
				sta (pData),y
				dey

				sty RP
				rts
*--------------------------------------
CP.PopPtr1		ldy RP
				iny
				lda (pData),y
				sta ZPPtr1

				iny
				lda (pData),y
				sta ZPPtr1+1

				sty RP

				rts
*--------------------------------------
EmitPendingJMP	lda #$4C				JMP
				jsr EmitByte

				jsr CP.PushCodePtr

				lda #0
				jsr EmitByte
				jsr EmitByte

				rts
*--------------------------------------
EmitPullA		lda #$B2				lda (zp)
				jsr EmitByte

				lda #pStack
				jsr EmitByte

				lda #$E6				inc zp
				jsr EmitByte

				lda #pStack
				bra EmitByte
*--------------------------------------
EmitPushA		pha
				lda #$A9				LDA imm
				jsr EmitByte

				pla
				jsr EmitByte

				lda #$C6				DEC zp
				jsr EmitByte

				lda #pStack
				jsr EmitByte

				lda #$92				STA (zp)
				jsr EmitByte

				lda #pStack
				bra EmitByte
*--------------------------------------
EmitJsrYA		pha
				lda #$20
				jsr EmitByte
				tya
				jsr EmitByte
				pla
*--------------------------------------
EmitByte		sta (ZPCodePtr)
				inc ZPCodePtr
				bne .8
				inc ZPCodePtr+1
.8				rts
*--------------------------------------
MAN
SAVE usr/src/bin/forth.s.cp
LOAD usr/src/bin/forth.s
ASM
