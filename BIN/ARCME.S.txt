NEW
  AUTO 3,1
				.LIST OFF
				.OP	65C02
				.OR	$2000
				.TF bin/arcme
*--------------------------------------
				.INB inc/macros.i
				.INB inc/a2osx.i
				.INB inc/mli.e.i
				.INB inc/arc.i
*--------------------------------------
CHUNK.MAX		.EQ 32
DBG				.EQ 1
*--------------------------------------
				.DUMMY
				.OR ZPBIN
ZS.START
ZPSrcFileSize	.BS 2
ZPDstTableOfs	.BS 2
ZPChunkOfs		.BS 2
ZPChunkLen		.BS 2
ZPChunkPakedLen	.BS 2

ZPChunkNewOfs	.BS 2

ZPChunkIndex	.BS 1
ZPChunkCnt		.BS 1
ZPAlg			.BS 1

ZPCopyBuf		.BS 2

ZPInBufPtr		.BS 2
ZPOutBufPtr		.BS 2
ZPBackPtr		.BS 2
ZPStrPtr		.BS 2

bPause			.BS 1

ZS.END			.ED
*--------------------------------------
*			File Header (16 Bytes)
*--------------------------------------
CS.START		cld
				jmp (.1,x)
				.DA #$61				6502,Level 1 (65c02)
				.DA #2					BIN Layout Version 2
				.DA #0
				.DA #0
				.DA CS.END
				.DA ID.END
				.DA DS.END
				.DA #64					Stack Size
				.DA #ZS.END-ZS.START	Zero Page Size
*--------------------------------------
* Relocation Table
*--------------------------------------
.1				.DA CS.INIT
				.DA CS.RUN
				.DA CS.SIG
				.DA	CS.QUIT
L.MSG.USAGE		.DA MSG.USAGE
L.MSG.SRCFILE	.DA MSG.SRCFILE
L.MSG.CHUNK		.DA MSG.CHUNK
L.MSG.STORED	.DA MSG.STORED
				.DA MSG.ARCEDT
				.DA MSG.ARCEDBL
				.DA MSG.ARCEDTBL
L.MSG.ARCED		.DA MSG.ARCED
L.MSG.E.IARC	.DA MSG.E.IARC
L.TAG			.DA TAG
				.DO DBG=1
L.MSG.DBG1		.DA MSG.DBG1
L.MSG.DBG2		.DA MSG.DBG2
L.MSG.DBG3		.DA MSG.DBG3
				.FIN
				.DA 0
*--------------------------------------
CS.INIT			clc
				rts
*--------------------------------------
CS.RUN			ldy #S.PS.ARGC
				jsr A2osX.GetPSy
				cmp #2
				bne .9

				jsr CS.RUN.CheckSrcFile
				bcs .99

				lda #2
				>KAPI ArgV
				>SS
				>PUSHYA
				>PUSHBI	O.CREATE+O.WRONLY
				>PUSHB.G STATBUF+S.STAT.P.TYPE
				>PUSHW.G STATBUF+S.STAT.P.AUXTYPE
				>LIBC FOpen
				>SR
				bcs .99

				>STYA.G pDstFile

				jsr CS.RUN.START
				bcs .99
				
				jsr CS.RUN.WriteTable	Write Fake table
				bcs .99

				jsr CS.RUN.LOOP
				bcs .99
				
.8				jsr CS.RUN.RewriteTable	Write modified Table
				bcs .99

				lda #0

				sec

				rts				

.9				>LDYA L.MSG.USAGE
				>LIBC PutS
				lda #E.SYN
				sec
.99				rts
*--------------------------------------
CS.RUN.START	>SS
				>PUSHW L.MSG.SRCFILE
				lda #1
				>KAPI ArgV
				>PUSHYA
				>PUSHW ZPSrcFileSize
				>PUSHW.G ARCME.HEADER+5
				>PUSHB.G ARCME.HEADER+7
				>PUSHW ZPDstTableOfs
				>PUSHBI 9
				>LIBC PrintF

				>LDYA ZPDstTableOfs
				>LIBC Malloc
				bcs .9
				
				>STYA ZPCopyBuf

				>SS
				>PUSHW.G pSrcFile
				>PUSHLZ
				>PUSHWI SEEK.SET
				>LIBC FSeek
				>SR
				bcs CS.RUN.RTS

				>SS
				>PUSHW.G pSrcFile
				>PUSHW ZPCopyBuf
				>PUSHW ZPDstTableOfs
				>LIBC FRead
				>SR
.9				bcs CS.RUN.RTS

				>SS
				>PUSHW.G pDstFile
				>PUSHW ZPCopyBuf
				>PUSHW ZPDstTableOfs
				>LIBC FWrite
				bcs CS.RUN.RTS

				>LDYA ZPCopyBuf
				>LIBC Free
				
				stz ZPCopyBuf+1

CS.RUN.RTS		rts
*--------------------------------------
CS.RUN.LOOP		>SLEEP

				jsr X.CheckCtrl
				bcs CS.RUN.RTS
				
				bvs CS.RUN.LOOP			Pause...

				jsr CS.RUN.GetChunk
				bcs CS.RUN.RTS

				>SS
				>PUSHW L.MSG.CHUNK
				lda ZPChunkIndex
				inc
				>PUSHA
				>PUSHW ZPChunkOfs
				>PUSHW ZPChunkLen
				>PUSHBI 5
				>LIBC PrintF
				>SR
				bcs .9

				jsr CS.RUN.Arc
				bcs .2

				jsr CS.RUN.WriteArc
				bcc .7

				rts

.2				jsr CS.RUN.WriteStore
				bcs .9

.7				jsr CS.QUIT.BUF

				jsr CS.RUN.UpdateTable

				inc ZPChunkIndex
				dec ZPChunkCnt
				bne CS.RUN.LOOP

				clc
.9				rts
*--------------------------------------
CS.RUN.CheckSrcFile
				lda #1
				>KAPI ArgV

				>SS
				>PUSHYA
				>PUSHBI	O.RDONLY
				>PUSHBI 0				Type
				>PUSHWZ					Aux type
				>LIBC FOpen
				>SR
				bcs .99

				>STYA.G pSrcFile

				>SS
				lda #1
				>KAPI ArgV
				>PUSHYA
				>PUSHEA.G STATBUF
				>LIBC Stat
				>SR

.99				bcs .9

				>LDA.G STATBUF+S.STAT.SIZE+3
				dey
				ora (pData),y
				bne .90

				dey
				lda (pData),y
				sta ZPSrcFileSize+1
				dey
				lda (pData),y
				sta ZPSrcFileSize

				jsr CS.RUN.CheckTAG
				bcs .9

				jsr CS.RUN.GetTable
				bcs .9


				clc
				rts

.90				lda #MLI.E.INCFF
				sec
.9
CS.RUN.CheckSrcFile.RTS
				rts
*--------------------------------------
CS.RUN.CheckTAG	>SS
				>PUSHW.G pSrcFile
				>PUSHWZ
				lda ZPSrcFileSize
				sec
				sbc #10
				tay
				lda ZPSrcFileSize+1
				sbc #0
				>PUSHYA
				>PUSHWI SEEK.SET
				>LIBC FSeek
				>SR

				bcs CS.RUN.CheckSrcFile.RTS

				>SS
				>PUSHW.G pSrcFile
				>PUSHEA.G ARCME.HEADER
				>PUSHWI 10
				>LIBC FRead
				>SR
				bcs .9

				ldx #4

				ldy #ARCME.HEADER+4

.1				lda TAG,x
				cmp (pData),y
				bne .90
				dey
				dex
				bpl .1

				clc
				rts

.90				lda #MLI.E.INCFF
				sec
.9				rts
*--------------------------------------
CS.RUN.GetTable	>LDA.G ARCME.HEADER+8
				sec
				>SBC.G ARCME.HEADER+5
				sta ZPDstTableOfs

				>LDA.G ARCME.HEADER+9
				>SBC.G ARCME.HEADER+6
				sta ZPDstTableOfs+1

				>SS
				>PUSHW.G pSrcFile
				>PUSHWZ
				>PUSHW ZPDstTableOfs
				>PUSHWI SEEK.SET
				>LIBC FSeek
				>SR

				bcs .9

				>SS
				>PUSHW.G pSrcFile
				>PUSHEA.G ARCME.TABLE
				>LDA.G ARCME.HEADER+7
				sta ZPChunkCnt

				asl
				tay
				lda #0
				>PUSHYA

				>LIBC FRead
				>SR

.9				rts
*--------------------------------------
CS.RUN.GetChunk	lda ZPChunkIndex

				asl
				clc
				adc #ARCME.TABLE+1
				tay
				lda (pData),y
				pha
				dey
				lda (pData),y
				sec
				ldy #ARCME.HEADER+5
				sbc (pData),y
				sta ZPChunkOfs

				iny
				pla
				sbc (pData),y
				sta ZPChunkOfs+1

				>SS
				>PUSHW.G pSrcFile
				>PUSHWZ
				>PUSHW ZPChunkOfs
				>PUSHWI SEEK.SET
				>LIBC FSeek
				>SR

				bcs .91

				>SS
				>PUSHW.G pSrcFile
				>PUSHEA.G CHUNK.HEADER
				>PUSHWI S.ARCSHNK.H
				>LIBC FRead
				bcs .9

				>LDA.G CHUNK.HEADER+2
				iny
				ora (pData),y
				bne .90

				>LDA.G CHUNK.HEADER
				sta ZPChunkLen
				pha
				iny
				lda (pData),y
				sta ZPChunkLen+1
				ply

				>LIBC Malloc
.91				bcs .9

				>STYA X.Arc.SrcPtr

				>SS
				>PUSHW.G pSrcFile
				>PUSHW X.Arc.SrcPtr
				>PUSHW ZPChunkLen
				>LIBC FRead
				>SR
				bcs .9

*				clc
				rts

.90				lda #MLI.E.INCFF
				sec

.9				rts
*--------------------------------------
CS.RUN.Arc		>LDYA ZPChunkLen
				>LIBC Malloc
				bcs .9

				>STYA X.Arc.DstPtr
				
				>LDYA ZPChunkLen
				jsr X.Arc
				bcs .9

				stx ZPAlg
				>STYA ZPChunkPakedLen

.9				rts
*--------------------------------------
CS.RUN.RewriteTable
				>SS
				>PUSHW.G pDstFile
				>PUSHWZ
				>PUSHW ZPDstTableOfs
				>PUSHWI SEEK.SET
				>LIBC FSeek
				>SR
				bcs CS.RUN.WriteTable.RTS
*--------------------------------------
CS.RUN.WriteTable
				>SS
				>PUSHW.G pDstFile
				>PUSHEA.G ARCME.TABLE
				>LDA.G ARCME.HEADER+7
				asl
				tay
				lda #0
				>PUSHYA
				>LIBC FWrite
				>SR

CS.RUN.WriteTable.RTS
				rts
*--------------------------------------
CS.RUN.WriteArc	>SL
				>LDYA.G pDstFile
				>LIBC FTell
				bcs CS.RUN.WriteTable.RTS

				lda (pStack)
				inc pStack
				sta ZPChunkNewOfs
				lda (pStack)
				inc pStack
				sta ZPChunkNewOfs+1
				inc pStack
				inc pStack

				>SS
				>PUSHW.G pDstFile
				>PUSHW X.Arc.DstPtr
				>PUSHW ZPChunkPakedLen
				>LIBC FWrite
				>SR
				bcs .9

				>SS
				>PUSHW L.MSG.ARCED
				ldx ZPAlg
				>PUSHW L.MSG.STORED,x
				>PUSHW ZPChunkPakedLen
				>PUSHW ZPChunkNewOfs
				>PUSHBI 6
				>LIBC PrintF
				>SR
.9
CS.RUN.WriteArc.RTS
				rts
*--------------------------------------
CS.RUN.WriteStore
				>SL
				>LDYA.G pDstFile
				>LIBC FTell
				bcs CS.RUN.WriteArc.RTS

				lda (pStack)
				inc pStack
				sta ZPChunkNewOfs
				lda (pStack)
				inc pStack
				sta ZPChunkNewOfs+1
				inc pStack
				inc pStack

				>SS
				>PUSHW.G pDstFile
				>PUSHEA.G CHUNK.HEADER
				>PUSHWI S.ARCSHNK.H
				>LIBC FWrite
				>SR
				bcs .9

				>SS
				>PUSHW.G pDstFile
				>PUSHW X.Arc.SrcPtr
				>PUSHW ZPChunkLen
				>LIBC FWrite
				>SR
				bcs .9

				>SS
				>PUSHW L.MSG.ARCED
				>PUSHW L.MSG.STORED
				>PUSHW ZPChunkPakedLen
				>PUSHW ZPChunkNewOfs
				>PUSHBI 6
				>LIBC PrintF
				>SR

.9				rts
*--------------------------------------
CS.RUN.UpdateTable
				ldy #ARCME.HEADER+6
				lda (pData),y
				pha

				dey
				lda (pData),y
				pha

				lda ZPChunkIndex

				asl
				clc
				adc #ARCME.TABLE
				tay

				pla
				clc
				adc ZPChunkNewOfs
				sta (pData),y

				iny

				pla
				adc ZPChunkNewOfs+1
				sta (pData),y
				rts
*--------------------------------------
CS.SIG			sec
				rts
*--------------------------------------
CS.QUIT			>LDYA.G pDstFile
				cmp #0
				beq .2

				>LIBC FClose

.2				>LDYA.G pSrcFile
				cmp #0
				beq .3

				>LIBC FClose

.3				>LDYA ZPCopyBuf
				beq CS.QUIT.BUF

				>LIBC Free
*--------------------------------------
CS.QUIT.BUF		>LDYA X.Arc.DstPtr
				beq .1

				>LIBC Free

				stz X.Arc.DstPtr+1

.1				>LDYA X.Arc.SrcPtr
				beq .8

				>LIBC Free

				stz X.Arc.SrcPtr+1

.8				clc
				rts
*--------------------------------------
				.INB usr/src/shared/x.checkctrl.s
				.INB usr/src/shared/x.arc.s
*--------------------------------------
MSG.USAGE		.CZ "Usage : ARCME SourceBIN PackedBIN\r\n"
MSG.SRCFILE		.CZ "Source File : %s, Size=%5D, Org=$%H, %d Chunks at $%H.\r\n"
MSG.CHUNK		.CZ "  Chunk #%02d : Ofs=$%H, Len=%5D ... "
MSG.STORED		.CZ "Stored   "
MSG.ARCEDT		.CZ "ARCed/T  "
MSG.ARCEDBL		.CZ "ARCed/BL "
MSG.ARCEDTBL	.CZ "ARCed/TBL"
MSG.ARCED		.CZ "%s : %5D Bytes, New Ofs=$%H\r\n"
				.CZ %5D Bytes, New Ofs=$%H\r\n"
MSG.E.IARC		.CZ "Invalid/corrupt archive"
TAG				.CZ "ARCME"
*--------------------------------------
ID.END			.EQ *
*--------------------------------------
				.DUMMY
				.OR 0
STATBUF			.BS S.STAT
ARCME.HEADER	.BS 10
ARCME.TABLE		.BS CHUNK.MAX*2
CHUNK.HEADER	.BS 4

pSrcFile		.BS 2
pDstFile		.BS 2

DS.END			.ED
*--------------------------------------
MAN
SAVE usr/src/bin/arcme.s
ASM
