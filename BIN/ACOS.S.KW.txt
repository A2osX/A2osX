NEW
  AUTO 3,1
				.LIST OFF
*--------------------------------------
KW.ADDINT
KW.APPEND
KW.BYTE
KW.CLEAR
KW.CLOCK
KW.CLOSE
KW.COPY
KW.CREATE
KW.ECHO
KW.EDIT
KW.END
KW.FILL
KW.FLAG
KW.FOR
KW.FREE
KW.GET
KW.GOSUB
				clc
				rts
*--------------------------------------
KW.GOTO			jsr CORE.GetNextCharNB
				bcs .90
				
				>LDA.G hLabels
				jsr CORE.GetAddr
				bcs .99
				
				lda #$4C				JMP abs
				jsr CODE.EmitByte
				lda ZPADDR
				jsr CODE.EmitByte
				lda ZPADDR+1
				jsr CODE.EmitByte
				
				clc
				rts

.90				lda #E.CSYN
				sec
.99				rts
*--------------------------------------
KW.HOME
KW.IF
KW.INFO
KW.INPUT
KW.KILL
KW.LINK
KW.LOG
KW.MARK
KW.MODEM
KW.MOVE
KW.MSG
KW.NEXT
KW.NIBBLE
KW.NOT
KW.ON
KW.NOCAR
KW.OPEN
KW.POKE
KW.POP
KW.POSITION
				clc
				rts
*--------------------------------------
KW.PRINT		stz hOut				reset to hStdOut


*				ldy #S.PS.hStdOut
*				lda (pPS),y
*				sta hOut				Default to screen

				sec
				ror bFlag				put ending CR 

.10				jsr CORE.GetNextCharNB
				bcs .8
				
				jsr CORE.IsEndInst
				bcs .8
				
				cmp #'"'
				bne .5
				
				ldy #0
				
.1				jsr CORE.GetNextChar
				bcs .90
				
				cmp #'"'
				beq .2
				
				sta (ZPConstBufPtr),y
				iny
				bne .1
				
.2				lda #0
				sta (ZPConstBufPtr),y
				iny
				phy
				
				>LDYA ZPConstBufPtr
				jsr CODE.LDYAI
				jsr CODE.FPRINTSTR

				pla
				clc
				adc ZPConstBufPtr
				sta ZPConstBufPtr
				bcc .3
				
				inc ZPConstBufPtr+1

.3				jsr CORE.GetNextCharNB	skip "
				bra .70
*--------------------------------------
.5				jsr EXP.Eval
				bcs .99

				jsr CODE.FPRINTL
				
.7				jsr CORE.GetCharNB
				bcs .8

.70				jsr CORE.IsEndInst
				bcs .8

				cmp #','
				bne .71

* TODO : CR ? or not CR ?
			
				bra .10					go skip
				
.71				cmp #';'
				bne .90
				
* TODO : PRINT ; ? or not ?

				jsr CORE.GetNextCharNB	skip ;
				stz bFlag
				

.8				bit bFlag
				bpl .80
				
				jsr CODE.FPRINTCR
				
.80				clc
				rts
				
.90				lda #E.CSYN
				sec
.99				rts
*--------------------------------------
KW.PUBLIC
KW.PUSH
KW.RAM
KW.RAM2
KW.READ
KW.READY
KW.RETURN
KW.REWIND
KW.RIPCO
KW.SET
KW.SETINT
KW.TEXT
KW.THEN
KW.TONE
KW.UPDATE
KW.USE
KW.WHENd
KW.WRITE
				clc
				rts
*--------------------------------------
MAN
SAVE usr/src/bin/acos.s.kw
LOAD usr/src/bin/acos.s
ASM
