NEW
  AUTO 3,1
				.LIST OFF
				.OP	65C02
				.OR	$2000
				.TF bin/unix2mac
*--------------------------------------
				.INB inc/macros.i
				.INB inc/a2osx.i
				.INB inc/mli.i
				.INB inc/mli.e.i
*--------------------------------------
X.ENTER.SUBDIR	.EQ 0
X.COPY.TO.DEST	.EQ 0
X.DELETE.SOURCE	.EQ 0
X.RESET.SRC.DIR	.EQ 0
*--------------------------------------
				.DUMMY
				.OR ZPBIN
ZS.START
ZPPtr1			.BS 2
ZPPtr2			.BS 2
ZPFileName		.BS 2
ZPFileStat		.BS 2

ZPFullPath		.BS 2
ZPRelPath		.BS 2
ZPFileBuf		.BS 2

ArgIndex		.BS 1
pFile			.BS 2

FilePos			.BS 4

ByteCnt			.BS 2

bPause			.BS 1
bContinue		.BS 1
bRecurse		.BS 1

ZS.END			.ED
*--------------------------------------
*			File Header (16 Bytes)
*--------------------------------------
CS.START		cld
				jmp (.1,x)
				.DA #$61				6502,Level 1 (65c02)
				.DA #2					BIN Layout Version 2
				.DA #0
				.DA #0
				.DA CS.END
				.DA ID.END
				.DA DS.END
				.DA #64					Stack Size
				.DA #ZS.END-ZS.START	Zero Page Size
*--------------------------------------
* Relocation Table
*--------------------------------------
.1				.DA CS.INIT
				.DA CS.RUN
				.DA CS.SIG		
				.DA	CS.QUIT
L.MSG.USAGE		.DA MSG.USAGE
L.MSG.CRLF		.DA MSG.CRLF
L.MSG.ERR		.DA MSG.ERR
				.DA 0
*--------------------------------------
CS.INIT			clc
				rts
*--------------------------------------
CS.RUN			inc ArgIndex
				lda ArgIndex
				>LIBC ArgV
				bcs .5
				
				>STYA ZPPtr1
				lda (ZPPtr1)
				cmp #'-'
				bne .4
				
				jsr CS.RUN.CheckOpt
				bcc CS.RUN

.9				>LDYA L.MSG.USAGE
				>LIBC PutS
				lda #E.SYN
				sec
				rts

.4				>LDYA.G pSrcBasePath
				cmp #0
				bne .9

				>LDYA ZPPtr1
				jsr X.InitSrcDirYA
				bcc CS.RUN

.99				rts
*--------------------------------------
.5				>LDA.G pSrcBasePath+1
				bne .6
				
				ldy #S.PS.pCWD
				jsr A2osX.GetPSy
				pha
				iny
				jsr A2osX.GetPSy
				ply
				>STYA ZPPtr1
				
.6				>LDYAI 256
				>LIBC Malloc
				bcs .99

				>STYA ZPFullPath

				>LDYA.G pSrcBasePath
				>STYA ZPPtr1

				ldy #$ff

.80				iny
				lda (ZPPtr1),y
				bne .80

				tya
				clc
				adc ZPFullPath
				sta ZPRelPath
				lda ZPFullPath+1
				adc #0
				sta ZPRelPath+1

				>LDYAI 256
				>LIBC Malloc
				bcs .99

				>STYA ZPFileBuf
*--------------------------------------
CS.RUN.LOOP		>SLEEP

				jsr X.CheckCtrl
				bcs .99
				
				bvs CS.RUN.LOOP

				jsr X.GetEntry
				bcs .9

				ldy #S.STAT.P.DRIVE
				lda (ZPFileStat),y		ProDOS Device ?
				beq .5

				jsr CS.RUN.DEV
				bcc CS.RUN.LOOP

				rts
				
.5				ldy #S.STAT.MODE+1
				lda (ZPFileStat),y
				and #$F0
				cmp /S.STAT.MODE.DIR
				bne .6

				jsr CS.RUN.DIR
				bcs .99

				bra .8			

.6				jsr CS.RUN.FILE
				bcs .99

				bra .8

.9				jsr X.LeaveSubDir
				bcs .90

				jsr X.BasePath..
.8				jsr X.GetNextEntry
				jmp CS.RUN.LOOP

.90				lda #0
				sec
.99				rts
*--------------------------------------
CS.RUN.DIR		lda bRecurse
				bpl .8

				lda (ZPFileName)
				cmp #'.'
				beq .8

				>LDYA ZPFileName
				jsr X.EnterSubDirYA
				jmp CS.RUN.CheckErr

.8				clc
				rts
*--------------------------------------
CS.RUN.DEV
.8				jsr X.GetNextEntry

CS.RUN.DEV.CLC.RTS
				clc
				rts
*--------------------------------------
CS.RUN.FILE		jsr X.IncludeMatch
				bcs CS.RUN.DEV.CLC.RTS	no match, skip....

				jsr CS.RUN.GetFilePath

				jsr CS.RUN.OpenFile
				bcs .9

				jsr CS.RUN.FILE.LOOP
				bcs .7
				
				jmp CS.RUN.CloseFile

.8				clc
				rts

.7				pha
				jsr CS.RUN.CloseFile
				pla
				sec
.9				jmp CS.RUN.CheckErr

.99				rts
*--------------------------------------
CS.RUN.FILE.LOOP
.1				>PUSHW pFile
				>PUSHW ZPFileBuf
				>PUSHWI 256
				>LIBC FRead
				bcs .8

				>STYA ByteCnt
				
				jsr CS.RUN.FILE.MOD

				jsr CS.RUN.FSeek
				bcs .99

				>PUSHW pFile
				>PUSHW ZPFileBuf
				>PUSHW ByteCnt
				>LIBC FWrite
				bcs .99
				
				lda ByteCnt
*				clc
				adc FilePos
				sta FilePos
				lda ByteCnt+1
				adc FilePos+1
				sta FilePos+1
				bcc .1
				
				inc FilePos+2
				bne .1
				
				inc FilePos+3
				jmp .1
				
.8				cmp #MLI.E.EOF
				bne .99

				clc

.99				rts
*--------------------------------------
CS.RUN.FILE.MOD	ldy #0
				
.2				lda	(ZPFileBuf),y
				cmp #C.CR
				bne .3
				
				lda #C.LF
				sta	(ZPFileBuf),y

.3				iny
				cpy ByteCnt
				bne .2

				rts
*--------------------------------------
CS.RUN.CheckErr	bcc .9

				pha
				>PUSHW L.MSG.ERR
				>PUSHA
				>PUSHBI 1
				>LIBC PrintF
				lda bContinue
				eor #$80
				asl
				pla

.9				rts
*--------------------------------------
CS.RUN.GetFilePath
				>PUSHW ZPFullPath
				>PUSHW.G pSrcBasePath
				>LIBC StrCpy

				>PUSHW ZPFullPath
				>PUSHW ZPFileName
				>LIBC StrCat
				rts
*--------------------------------------
CS.RUN.OpenFile	>PUSHW ZPFullPath
				>PUSHBI	O.RDWR+O.APPEND
				>PUSHBI 0				Type
				>PUSHWZ					Aux type
				>LIBC FOpen
				bcs CS.RUN.FSeek.9

				>STYA pFile
				
				stz FilePos
				stz FilePos+1
				stz FilePos+2
				stz FilePos+3
				
CS.RUN.FSeek	>PUSHW pFile
				>PUSHL FilePos
				>PUSHBI SEEK.SET
				>LIBC fseek
				
CS.RUN.FSeek.9	rts
*--------------------------------------
CS.RUN.CloseFile
				>LDYA pFile
				>LIBC FClose
				bcs .9
				
				stz pFile+1
				
.9				rts
*--------------------------------------
CS.SIG			sec
				rts
*--------------------------------------
CS.QUIT			jsr X.Quit

.2				>LDYA ZPFullPath
				>LIBC Free

.8				clc
				rts
*--------------------------------------
CS.RUN.CheckOpt	ldy #1 
				lda (ZPPtr1),y

				ldx #OptionVars-OptionList-1

.2				cmp OptionList,x
				beq .3

				dex
				bpl .2

				sec
				rts

.3				ldy OptionVars,x
				lda #$ff
				sta 0,y
				clc
				rts
*--------------------------------------
				.INB usr/src/shared/x.checkctrl.s
				.INB usr/src/shared/x.fileenum.s
*--------------------------------------
CS.END			.EQ *
*--------------------------------------
OptionList		.AS "CRcr"
OptionVars		.DA #bContinue,#bRecurse
				.DA #bContinue,#bRecurse
*--------------------------------------
MSG.USAGE		.CS "Usage : UNIX2MAC File(s) (*,? wildcards allowed)\r\n"
				.CS "   -C : Continue on error\r\n"
				.CS "   -R : Recurse subdirectories\r\n"
MSG.CRLF		.CZ "\r\n"
MSG.ERR			.CZ "[%h]\r\n"
*--------------------------------------
ID.END			.EQ *
*--------------------------------------
				.DUMMY
				.OR 0
				.INB usr/src/shared/x.fileenum.g
DS.END			.ED
*--------------------------------------
MAN
SAVE usr/src/bin/unix2mac.s
ASM
