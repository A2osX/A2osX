NEW
  AUTO 3,1
				.LIST OFF
				.OP	65C02
				.OR	$2000
				.TF bin/arc
*--------------------------------------
				.INB inc/macros.i
				.INB inc/a2osx.i
				.INB inc/arc.i
				.INB inc/mli.e.i
*--------------------------------------
X.ENTER.SUBDIR	.EQ 0
X.COPY.TO.DEST	.EQ 0
X.DELETE.SOURCE	.EQ 0
X.RESET.SRC.DIR	.EQ 0					single pass
*--------------------------------------
DBG				.EQ 1
*--------------------------------------
				.DUMMY
				.OR ZPBIN
ZS.START
ZPPtr1			.BS 2
ZPPtr2			.BS 2
ZPFileName		.BS 2
ZPFileStat		.BS 2

ZPFullPath		.BS 2
ZPRelPath		.BS 2

ArgIndex		.BS 1
bAppend			.BS 1
bRecurse		.BS 1
bPause			.BS 1

ZPInBufPtr		.BS 2
ZPOutBufPtr		.BS 2
ZPBackPtr		.BS 2
ZPStrPtr		.BS 2

ZS.END			.ED
*--------------------------------------
*			File Header (16 Bytes)
*--------------------------------------
CS.START		cld
				jmp (.1,x)
				.DA #$61				6502,Level 1 (65c02)
				.DA #2					BIN Layout Version 2
				.DA #0
				.DA #0
				.DA CS.END
				.DA ID.END
				.DA DS.END
				.DA #128				Stack Size
				.DA #ZS.END-ZS.START	Zero Page Size
*--------------------------------------
* Relocation Table
*--------------------------------------
.1				.DA CS.INIT
				.DA CS.RUN
				.DA CS.SIG
				.DA	CS.QUIT
L.MSG.USAGE		.DA MSG.USAGE
L.MSG.DIR		.DA MSG.DIR
L.MSG.FILE		.DA MSG.FILE
L.MSG.OK		.DA MSG.OK
L.MSG.ERR		.DA MSG.ERR
L.MSG.E.IARC	.DA MSG.E.IARC
L.ARC.Header	.DA ARC.Header
				.DO DBG=1
L.MSG.DBG1		.DA MSG.DBG1
L.MSG.DBG2		.DA MSG.DBG2
L.MSG.DBG3		.DA MSG.DBG3
				.FIN
				.DA 0
*--------------------------------------
CS.INIT			clc
				rts
*--------------------------------------
CS.RUN			inc ArgIndex
				lda ArgIndex
				>LIBC ArgV
				bcs .8

				>STYA ZPPtr1

				lda (ZPPtr1)
				cmp #'-'
				bne .4

				jsr CS.RUN.CheckOpt
				bcc CS.RUN

.9				>LDYA L.MSG.USAGE
				>LIBC PutS
				lda #E.SYN
				sec
				rts
*--------------------------------------
.4				>LDA.G pArcName+1
				bne .5

				>SS
				>PUSHW ZPPtr1
				>PUSHWI 0
				>LIBC RealPath
				>SR
				bcs .99
				
				>STYA.G pArcName
				bra CS.RUN
*--------------------------------------
.5				>LDA.G pSrcBasePath+1
				bne .9

				>LDYA ZPPtr1
				jsr X.InitSrcDirYA
				bcc CS.RUN

.99				rts
*--------------------------------------
.8				>LDA.G pArcName+1
				beq .9

				>LDA.G pSrcBasePath+1
				beq .9
*--------------------------------------
				>LDYAI 256
				>LIBC Malloc
				bcs .99

				>STYA ZPFullPath

				>LDYA.G pSrcBasePath
				>STYA ZPPtr1

				ldy #$ff

.80				iny
				lda (ZPPtr1),y
				bne .80

				tya
				clc
				adc ZPFullPath
				sta ZPRelPath
				lda ZPFullPath+1
				adc #0
				sta ZPRelPath+1

				jsr CS.RUN.OpenArc
				bcs .99

				>LDYAI CHNK.SIZE
				>LIBC Malloc
				bcs .99

				>STYA X.Arc.SrcPtr

				>LDYAI CHNK.SIZE
				>LIBC Malloc
				bcs .99

				>STYA X.Arc.DstPtr
*--------------------------------------
CS.RUN.LOOP		>SLEEP
	
				jsr X.CheckCtrl
				bcs .99

				bvs CS.RUN.LOOP			Pause...

				jsr X.GetEntry
				bcs .9

				jsr X.IncludeMatch
				bcs .8					no match, skip....

				jsr X.IgnoreMatch
				bcc .8					match, skip

				ldy #S.STAT.MODE+1
				lda (ZPFileStat),y
				and #$70
				beq .6

				cmp /S.STAT.MODE.DIR
				bne .8

				jsr CS.RUN.DIR
				bcs .99

				bra .8

.6				jsr CS.RUN.FILE
				bcs .99

				bra .8

.9				jsr X.LeaveSubDir
				bcs .90

				jsr X.BasePath..

.8				jsr X.GetNextEntry
				jmp CS.RUN.LOOP

.90				lda #0
				sec
.99				rts
*--------------------------------------
CS.RUN.DIR		lda bRecurse
				bpl .8

				lda (ZPFileName)
				cmp #'.'
				bne .1

				ldy #1
				lda (ZPFileName),y
				beq .8

				cmp #'.'
				bne .1

				iny
				lda (ZPFileName),y
				beq .8

.1				jsr CS.RUN.BuildFilePath

				>SS
				>PUSHW L.MSG.DIR
				>PUSHW ZPRelPath
				>PUSHBI 2
				>LIBC PrintF
				>SR
				bcs .9

				jsr CS.RUN.WriteArcHdrDir
				bcs .9

				>LDYA ZPFileName
				jsr X.EnterSubDirYA

.9				jmp CS.RUN.CheckErr

.8				clc
				rts
*--------------------------------------
CS.RUN.FILE		jsr CS.RUN.BuildFilePath

				>SS
				>PUSHW ZPFullPath
				>PUSHW.G pArcName
				>LIBC StrCmp
				>SR
				bcc .8

				>SS
				>PUSHW L.MSG.FILE
				>PUSHW ZPRelPath
				>PUSHBI 2
				>LIBC PrintF
				>SR
				bcs .9

				jsr CS.RUN.WriteArcHdrFile
				bcs .9

				jsr CS.RUN.OpenFile
				bcs .9

.1				lda #'.'
				>LIBC PutChar

				jsr CS.RUN.ReadFile
				bcc .2

				cmp #MLI.E.EOF
				bne .4

				jsr CS.RUN.CloseFile

				bra .9

.2				>LDYA.G Shunk.SrcSize
				jsr X.Arc
				bcs .3

				>STYA.G Shunk.DstSize

				jsr CS.RUN.WriteArcData
				bcc .1

				bra .4

.3				jsr CS.RUN.WriteSrcData
				bcc .1

.4				pha
				jsr CS.RUN.CloseFile
				pla
				sec

.9				jmp CS.RUN.CheckErr

.8				clc
				rts
*--------------------------------------
CS.RUN.CheckErr	bcs .1

				>LDYA L.MSG.OK
				>LIBC PutS
				rts

.1				pha

				tay
				>SS
				>PUSHW L.MSG.ERR
				tya
				>PUSHA
				>PUSHBI 1
				>LIBC PrintF
				>SR

				pla
				sec
				rts
*--------------------------------------
CS.RUN.BuildFilePath
				>SS
				>PUSHW ZPFullPath
				>LDYA.G pSrcBasePath
				>PUSHYA
				>LIBC StrCpy

				>PUSHW ZPFullPath
				>PUSHW ZPFileName
				>LIBC StrCat
				rts
*--------------------------------------
CS.RUN.OpenFile	>SS
				>PUSHW ZPFullPath
				>PUSHBI	O.RDONLY
				>PUSHBI 0				Type
				>PUSHWZ					Aux type
				>LIBC FOpen
				>SR
				bcs .9

				>STYA.G pFile

.9				rts
*--------------------------------------
CS.RUN.ReadFile >SS
				>PUSHW.G pFile
				>PUSHW X.Arc.SrcPtr
				>PUSHWI CHNK.SIZE
				>LIBC FRead
				>SR
				bcs .9

				>STYA.G Shunk.SrcSize

.9				rts
*--------------------------------------
CS.RUN.CloseFile
				>LDYA.G pFile
				>LIBC FClose
				bcs .9

				>STZ.G pFile+1

.9				rts
*--------------------------------------
CS.RUN.OpenArc	bit bAppend
				bmi CS.RUN.AppendArc

				>SS
				>PUSHW.G pArcName
				>PUSHBI	O.CREATE+O.WRONLY
				>PUSHBI $CF				Arc
				>PUSHWZ					Aux type
				>LIBC FOpen
				bcs .9

				>STYA.G pArcFile

				>SS
				>PUSHW L.ARC.Header
				>PUSHW.G pArcFile
				>LIBC FPutS
				>SR
.9
CS.RUN.OpenArc.RTS
				rts
*--------------------------------------
CS.RUN.AppendArc
				>SS
				>PUSHW.G pArcName
				>PUSHBI	O.RDWR+O.APPEND
				>PUSHBI $CF				Arc
				>PUSHWZ					Aux type
				>LIBC FOpen
				>SR
				bcs CS.RUN.OpenArc.RTS

				>STYA.G pArcFile

				>SS
				>PUSHW.G pArcFile
				>PUSHLZ
				>PUSHWI SEEK.SET
				>LIBC FSeek
				>SR
				bcs CS.RUN.OpenArc.RTS

				>SS
				>PUSHW.G pArcFile
				>LEA.G HeaderBuf
				>STYA ZPPtr1
				>PUSHYA
				>PUSHWI 3
				>LIBC FRead
				>SR
				bcs .9

				cpy #3
				bne .99

				dey

.2				lda ARC.Header,y
				cmp (ZPPtr1),y
				bne .99

				dey
				bpl .2

				>SS
				>PUSHW.G pArcFile
				>PUSHLZ
				>PUSHWI SEEK.END
				>LIBC FSeek
				>SR

.9				rts

.99				>LDYA L.MSG.E.IARC
				>LIBC PutS
				lda #E.SYN
				sec
				rts
*--------------------------------------
CS.RUN.WriteArcHdrDir
				lda #CHNK.T.DIR
				jsr CS.RUN.WriteArcByteA
				bcc CS.RUN.WriteArcHdr
				rts
*--------------------------------------
CS.RUN.WriteArcHdrFile
				lda #CHNK.T.FILE
				jsr CS.RUN.WriteArcByteA
				bcs CS.RUN.WriteArcHdr.9

				ldy #S.STAT.P.TYPE
				jsr CS.RUN.WriteArcByteY
				bcs CS.RUN.WriteArcHdr.9

				ldy #S.STAT.P.AUXTYPE
				jsr CS.RUN.WriteArcByteY
				bcs CS.RUN.WriteArcHdr.9

				ldy #S.STAT.P.AUXTYPE+1
				jsr CS.RUN.WriteArcByteY
				bcs CS.RUN.WriteArcHdr.9

CS.RUN.WriteArcHdr
				ldy #$ff

.1				iny
				lda (ZPRelPath),y
				bne .1

				tya
				jsr CS.RUN.WriteArcByteA
				bcs CS.RUN.WriteArcHdr.9

				>SS
				>PUSHW ZPRelPath
				>PUSHW.G pArcFile
				>LIBC FPutS
				>SR

CS.RUN.WriteArcHdr.9
				rts
*--------------------------------------
CS.RUN.WriteSrcData
				lda #CHNK.T.DATA
				jsr CS.RUN.WriteArcByteA
				bcs .9

				>LDA.G Shunk.SrcSize
				clc
				adc #3
				pha
				>LDA.G Shunk.SrcSize+1
				adc #0
				sta ZPPtr1+1

				pla
				jsr CS.RUN.WriteArcByteA
				bcs .9

				lda ZPPtr1+1
				jsr CS.RUN.WriteArcByteA
				bcs .9

				lda #0					NO COMPRESSION
				jsr CS.RUN.WriteArcByteA
				bcs .9

				>LDA.G Shunk.SrcSize
				jsr CS.RUN.WriteArcByteA
				bcs .9

				>LDA.G Shunk.SrcSize+1
				jsr CS.RUN.WriteArcByteA
				bcs .9

				>SS
				>PUSHW.G pArcFile
				>PUSHW X.Arc.SrcPtr
				>PUSHW.G Shunk.SrcSize
				>LIBC FWrite
				>SR
				
.9				rts
*--------------------------------------
CS.RUN.WriteArcData
				lda #CHNK.T.DATA
				jsr CS.RUN.WriteArcByteA
				bcs .9

				>LDA.G Shunk.DstSize
				jsr CS.RUN.WriteArcByteA
				bcs .9

				>LDA.G Shunk.DstSize+1
				jsr CS.RUN.WriteArcByteA
				bcs .9

				>SS
				>PUSHW.G pArcFile
				>PUSHW X.Arc.DstPtr
				>PUSHW.G Shunk.DstSize
				>LIBC FWrite
				>SR
				
.9				rts
*--------------------------------------
CS.RUN.WriteArcByteY
				lda (ZPFileStat),y

CS.RUN.WriteArcByteA
				>SS
				tay
				>PUSHB 0
				tya
				>PUSHA
				>PUSHW.G pArcFile
				>LIBC FPutC
				>SR
				
				rts
*--------------------------------------
CS.SIG			sec
				rts
*--------------------------------------
CS.QUIT			jsr X.Quit

				>LDYA ZPFullPath
				beq .1
				
				>LIBC Free
				
.1				>LDYA.G pArcFile
				cmp #0
				beq .2

				>LIBC FClose
.2				ldy #pArcName+1
				jsr .7

				clc
				rts

.7				lda (pData),y
				beq .9

				pha
				dey
				lda (pData),y
				tay
				pla

				>LIBC Free
				
.9				clc
				rts
*--------------------------------------
CS.RUN.CheckOpt	ldy #1
				lda (ZPPtr1),y

				ldx #OptionVars-OptionList-1

.1				cmp OptionList,x
				beq .2

				dex
				bpl .1

				sec
				rts

.2				ldy OptionVars,x
				beq .3					-X

				lda #$ff
				sta 0,y
				clc
				rts
				
.3				inc ArgIndex
				lda ArgIndex
				>LIBC ArgV
				bcs .99

				>LIBC StrDup
				bcs .99

				>STYA.G pIgnore

				clc
				
.99				rts
*--------------------------------------
				.INB usr/src/shared/x.checkctrl.s
				.INB usr/src/shared/x.fileenum.s
				.INB usr/src/shared/x.arc.s
*--------------------------------------
OptionList		.AS "AaRrXx"
OptionVars		.DA #bAppend,#bAppend,#bRecurse,#bRecurse,#0,#0
*--------------------------------------
MSG.USAGE		.CS "Usage : ARC Archive [File *,? wildcards allowed]\r\n"
				.CS "   -A : Append to archive\r\n"
				.CS "   -R : Recurse subdirectories\r\n"
				.CZ "   -X <*,? wildcards allowed> : exclude files \r\n"
MSG.OK			.CZ "[OK]"
MSG.ERR			.CZ "[%h]\r\n"
MSG.E.IARC		.CZ "Invalid/corrupt archive"
MSG.DIR			.CZ "Reading Dir:%s..."
MSG.FILE		.CZ "Adding File:%s..."
ARC.Header		.CZ "ARC"
*--------------------------------------
ID.END			.EQ *
*--------------------------------------
				.DUMMY
				.OR 0
pArcName		.BS 2
pArcFile		.BS 2
pFile			.BS 2

HeaderBuf		.BS 3

Shunk.SrcSize	.BS 2
Shunk.DstSize	.BS 2

				.INB usr/src/shared/x.fileenum.g
DS.END			.ED
*--------------------------------------
MAN
SAVE usr/src/bin/arc.s
ASM
