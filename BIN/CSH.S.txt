NEW
PREFIX
AUTO 4,1								Enable MASM3 auto line num
				.LIST OFF
				.OP	65C02				Target CPU, must match CPU level in header
				.OR	$2000				usualy $2000, but any value > $100 allowed
				.TF BIN/CSH
*--------------------------------------
				.INB INC/MACROS.I
				.INB INC/A2OSX.I
				.INB INC/MLI.E.I
*--------------------------------------
				.INB USR/SRC/BIN/CSH.E
*--------------------------------------
* Zero Page Segment, up to 32 bytes
*--------------------------------------
				.DUMMY
				.OR ZPBIN
ZS.START
ZPPtr1			.BS 2
ZPPtr2			.BS 2
ZPFileBufPtr	.BS 2

ZPCSHSymbols	.BS 2
ZPCSHData		.BS 2
ZPCSHValue		.BS 2
ZPCSHStack		.BS 2
ZS.END			.ED
*--------------------------------------
*			File Header (16 Bytes)
*--------------------------------------
CS.START		cld
				jmp (.1,x)
				.DA #$61				6502,Level 1 (65c02)
				.DA #1					BIN Layout Version 1
				.DA #0					S.PS.F.EVENT
				.DA #0
				.DA CS.END-CS.START		Code Size (without Constants)
				.DA DS.END-DS.START		Data SegmentSize
				.DA #16					Stack Size
				.DA #ZS.END-ZS.START	Zero Page Size
				.DA 0
*--------------------------------------
* Relocation Table
*--------------------------------------				
.1				.DA CS.INIT
				.DA CS.RUN
				.DA CS.DOEVENT		
				.DA	CS.QUIT
				.INB USR/SRC/BIN/CSH.R
				.DA 0
*--------------------------------------
* Called once at process creation
* Put code for loading LIB here
*--------------------------------------
CS.INIT			clc
				rts
*--------------------------------------
* Called until exit with CS
* if RUN exits with CC, RN entered again
*--------------------------------------
CS.RUN			
				
* Put your code here
* 				>LDYA L.MSG.Test		Load EFFECTIVE address
*				>SYSCALL puts			Call API to print a	string
				
.8				lda #0					Exit Code = Succes 
				sec						QUIT Process
				rts
				
.9				lda #E.SYN				Exit Code = Succes 
				sec						QUIT Process
				rts
*--------------------------------------
* Called if option S.PS.F.EVENT enabled in Header
* Timer Event : every 10th seconds
*--------------------------------------
CS.DOEVENT		sec
				rts
*--------------------------------------
* Called once, when RUN exited with CS
* Put code for unloading LIB here
*--------------------------------------
CS.QUIT			clc
				rts
*--------------------------------------
				.INB USR/SRC/BIN/CSH.S.CORE
*--------------------------------------
CS.END
*--------------------------------------
* Initialized DATA
*--------------------------------------
				.INB USR/SRC/BIN/CSH.I
*--------------------------------------
				.DUMMY
				.OR 0
DS.START		.INB USR/SRC/BIN/CSH.D
DS.END
				.ED
*--------------------------------------
MAN
SAVE USR/SRC/BIN/CSH.S
ASM
