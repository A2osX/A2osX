NEW
  AUTO 3,1
				.LIST OFF
				.OP	65C02
				.OR	$2000
				.TF bin/uname
*--------------------------------------
				.INB inc/macros.i
				.INB inc/a2osx.i
				.INB inc/io.i
				.INB inc/io.iic.i
*--------------------------------------
				.DUMMY
				.OR ZPBIN
ZS.START
ZPPtr1			.BS 2
ZPPtr2			.BS 2

Index			.BS 1
Count			.BS 1

CPUSpeed		.BS 2					WORD, (->255.99 Mhz)

pFILE			.BS 2

bHostname		.BS 1
bMachineType	.BS 1
bCPUType		.BS 1
bCPUSpeed		.BS 1
bAltCPU			.BS 1
bKernelVersion	.BS 1
bKernelBuild	.BS 1
bKernelMode		.BS 1
bKernelHz		.BS 1
bFSID			.BS 1
ZS.END			.ED
*--------------------------------------
*			File Header (16 Bytes)
*--------------------------------------
CS.START		cld
				jmp (.1,x)
				.DA #$61				6502,Level 1 (65c02)
				.DA #2					BIN Layout Version 2
				.DA #0
				.DA #0
				.DA CS.END
				.DA ID.END
				.DA DS.END
				.DA #32					Stack Size
				.DA #ZS.END-ZS.START	Zero Page Size
*--------------------------------------
* Relocation Table
*--------------------------------------
.1				.DA CS.INIT
				.DA CS.RUN
				.DA CS.SIG
				.DA	CS.QUIT
L.MSG.USAGE		.DA MSG.USAGE
L.MSG.CRLF		.DA MSG.CRLF
L.ETCHOSTNAME	.DA ETCHOSTNAME
L.ETCVERSION	.DA ETCVERSION
L.TYPES			.DA TYPE.UNKNOWN
				.DA TYPE.IIe
				.DA TYPE.IIc
				.DA TYPE.IIgs
L.SUBT.ROM		.DA SUBT.ROM
L.SUBT.IIE		.DA SUBT.ENH
				.DA SUBT.LCCARD
L.CPUS			.DA CPU.65C02
				.DA CPU.65R02
				.DA CPU.65816
L.CPU.SPEED		.DA CPU.SPEED
L.CPU.Z80		.DA CPU.Z80
L.KERNEL.VER	.DA KERNEL.VER
L.KERNEL.MODES	.DA	KERNEL.POLLING
				.DA	KERNEL.IRQ
				.DA	KERNEL.PREEMPT
L.FSID			.DA FSID.PRODOS
				.DA FSID.FX
L.KERNEL.HZ		.DA KERNEL.HZ
				.DA 0
*--------------------------------------
CS.INIT			clc
				rts
*--------------------------------------
CS.RUN			ldy #S.PS.ARGC
				jsr A2osX.GetPSy
				beq .8

.1				inc Index
				lda Index
				>KAPI ArgV
				bcs CS.RUN.PRINT

				>STYA ZPPtr1
				lda (ZPPtr1)
				cmp #'-'
				bne .99

				ldy #1
				lda (ZPPtr1),y
				beq .99

				jsr CS.RUN.CheckOpt
				bcc .1

.99				>LDYA L.MSG.USAGE
				>LIBC PutS

				lda #E.SYN
				sec
				rts

.8				lda #$ff

				sta bHostname
				sta bMachineType
				sta bCPUType
				sta bCPUSpeed
				sta bAltCPU
				sta bKernelVersion
				sta bKernelBuild
				sta bKernelMode
				sta bKernelHz
				sta bFSID
*--------------------------------------
CS.RUN.PRINT	bit bHostname
				bpl .1

				jsr CS.RUN.GetHostName

.1				bit bMachineType
				bpl .2

				jsr CS.RUN.TYPESUBT

.2				bit bCPUType
				bpl .3

				jsr CS.RUN.CPUType

.3				bit bCPUSpeed
				bpl .4

				jsr CS.RUN.CPUSpeed

.4				bit bAltCPU
				bpl .5

				jsr CS.RUN.AltCPU

.5				bit bKernelVersion
				bpl .6

				jsr CS.RUN.KVER

.6				bit bKernelBuild
				bpl .7

				jsr CS.RUN.GetBuild

.7				bit bKernelMode
				bpl .8

				jsr CS.RUN.KMode

.8				bit bKernelHz
				bpl .9

				jsr CS.RUN.HZ

.9				bit bFSID
				bpl .10

				jsr CS.RUN.FSID

.10				>SS
				>PUSHW L.MSG.CRLF
				>PUSHBI 0
				>LIBC PrintF
				>SR

				lda #0
				sec
				rts
*--------------------------------------
CS.RUN.GetHostName
				>LDYA L.ETCHOSTNAME
				bra CS.RUN.GetFile

CS.RUN.GetBuild	>LDYA L.ETCVERSION

CS.RUN.GetFile	stz pFILE+1

				>SS
				>PUSHYA
				>PUSHBI	O.RDONLY
				>PUSHBI 0

				sta (pData)				HostNameBuf

				>PUSHWZ
				>LIBC FOpen
				>SR
				bcs .9

				>STYA pFILE

				>LEA.G FGetSBuf
				>STYA ZPPtr1

.1				>SS
				>PUSHW ZPPtr1
				>PUSHWI 64
				>PUSHW pFILE
				>LIBC FGetS
				>SR
				bcs .8

				lda (ZPPtr1)
				beq .1

				cmp #'#'
				beq .1

				ldy #$ff

.2				iny
				lda (ZPPtr1),y
				sta (pData),y			HostNameBuf
				bne .2

.8				jsr CS.RUN.IncCount

				>LDYA pData				HostNameBuf
				jsr CS.RUN.PrintYA
				
				clc

.9				php
				pha

				>LDYA pFILE
				beq .90

				>LIBC FClose

.90				pla
				plp
				rts
*--------------------------------------
CS.RUN.TYPESUBT	jsr CS.RUN.IncCount

				lda A2osX.HWT
				asl
				tax

				>LDYA L.TYPES,x
				jsr CS.RUN.PrintYA

				lda A2osX.HWT
				beq .8					Unknown

				cmp #A2osX.HWT.IIc
				bcc .1

				>SS
				>PUSHW L.SUBT.ROM		//c & IIgs
				>PUSHB A2osX.HWSubT
				>PUSHBI 1
				>LIBC PrintF
				>SR
				rts

.1				lda A2osX.HWSubT		//e
				beq .8

				asl
				tay

				>SS
				>PUSHW L.SUBT.IIE-2,y
				>PUSHBI 0
				>LIBC PrintF
				>SR

.8				rts
*--------------------------------------
CS.RUN.HZ		jsr CS.RUN.IncCount

				>SS
				>PUSHW L.KERNEL.HZ
				>PUSHB A2osX.HZ
				>PUSHBI 1
				>LIBC PrintF
				>SR
				rts
*--------------------------------------
CS.RUN.FSID		jsr CS.RUN.IncCount

				ldx #0
				bit A2osX.FSID
				bpl .1

				inx
				inx

.1				>LDYA L.FSID,x
				jmp CS.RUN.PrintYA
*--------------------------------------
CS.RUN.KVER		jsr CS.RUN.IncCount

				>SS
				>PUSHW L.KERNEL.VER
				>PUSHW A2osX.KVER
				>PUSHBI 2
				>LIBC PrintF
				>SR
				rts
*--------------------------------------
CS.RUN.KMode	jsr CS.RUN.IncCount

				ldx #0
				bit A2osX.bIRQ
				bpl .1

				inx
				inx
				bit A2osX.F
				bvc .1

				inx
				inx

.1				>LDYA L.KERNEL.MODES,x
				jmp CS.RUN.PrintYA
*--------------------------------------
CS.RUN.AltCPU	lda A2osX.Z80SLOT
				beq .8

				jsr CS.RUN.IncCount

				>LDYA L.CPU.Z80
				bra CS.RUN.PrintYA

.8				clc
				rts
*--------------------------------------
CS.RUN.CPUSpeed	jsr CS.RUN.CPU

				jsr CS.RUN.IncCount

				>SS
				>PUSHW L.CPU.SPEED
				>PUSHW CPUSpeed
				>PUSHBI 2
				>LIBC PrintF
				>SR
				rts
*--------------------------------------
CS.RUN.CPUType	jsr CS.RUN.IncCount

				lda A2osX.CPUTYPE

				asl
				and #$0F
				tax

				>LDYA L.CPUS-2,x
*--------------------------------------
CS.RUN.PrintYA	>SS
				>PUSHYA
				>PUSHBI 0
				>LIBC PrintF
				>SR
				rts
*--------------------------------------
CS.RUN.IncCount	lda Count
				beq .1

				lda #C.SPACE
				>LIBC PutChar

.1				inc Count

				rts
*--------------------------------------
CS.SIG			sec
				rts
*--------------------------------------
CS.QUIT			clc
				rts
*--------------------------------------
CS.RUN.CheckOpt	ldy #1
				lda (ZPPtr1),y

				ldx #OptionVars-OptionList-1

.2				cmp OptionList,x
				beq .3

				dex
				bpl .2

				sec
				rts

.3				ldy OptionVars,x
				ldx #$ff
				stx 0,y
				clc
				rts
*--------------------------------------
CS.RUN.CPU		stz CPUSpeed+1

				ldy #0

				php
				sei

				lda A2osX.HWT
				cmp #A2osX.HWT.IIc
				beq CS.RUN.CPU2C
*--------------------------------------
* VBL = 20.000us 50hz, 16.666 60hz
*--------------------------------------
				ldx A2osX.HZ

.1				bit IO.VBL				//e : Wait VBL high....
				bpl .1

.2				lda IO.VBL				//e : wait VBL low
				bmi .2

.3				pha						(3)

				lda CPU.Hz2L-5,x		(5) 50Hz = 36, 60Hz = 29

.4				dec						(2)
				bne .4					(3)

				iny						(2)	38*5+10 = 200us
				cpy #100				(3)
				bne .5					(3)

				inc CPUSpeed+1
				ldy #0

.5				pla

				eor IO.VBL
				bpl .3

				lda IO.VBL
				bmi .3

				bra CS.RUN.CPUOK
*--------------------------------------
CS.RUN.CPU2C	lda IO.RDIOUDIS
				pha
				sta IO.CLRIOUDIS

				lda IO.IIC.RDVBLMSK
				pha						Save VBLIRQ enable
				sta IO.IIC.ENVBL

				lda IO.IIC.CLRVBLIRQ

.1				bit IO.VBL				Wait VBL high....
				bpl .1

				bit IO.IIC.CLRVBLIRQ	clear //c IRQ

.3				ldx A2osX.HZ

.4				pha						(3)
				pla						(4)
				pha						(3)
				pla						(4)

				dex
				bne .4

				iny
				cpy #100
				bne .5

				inc CPUSpeed+1
				ldy #0

.5				bit IO.VBL				Wait VBL high....
				bpl .3

				bit IO.IIC.CLRVBLIRQ	clear //c IRQ

				pla						Disable VBLIRQ ?
				bpl .8

				sta IO.IIC.DISVBL

.8				pla
				bpl CS.RUN.CPUOK

				sta IO.SETIOUDIS
*--------------------------------------
CS.RUN.CPUOK	plp

				sty CPUSpeed

				rts
*--------------------------------------
CS.END			.EQ *
*--------------------------------------
OptionList		.AS "HhMmCcSsAaVvBbKkZzXx"
OptionVars		.DA #bHostname,#bHostname
				.DA #bMachineType,#bMachineType
				.DA #bCPUType,#bCPUType
				.DA #bCPUSpeed,#bCPUSpeed
				.DA #bAltCPU,#bAltCPU
				.DA #bKernelVersion,#bKernelVersion
				.DA #bKernelBuild,#bKernelBuild
				.DA #bKernelMode,#bKernelMode
				.DA #bKernelHz,#bKernelHz
				.DA #bFSID,#bFSID
*--------------------------------------
MSG.USAGE		.CS "Usage : UNAME\r\n"
				.CS "   -H : Hostname\r\n"
				.CS "   -M : Machine Type/SubType\r\n"
				.CS "   -C : CPU Type\r\n"
				.CS "   -S : CPU Speed\r\n"
				.CS "   -A : Alternate CPU\r\n"
				.CS "   -V : Kernel Version\r\n"
				.CS "   -B : Kernel Build\r\n"
				.CS "   -K : Kernel Mode\r\n"
				.CS "   -Z : Kernel Timing\r\n"
				.CS "   -X : ProDOS | FX"
MSG.CRLF		.CZ "\r\n"
*--------------------------------------
ETCHOSTNAME		.AZ "/etc/hostname"
ETCVERSION		.AZ "/etc/version"
*--------------------------------------
TYPE.UNKNOWN	.AZ "Unknown_HW"
TYPE.IIe		.AZ "Apple//e"
TYPE.IIc		.AZ "Apple//c"
TYPE.IIgs		.AZ "AppleIIgs"
SUBT.ROM		.AZ "_ROM%h"
SUBT.ENH		.AZ "_Enh"
SUBT.LCCARD		.AZ "_LCCard"
CPU.65C02		.AZ "65c02"
CPU.65R02		.AZ "65r02"
CPU.65816		.AZ "65816"
CPU.SPEED		.AZ "%d.%02dmhz"
CPU.Z80			.AZ "Z80"
CPU.Hz2L		.DA #36,#29
KERNEL.VER		.AZ "A2osX_%d.%02d"
KERNEL.POLLING	.AZ "Polling_Mode"
KERNEL.IRQ		.AZ "IRQ_Mode"
KERNEL.PREEMPT	.AZ "Preemptive_Mode"
KERNEL.HZ		.AZ "%d0hz"
FSID.PRODOS		.AZ "ProDOS"
FSID.FX			.AZ "FX"
*--------------------------------------
ID.END			.EQ *
*--------------------------------------
				.DUMMY
				.OR 0
HostNameBuf		.BS 65
FGetSBuf		.BS 65
DS.END			.ED
*--------------------------------------
MAN
SAVE usr/src/bin/uname.s
ASM
