NEW
  AUTO 3,1
*--------------------------------------
DIR				jsr CORE.GetNCharNB
				bcs DIR.CSYN

				>LDYA L.CC.DIRS
				jsr CC.LookupID
				bcs DIR.CSYN
				
				cpx #DIR.ELSE.ID
				bcs .8
				
				>LDA.G CC.DirState
				bpl .8					TRUE
				
				clc						Skip line
				rts

.8				jmp (J.CC.DIRS,x)

DIR.CSYN		lda #E.CSYN
				sec
DIR.RTS			rts
*--------------------------------------
DIR.DEFINE		jsr CC.CheckSpace
				bcs DIR.CSYN

				jsr CC.IsLetter
				bcs DIR.CSYN

				>SS
				>PUSHW.G CC.pDefines
				>PUSHW ZP.pLineBuf
				>PUSHWI 0				ScopeID
				>PUSHWI	ZP.pLineBuf		NextPtr
				>KAPI SListNewKey
				>SR
				bcs .99

				>STYA ZPPtr1			SymID

				jsr CC.CheckSpace
				bcs .99

				ldy #$ff

.1				iny
				lda (ZP.pLineBuf),y
				beq .2

				cmp #C.CR
				bne .1

				dey

.2				iny

				>SS
				phy
				>PUSHW.G CC.pDefines
				>PUSHW ZPPtr1			SymID
				>PUSHW ZP.pLineBuf
				ply
				lda #0
				>PUSHYA					DataLen
				>KAPI SListAddData
				>SR
				bcs .99
				
				jmp CORE.SkipLine
				
.99				rts
*--------------------------------------
DIR.INCLUDE		lda #0					>STZ.G PathBuf
				sta (pData)

				jsr CC.CheckSpace
				bcs .99

				cmp #'"'
				beq .1

				cmp #'<'
				bne .90

				>LDYA L.ENV.INCLUDE
				>LIBC GetEnv
				bcs .90
				
				>STYA ZPPtr1
				
				ldy #$ff
				
.10				iny
				lda (ZPPtr1),y
				sta (pData),y 
				bne .10

				lda #'>'

.1				sta ArgIndex

				ldy #$ff

.2				iny
				lda (pData),y
				bne .2

.3				jsr CC.GetNextChar
				beq .90

				cmp ArgIndex
				beq .4

				sta (pData),y
				iny
				cpy #MLI.MAXPATH
				bne .3

.90				lda #E.CSYN
				sec
.99				rts

.4				phy
				jsr CC.GetNextChar		skip " or >
				ply

				lda #0
				sta (pData),y			terminate string

				>LDYA pData
				jmp FIO.FOpen
*--------------------------------------
DIR.IFDEF		clc
				.HS B0					BCS
DIR.IFNDEF		sec

				lda #0
				ror ZPPtr1
				
				jsr CC.CheckSpace
				bcs DIR.ESYN2

				jsr CC.IsLetter
				bcs DIR.ESYN2

				>SS
				>PUSHW.G CC.pDefines
				>PUSHW ZP.pLineBuf
				>PUSHWI 0				ScopeID
				>PUSHWI	ZP.pLineBuf	NextPtr
				>KAPI SListLookup
				>SR
	
				ror						CS if not found
				eor ZPPtr1
				asl
				
				>LDA.G CC.DirState
				ror
				sta (pData),y

				>DEC.G CC.DirDepth
				cmp #$F8
				bcs .8
				
				lda #E.OOB
				sec
				rts
				
.8				clc
				rts
*--------------------------------------
DIR.ESYN2		lda #E.ESYN
				sec
				rts
*--------------------------------------
DIR.ELSE		>LDA.G CC.DirDepth
				beq DIR.ESYN2
				
				>LDA.G CC.DirState
				eor #$80
				sta (pData),y
				clc
				rts
*--------------------------------------
DIR.ENDIF		>LDA.G CC.DirDepth
				beq DIR.ESYN2
				
				inc
				sta (pData),y

				>LDA.G CC.DirState
				asl
				sta (pData),y
				
				clc
				rts
*--------------------------------------
MAN
SAVE usr/src/bin/cc.s.dir
LOAD usr/src/bin/cc.s
ASM
