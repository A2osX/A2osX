NEW
  AUTO 3,1
				.LIST OFF
				.OP	65C02
				.OR	$2000
				.TF bin/format
*--------------------------------------
				.INB inc/macros.i
				.INB inc/a2osx.i
				.INB inc/mli.e.i
				.INB inc/libblkdev.i
*--------------------------------------
				.DUMMY
				.OR ZPBIN
ZS.START
ZPPtr1			.BS 2
pFD				.BS 2
pDevName		.BS 2
pCatBuf			.BS 2

ArgIndex		.BS 1
TimeOut			.BS 1
DSSS0000 		.BS 1
CurTrack		.BS 1
CurQTrack		.BS 1
TCounter		.BS 1
CurHead			.BS 1
HCounter		.BS 1

BlkCnt			.BS 2
TrkCnt			.BS 1
Stepping		.BS 1
VolNum			.BS 1
bAltBB			.BS 1
HeadCnt			.BS 1

BlkNum			.BS 1

hFD				.BS 1

CatSize			.BS 1
CatBlkCnt		.BS 1
bLL				.BS 1
bVerify			.BS 1
bCustomBlkSize	.BS 1

pTrackBuf		.BS 2
ZS.END
				.ED
*--------------------------------------
*			File Header (16 Bytes)
*--------------------------------------
CS.START		cld
				jmp (.1,x)
				.DA #$61				6502,Level 1 (65c02)
				.DA #2					BIN Layout Version 2
				.DA #S.PS.SIG.T1SEC
				.DA #0
				.DA CS.END
				.DA ID.END
				.DA DS.END
				.DA #64					Stack Size
				.DA #ZS.END-ZS.START	Zero Page Size
*--------------------------------------
* Relocation Table
*--------------------------------------
.1				.DA CS.INIT
				.DA CS.RUN
				.DA CS.SIG
				.DA	CS.QUIT
L.LIBBLKDEV		.DA LIBBLKDEV
L.MSG.USAGE1	.DA MSG.USAGE1
L.MSG.USAGE2	.DA MSG.USAGE2
L.MSG.OK		.DA MSG.OK
L.MSG.ERR		.DA MSG.ERR
L.MSG.CRLF		.DA MSG.CRLF
L.MSG.NOSIZE	.DA MSG.NOSIZE
L.MSG.INIT		.DA MSG.INIT
L.MSG.LL		.DA MSG.LL
L.MSG.LLDISK2	.DA MSG.LLDISK2
L.MSG.VERIFY	.DA MSG.VERIFY
L.MSG.WRITECAT	.DA MSG.WRITECAT
L.FMT.BLANK		.DA FMT.BLANK
J.Opts			.DA CS.RUN.OptA
				.DA CS.RUN.OptB
				.DA CS.RUN.OptD
				.DA CS.RUN.OptL
				.DA CS.RUN.OptS
				.DA CS.RUN.OptT
				.DA CS.RUN.OptV
				.DA 0
*--------------------------------------
CS.INIT			>LDYA L.LIBBLKDEV
				>LIBC LoadLib
				bcs .9

				>STYA LIBBLKDEV

.9				rts
*--------------------------------------
CS.RUN			ldy #S.PS.ARGC
				jsr A2osX.GetPSy
				beq .99

				ldx #6

.10				lda Disk2.Default,x
				sta BlkCnt,x
				dex
				bpl .10

.1				jsr CS.RUN.NextArg
				bcs .8

				>STYA ZPPtr1
				lda (ZPPtr1)
				cmp #'-'
				bne .4

				ldy #1
				lda (ZPPtr1),y
				beq .99

				cmp #'0'
				bcc .2

				cmp #'9'+1
				bcs .2

				and #$0F
				sta CatSize
				bra .1

.2				jsr CS.RUN.CheckOpt
				bcs .99

				bra .1

.4				lda hFD
				bne .5					Already have a dev...go get VolName

				jsr CS.RUN.GetDev
				bcc .1

				rts

.5				jsr CS.RUN.GetVolName
				bcc .1

				rts

.99				>LDYA L.MSG.USAGE1
				>LIBC PutS

				>LDYA L.MSG.USAGE2
				>LIBC PutS

				lda #E.SYN
				sec
.9				rts

.8				lda hFD
				beq .99
*--------------------------------------
CS.RUN.Format	jsr CS.RUN.InitCat
				bcs .90

				jsr CS.RUN.GetDevDIB
				bcs .90

				>SS
				>PUSHW L.MSG.INIT
				>PUSHW pDevName
				>PUSHW pData			>PUSHEA.G VolName
				>PUSHBI 4
				>LIBC PrintF
				>SR
				bcs .9

				jsr CS.RUN.GET.DSSS0000

				bit bLL
				bpl .1

				jsr CS.RUN.LL

.90				bcs .9

.1				jsr CS.RUN.BuildCat
				bcs .9

				jsr CS.RUN.WriteCat
				bcs .9

				>LDYA L.MSG.OK
				>LIBC PutS
				bcs .9

				>SS
				>PUSHB DSSS0000
				>PUSHW pData
				>LIBC Online
				>SR
				bcs .9

				lda #0
				sec
				rts

.9				pha
				>SS
				tay
				>PUSHW L.MSG.ERR
				tya
				>PUSHA
				>PUSHBI 1
				>LIBC PrintF
				>SR
				pla
				sec
				rts
*--------------------------------------
CS.RUN.CheckOpt	ldy #1
				lda (ZPPtr1),y

				ldx #OptionList.L-1

.2				cmp OptionList,x
				beq .3

				dex
				bpl .2

				sec
				rts

.3				txa
				and #$fe
				tax
				jmp (J.Opts,x)
*--------------------------------------
CS.RUN.OptA		sec
				ror	bAltBB

				clc
				rts
*--------------------------------------
CS.RUN.OptB		jsr CS.RUN.NextArg
				bcs .9

				>LIBC AToI
				>STYA BlkCnt

				sec
				ror bCustomBlkSize

				clc

.9				rts
*--------------------------------------
CS.RUN.OptD		lda #2
				sta HeadCnt

				lda #$80
				tsb VolNum

				clc
				rts
*--------------------------------------
CS.RUN.OptV		sec
				ror bVerify
*--------------------------------------
CS.RUN.OptL		sec
				ror	bLL

				clc
				rts
*--------------------------------------
CS.RUN.OptS		jsr CS.RUN.NextArg
				bcs .99

				>LIBC AToI
				tax
				bne .9

				tya
				beq .9

				cmp #5
				bcs .99

				sta Stepping
				cmp #4
				beq .8

				tsb VolNum

				sec
				ror bAltBB

.8				clc
				rts

.9				sec

.99				rts
*--------------------------------------
CS.RUN.OptT		jsr CS.RUN.NextArg
				bcs .99

				>LIBC AToI
				tax
				bne .9

				tya
				beq .9

				sta TrkCnt

				clc
				rts

.9				sec

.99				rts
*--------------------------------------
CS.RUN.NextArg	inc ArgIndex
				lda ArgIndex
				>LIBC ArgV
				rts
*--------------------------------------
CS.RUN.GetDev	>LDYA ZPPtr1
				>LIBC GetDevByName
				bcs .9

				sta hFD
				>KAPI GetFDByID

				>STYA pFD

				>LDYA ZPPtr1
				>STYA pDevName

.9				rts
*--------------------------------------
CS.RUN.GetVolName
				lda (pData)
				bne .9

				lda (ZPPtr1)
				jsr CS.RUN.IsL
				bcs .9

				sta (pData)				VolName

				ldy #0

.1				iny
				lda (ZPPtr1),y
				sta (pData),y
*				clc
				beq .8					\0

				jsr CS.RUN.IsDOrL
				bcs .9

				cpy #16
				bcc .1					VolName too long ?

.9				lda #E.SYN

				sec

.8				rts
*--------------------------------------
CS.RUN.GetDevDIB
				>LEA.G DEV.DIB
				>STYA.G DEV.IOCTL+S.IOCTL.BUFPTR

				lda #S.IOCTL.S.GETDIB
				>STA.G DEV.IOCTL+S.IOCTL.S

				>SS
				>PUSHBI 0
				>PUSHB hFD
				>PUSHBI IOCTL.STATUS
				>PUSHEA.G DEV.IOCTL
				>LIBC IOCTL
				>SR
				bcs .99

				lda bCustomBlkSize
				bmi .8

				>LDA.G DEV.DIB+S.DIB.SIZE
				tax
				iny
				ora (pData),y
				beq .9

				lda (pData),y
				sta BlkCnt+1
				stx BlkCnt

.8				clc
				rts

.9				>LDYA L.MSG.NOSIZE
				>LIBC PutS
				lda #MLI.E.IO
				sec
.99				rts
*--------------------------------------
CS.RUN.GET.DSSS0000
				ldy #S.FD.DEV.BUSID
				lda (pFD),y				00000SSS

				lsr
				ror
				ror
				ror
				pha						SSS00000

				iny 					S.FD.DEV.DEVID

				lda (pFD),y
				dec						0/1
				ror						in C
				pla
				ror
				sta DSSS0000

				rts
*--------------------------------------
CS.RUN.LL		>SS
				>PUSHW L.MSG.LL
				>PUSHW BlkCnt
				>PUSHBI 2
				>LIBC PrintF
				>SR
				bcs .9

				>LDA.G DEV.DIB+S.DIB.T
				cmp #S.DIB.T.D2
				beq CS.RUN.LL.DISKII

				>SS
				>PUSHBI 0
				>PUSHB hFD
				>PUSHBI IOCTL.FORMAT
				>PUSHEA.G DEV.IOCTL
				>LIBC IOCTL
				>SR

.9
CS.RUN.LL.RTS	rts
*--------------------------------------
CS.RUN.LL.DISKII
				jsr CS.RUN.MotorOn
				bcs CS.RUN.LL.RTS

				lda #20
				jsr CS.RUN.Wait
				bcs CS.RUN.LL.RTS

				>SS
				>PUSHB DSSS0000
				>LIBCALL LIBBLKDEV,D2Recalibrate
				>SR

				lda #20
				jsr CS.RUN.Wait
				bcs CS.RUN.LL.RTS

				stz CurTrack
				stz CurQTrack

				lda TrkCnt
				sta TCounter

.1				lda HeadCnt
				sta HCounter

				stz CurHead

.2				jsr CS.RUN.CheckCtrlC
				bcs .9

				jsr CS.RUN.LL.DISKII.P
				bcs .9

				jsr CS.RUN.LL.DISKII.FT
				bcs .9

				inc CurTrack

				inc CurHead
				dec HCounter
				beq .3

				>SS
				>PUSHB DSSS0000
				>PUSHBI 1
				>LIBCALL LIBBLKDEV,D2HeadSelect
				>SR
				bcs .9

				jsr CS.RUN.LL.DISKII.FT
				bcs .9

				>SS
				>PUSHB DSSS0000
				>PUSHBI 0
				>LIBCALL LIBBLKDEV,D2HeadSelect
				>SR
				bcs .9

				inc CurTrack

.3				dec TCounter
				beq .8

				lda CurQTrack
*				clc
				adc Stepping
				tay

				jsr CS.RUN.SeekToY
				jmp .1

.9				pha
				jsr CS.RUN.MotorOff
				pla
				sec
.99				rts

.8				ldy #0
				jsr CS.RUN.SeekToY

				>SS
				>PUSHW L.MSG.CRLF
				>PUSHBI 0
				>LIBC PrintF
				>SR
				bcs .9

				jsr CS.RUN.CheckCtrlC
				bcs .9

				bit bVerify
				bpl .80

				jsr CS.RUN.LL.DISKII.V
				bcs .99

.80				rts
*--------------------------------------
CS.RUN.LL.DISKII.P
				>SS
				>PUSHW L.MSG.LLDISK2
				>PUSHB CurHead
				>PUSHB CurTrack
				inc
				>PUSHA
				>PUSHB TrkCnt
				>PUSHBI 4
				>LIBC PrintF
				>SR
				rts
*--------------------------------------
CS.RUN.LL.DISKII.FT
				>SS
				>PUSHB DSSS0000
				>PUSHB VolNum
				>PUSHB CurHead
				>PUSHB CurTrack
				>LIBCALL LIBBLKDEV,D2TrkFmt16s
				>SR
				rts
*--------------------------------------
CS.RUN.LL.DISKII.V
				>LDYA pTrackBuf
				bne .10

				>LDYAI 512
				>LIBC Malloc
				bcs .99

				>STYA pTrackBuf

.10				>STYA.G DEV.IOCTL+S.IOCTL.BUFPTR

				>LDYA BlkCnt
				>STYA.G DEV.IOCTL+S.IOCTL.BLKNUM

				>STZ.G DEV.IOCTL+S.IOCTL.BLKNUM
				iny
				sta (pData),y

				stz CurTrack

				lda TrkCnt
				sta TCounter

.12				lda HeadCnt
				sta HCounter

				stz CurHead

.1				stz BlkNum

.2				jsr CS.RUN.CheckCtrlC
				bcs .9

				jsr CS.RUN.LL.DISKII.VBLK
.99				bcs .9

				>INCW.G DEV.IOCTL+S.IOCTL.BLKNUM

				inc BlkNum
				lda BlkNum
				cmp #8
				bne .2

				inc CurHead
				dec HCounter
				bne .1

				inc CurTrack
				dec TCounter
				bne .12

				lda TrkCnt
				sta TCounter

.13				lda HeadCnt
				sta HCounter

				stz CurHead

.3				lda #7
				sta BlkNum

				dec CurTrack

.4				jsr CS.RUN.CheckCtrlC
				bcs .9

				>DECW.G DEV.IOCTL+S.IOCTL.BLKNUM

				jsr CS.RUN.LL.DISKII.VBLK
				bcs .9

				dec BlkNum
				bpl .4

				inc CurHead
				dec HCounter
				bne .3

				dec TCounter
				bne .13

				>LDYA L.MSG.OK
				>LIBC PutS

.9				rts
*--------------------------------------
CS.RUN.LL.DISKII.VBLK
				>SS
				>PUSHW L.MSG.VERIFY
				>PUSHB CurHead
				>PUSHB CurTrack
				>PUSHB BlkNum
				>PUSHW.G DEV.IOCTL+S.IOCTL.BLKNUM
				>PUSHBI 5
				>LIBC PrintF
				>SR

				>SS
				>PUSHBI 0
				>PUSHB hFD
				>PUSHBI IOCTL.READBLOCK
				>PUSHEA.G DEV.IOCTL
				>LIBC IOCTL
				>SR

				rts
*--------------------------------------
CS.RUN.MotorOn	sec
				.HS 90					BCC
CS.RUN.MotorOff	clc

				>SS
				>PUSHB DSSS0000
				ror
				>PUSHA
				>LIBCALL LIBBLKDEV,D2MotorControl
				>SR
				rts
*--------------------------------------
CS.RUN.SeekToY	>SS
				>PUSHB DSSS0000
				>PUSHB CurQTrack
				tya
				sta CurQTrack
				>PUSHA
				>LIBCALL LIBBLKDEV,D2MoveHead
				>SR
				rts
*--------------------------------------
CS.RUN.ZeroPtr1_OLD	lda ZPPtr1+1
				pha

				lda #0
				tay

.1				sta (ZPPtr1),y
				iny
				bne .1

				inc ZPPtr1+1
				dex
				bne .1

				pla
				sta ZPPtr1+1

				rts
*--------------------------------------
CS.RUN.InitCat	lda CatSize
				bne .1

				lda #4
				sta CatSize

.1				lda (pData)				>LDA.G VolName
				bne .8					Volume name ok

				>SS
				>PUSHW pData			>PUSHEA.G VolName
				>PUSHW L.FMT.BLANK
				>PUSHW A2osX.T16
				>PUSHW A2osX.R16
				>PUSHBI 4
				>LIBC SPrintF
				>SR
				rts

.8				clc
				rts
*--------------------------------------
CS.RUN.BuildCat	>SS
				>PUSHW BlkCnt
				>PUSHB CatSize
				>LIBCALL LIBBLKDEV,GetProDOSCatSize
				>SR
				bcs .9

				pha

				lsr
				sta CatBlkCnt

				pla
				>LIBC Malloc			BufferSize
				bcs .9

				>STYA pCatBuf

				>SS
				>PUSHW BlkCnt
				>PUSHB CatSize
				>PUSHB bAltBB
				>PUSHW pData			>PUSHEA.G VolName
				>PUSHW pCatBuf
				>LIBCALL LIBBLKDEV,BuildProDOSCat
				>SR

.9				rts
*--------------------------------------
CS.RUN.WriteCat	>SS
				>PUSHW L.MSG.WRITECAT
				>PUSHBI 0
				>LIBC PrintF
				>SR
				bcs .9

				>STZW.G DEV.IOCTL+S.IOCTL.BLKNUM

				>LDYA pCatBuf
				>STYA.G DEV.IOCTL+S.IOCTL.BUFPTR

.1				>SS
				>PUSHBI 0
				>PUSHB hFD
				>PUSHBI IOCTL.WRITEBLOCK
				>PUSHEA.G DEV.IOCTL
				>LIBC IOCTL
				>SR
				bcs .9

				lda #'.'
				>LIBC PutChar
				bcs .9

				>INC.G DEV.IOCTL+S.IOCTL.BLKNUM

				>LDA.G DEV.IOCTL+S.IOCTL.BUFPTR+1
				inc
				inc
				sta (pData),y

				>SLEEP

				dec CatBlkCnt
				bne .1

				clc
.9				rts
*--------------------------------------
CS.SIG			lda TimeOut
				beq .9

				dec TimeOut

.9				sec

				rts
*--------------------------------------
CS.QUIT			>LDYA pCatBuf
				beq .1

				>LIBC Free

.1				>LDYA pTrackBuf
				beq .2

				>LIBC Free

.2				>LDYA pFD
				beq .3

				>LIBC Free

.3				>LDYA LIBBLKDEV
				beq .8

				>LIBC UnloadLib

.8				clc
				rts
*--------------------------------------
CS.RUN.Wait		sta TimeOut

.1				jsr CS.RUN.CheckCtrlC
				bcs .9

				lda TimeOut
				bne .1

.9				rts
*--------------------------------------
CS.RUN.CheckCtrlC
				phx
				phy

				>SLEEP

				ldy #S.PS.pStdIn
				jsr A2osX.GetPSy
				pha
				iny
				jsr A2osX.GetPSy
				ply
				>LIBC FEOF
				bcs .9

				tay
				bne .9					CC

				>LIBC GetChar
				bcs .9

				cmp #$03				Ctrl-C
				beq .9					CS

				clc

.9				ply
				plx
				rts
*--------------------------------------
CS.RUN.IsDOrL	cmp #'0'
				bcc CS.RUN.IsL

				cmp #'9'+1
				bcc CS.RUN.IsL.RTS

CS.RUN.IsL		cmp #'_'
				clc
				beq CS.RUN.IsL.RTS

				cmp #'.'
				clc
				beq CS.RUN.IsL.RTS

				cmp #'A'
				bcc CS.RUN.IsL.9

				cmp #'Z'+1
				bcc CS.RUN.IsL.RTS

				cmp #'a'
				bcc CS.RUN.IsL.9

				cmp #'z'+1

CS.RUN.IsL.RTS	rts

CS.RUN.IsL.9	sec
				rts
*--------------------------------------
CS.END
*--------------------------------------
LIBBLKDEV		.AZ "libblkdev"
*--------------------------------------
MSG.USAGE1		.CS "Usage : FORMAT <BLOCKDEV> [VOL.NAME]\r\n"
				.CS "   -L : Low-Level Format\r\n"
				.CS "   -V : Verify After LLF\r\n"
				.CS " -B n : Volume size (blocks)\r\n"
				.CZ " -1-9 : Catalog Size (blocks)"
MSG.USAGE2		.CS "   -A : Alternate boot block\r\n"
				.CS "   -D : Dual sided\r\n"
				.CS " -S n : Quarter track stepping\r\n"
				.CZ " -T n : Track count\r\n"
*--------------------------------------
MSG.OK			.CZ "[OK]"
MSG.ERR			.CS "[%h]"
MSG.CRLF		.CZ "\r\n"
MSG.NOSIZE		.CZ "Unable to get media size."
MSG.INIT		.CZ "Formatting %s, Volname:%s\r\n"
MSG.LL			.CZ "Low Level Format %D Blks\r\n"
MSG.LLDISK2		.CZ "\rWriting Head %d/Track %02d (%02d/%02d)..."
MSG.VERIFY		.CZ "\rVerifying Head %d/Track %02d/Block %d (%05D)..."
MSG.WRITECAT	.CZ "Writing Catalog..."
FMT.BLANK		.CZ "BLANK%H%H"
*--------------------------------------
OptionList		.AS "AaBbDdLlSsTtVv"
OptionList.L	.EQ *-OptionList
*--------------------------------------
Disk2.Default	.DA 280					BlkCnt
				.DA #35					TrkCnt
				.DA #4					Stepping
				.DA #$00				VolNum
				.DA #0					bAltBB
				.DA #1					HeadCnt
*--------------------------------------
ID.END			.EQ *
*--------------------------------------
				.DUMMY
				.OR 0
VolName			.BS 16
DEV.IOCTL		.BS S.IOCTL
DEV.DIB			.BS S.DIB
DS.END			.ED
*--------------------------------------
MAN
SAVE usr/src/bin/format.s
ASM
