NEW
PREFIX /A2OSX.BUILD
AUTO 4,1
					.LIST OFF
					.OP	65C02
					.OR $2000
					.TF	/A2OSX.BUILD/BIN/DEV/ASM
*---------------------------------------
					.INB /A2OSX.BUILD/INC/MACROS.I
					.INB /A2OSX.BUILD/INC/A2OSX.I
*---------------------------------------
ZPPtr1				.EQ ZPBIN
ZPPtr2				.EQ ZPBIN+2
ZPPtr3				.EQ ZPBIN+4
ZPLineBuf			.EQ ZPBIN+6
ZPLinePtr			.EQ ZPBIN+8
ZPBlockPtr			.EQ ZPBIN+10
ZPSymbolPtr			.EQ ZPBIN+12
ZPTmpBuf			.EQ ZPBIN+14
ZPAMPtr				.EQ ZPBIN+16
ZPRPtr				.EQ ZPBIN+18
ZPOPtr				.EQ ZPBIN+20
*---------------------------------------
SYM.LEN				.EQ 0
SYM.F				.EQ 1
SYM.F.RESOLVED		.EQ %1000000
SYM.F.RW			.EQ %0100000
SYM.V				.EQ 2
*---------------------------------------
ASM.T.AM			.EQ 0
ASM.T.R				.EQ 2
ASM.T.O				.EQ 4
*---------------------------------------
SRC.DO.MAXDEPTH		.EQ 8
SRC.IN.MAXDEPTH		.EQ 7
*---------------------------------------
ERR.INV.ARGS		.EQ $80
ERR.SRC.INV.TYPE	.EQ $90
ERR.SRC.TOO.MANY.IN	.EQ $91
ERR.SRC.UNEXP.EOF	.EQ $92
ERR.SYNTAX.ERROR	.EQ $A0
ERR.SYM.TOO.LONG	.EQ $A1
ERR.VAL.TOO.BIG		.EQ $A2
ERR.LINE.TOO.LONG	.EQ $A3
ERR.INV.LABEL		.EQ $A4
ERR.INV.DIR			.EQ $A5
ERR.INV.OPCODE		.EQ $A6
ERR.INV.AM.SYN		.EQ $A7
ERR.INV.AM.4.OC		.EQ $A8
ERR.RANGE			.EQ $A9
ERR.UNDEF.SYMBOL	.EQ $AA
ERR.SYMBOL.REDEF	.EQ $AB
ERR.TOO.MANY.DO		.EQ $AC
ERR.MISSING.EXP		.EQ $B0
ERR.EXP.SYN.ERROR	.EQ $B1
ERR.INV.MACRO.DEF	.EQ $E0
*--------------------------------------
*			File Header (16 Bytes)
*--------------------------------------
CS.START			cld
					jmp (.1,x)
					.DA #$61			6502,Level 1 (65c02)
					.DA #1				BIN Layout Version 1
					.DA 0
					.DA CS.END-CS.START		CS
					.DA DS.END-DS.START		DS
					.DA #0					SS
					.DA #24					ZP
					.DA 0
*--------------------------------------
* Relocation Table
*--------------------------------------
.1					.DA CS.INIT
					.DA CS.RUN
					.DA CS.DOEVENT		
					.DA	CS.QUIT
L.MSG.HELP			.DA MSG.HELP
L.MSG.SRCLINE		.DA MSG.SRCLINE
L.MSG.LINECR		.DA MSG.LINECR
L.MSG.ERROR			.DA MSG.ERROR
L.MSG.SYMBOLS		.DA MSG.SYMBOLS
L.MSG.GSYMBOL		.DA MSG.GSYMBOL
L.MSG.SUMMARY		.DA MSG.SUMMARY
L.MSG.PASS			.DA MSG.PASS
L.MSG.SRC.FILE		.DA MSG.SRC.FILE
L.MSG.OBJ.FILE		.DA MSG.OBJ.FILE
L.MSG.T.FILE		.DA MSG.T.FILE
L.SRC.AM.StrBuf		.DA SRC.AM.StrBuf
L.ASM.6502			.DA ASM.6502
L.ASM.T.FILENAME	.DA ASM.T.FILENAME
L.FIO.Stat			.DA FIO.Stat
L.T.DIRECTIVES		.DA T.DIRECTIVES
J.DIRECTIVES		.DA DIR.AC
					.DA DIR.AS
					.DA DIR.AT
					.DA DIR.AZ
					.DA DIR.BS
					.DA DIR.DA
					.DA DIR.DO
					.DA DIR.DU
					.DA DIR.DU
					.DA DIR.ED
					.DA DIR.EL
					.DA DIR.EM
					.DA DIR.EN
					.DA DIR.EP
					.DA DIR.EQ
					.DA DIR.FI
					.DA DIR.HS
					.DA DIR.IN
					.DA DIR.IN
					.DA DIR.IN
					.DA DIR.IN
					.DA DIR.IN
					.DA DIR.IN
					.DA DIR.IN
					.DA DIR.IN
					.DA DIR.IN
					.DA DIR.IN
					.DA DIR.IN
					.DA DIR.LI
					.DA DIR.LI
					.DA DIR.MA
					.DA DIR.OP
					.DA DIR.OR
					.DA DIR.PG
					.DA DIR.PH
					.DA DIR.SE
					.DA DIR.TA
					.DA DIR.TF
					.DA DIR.TI
					.DA DIR.US
L.T.LI				.DA T.LI
J.LI				.DA DIR.LI.CON
					.DA DIR.LI.COFF
					.DA DIR.LI.XON
					.DA DIR.LI.XOFF
					.DA DIR.LI.ON
					.DA DIR.LI.OFF
J.EXP.OP			.DA EXP.OP.EOR ^!|&<=>+-*/
					.DA EXP.OP.ORA
					.DA EXP.OP.ORA
					.DA EXP.OP.AND
					.DA EXP.OP.LOW
					.DA EXP.OP.EQU
					.DA EXP.OP.GRT
					.DA EXP.OP.ADD
					.DA EXP.OP.SUB
					.DA EXP.OP.MUL
					.DA EXP.OP.DIV	
					.DA 0
*---------------------------------------
CS.INIT				ldy #S.PS.ARGC
					lda (pPs),y
					beq .99
					
					lda #1
					>SYSCALL GetArg.A
					>SYSCALL RealPath.YA
					
					txa
					ldy #SRC.hFILENAME
					sta (pData),y
					
					jsr FIO.Init
					bcs .9

					jsr SYM.Init
					bcs .9

					jsr DIR.Init
					
					>LDYAI 256
					>SYSCALL GetMem.YA
					bcs .9
					>STYA ZPLineBuf
					txa
					>STA.G SRC.hLineBuf

					>LDYAI 256
					>SYSCALL GetMem.YA
					bcs .9
					>STYA ZPTmpBuf
					txa
					>STA.G SRC.hTmpBuf
					
*					lda (pPs)
*					ora #S.PS.F.EVENT
*					sta (pPs)
					clc
					rts
					
.99					>LDYA L.MSG.HELP
					>SYSCALL PrintF.YA
					lda #ERR.INV.ARGS
					sec
.9					rts
*--------------------------------------
CS.RUN				>SYSCALL GetChar
					bcs .11				no char
				
					cmp #$03			Ctrl-C
					beq .99				Abort....
				
					cmp #$13			Ctrl-S
					bne .11

					ldy #bPause
					lda (pData),y
					eor	#$ff
					sta (pData),y
					bne .8
				
.11					ldy #SRC.COUNT		root file is already opened?
					lda (pData),y
					bne .10 
					
					>LDA.G ASM.PASS
					inc
					>PUSHA
					>LDYA L.MSG.PASS
					>SYSCALL PrintF.YA
					
					ldy #SRC.hFILENAME
					lda (pData),y
					
					>SYSCALL GetMemPtr.A
					
					jsr FIO.OpenFile
					bcs .99
					
.10					jsr FIO.ReadLine
					bcc .2
					cmp #$4C			End Of File?
					bne .9
					
					jsr FIO.FileClose
					
					ldy #SRC.COUNT		end of root file ?
					lda (pData),y
					bne .8				no continue back to previous file
					
					>LDA.G ASM.PASS		End of pass #2 ??
					bne .1
					inc
					sta (pData),y
					jsr DIR.Init		Reset 
					clc
					rts
					
.1					jsr SYM.Dump

					>LDYA L.MSG.SUMMARY
					>SYSCALL PrintF.YA
					
					lda #0				End of assembly, exit with no error
.99					sec		
					rts
					
.2					jsr SRC.PrintLine

					jsr SRC.ParseLine
					bcs .9
					
.8					clc
					rts

.9					pha
					jsr SRC.PrintLineErr
	
					>DEBUG
					jsr SYM.Dump
					pla
					pha
					>PUSHA
					>PUSHW SRC.LINENUM
					>LDYA L.MSG.ERROR
					>SYSCALL PrintF.YA
					pla
					sec
					rts
*--------------------------------------
CS.DOEVENT			sec
					rts
*--------------------------------------
CS.QUIT				jsr FIO.FileClose
					bne CS.QUIT 

					jsr SYM.Quit
					
					>LDA.G ASM.T.hMem
					beq .1
					
					>SYSCALL FreeMem.A
					
.1					>LDA.G SRC.hFILENAME
					beq .2
					
					>SYSCALL FreeMem.A
					
.2					>LDA.G SRC.hLineBuf
					beq .3
					
					>SYSCALL FreeMem.A
					
.3					>LDA.G SRC.hTmpBuf
					beq .8
					
					>SYSCALL FreeMem.A
					
.8					clc
					rts
*---------------------------------------
					.INB /A2OSX.BUILD/BIN/DEV/ASM.S.DIR
					.INB /A2OSX.BUILD/BIN/DEV/ASM.S.EXP
					.INB /A2OSX.BUILD/BIN/DEV/ASM.S.FIO
					.INB /A2OSX.BUILD/BIN/DEV/ASM.S.SRC
					.INB /A2OSX.BUILD/BIN/DEV/ASM.S.SYM
*---------------------------------------
CS.END
T.DIRECTIVES		>PSTR "AC"
					>PSTR "AS"
					>PSTR "AT"
					>PSTR "AZ"
					>PSTR "BS"
					>PSTR "DA"
					>PSTR "DO"
					>PSTR "DU"
					>PSTR "DUMMY"
					>PSTR "ED"
					>PSTR "ELSE"
					>PSTR "EM"
					>PSTR "EN"
					>PSTR "EP"
					>PSTR "EQ"
					>PSTR "FIN"
					>PSTR "HS"
					>PSTR "IN"
					>PSTR "INB"
					>PSTR "INB1"
					>PSTR "INB2"
					>PSTR "INB3"
					>PSTR "INB4"
					>PSTR "INB5"
					>PSTR "INB6"
					>PSTR "INB7"
					>PSTR "INB8"
					>PSTR "INB9"
					>PSTR "LI"
					>PSTR "LIST"
					>PSTR "MA"
					>PSTR "OP"
					>PSTR "OR"
					>PSTR "PG"
					>PSTR "PH"
					>PSTR "SE"
					>PSTR "TA"
					>PSTR "TF"
					>PSTR "TI"
					>PSTR "US"
					.HS 00
*---------------------------------------
T.LI				>PSTR "CON"
					>PSTR "COFF"
					>PSTR "XON"
					>PSTR "XOFF"
					>PSTR "ON"
					>PSTR "OFF"
					.HS 00
*---------------------------------------
MSG.HELP			>CSTR "A2osX-Macro Assembler (S-C MASM 3.0 Based)\r\nUsage : ASM <src file> [type TXT ($04) or S-C/BAS ($FA)]\r\n"
MSG.PASS			>CSTR "Pass:#%d\r\n"
MSG.SRC.FILE		>CSTR "Reading SRC File:%s\r\n"
MSG.OBJ.FILE		>CSTR "Writing OBJ File:%s, Type=%02x\r\n"
MSG.T.FILE			>CSTR "Loading CPU File:%s\r\n"
MSG.SRCLINE			>CSTR "%H-        %05D %s\r\n"
MSG.LINECR			>CSTR "%s\r\n"
MSG.ERROR			>CSTR "%05D-Error:$%h\r\n"
MSG.SYMBOLS			>CSTR "Symbol Table:\r\n"
MSG.GSYMBOL			>CSTR "$%h%h%h%h:%S\r\n"
MSG.SUMMARY			>CSTR "\r\nEnd Of Assembly.\r\n"
SRC.AM.RESERVED		>PSTR "[](),"
SRC.MOD.RESERVED	>PSTR "#/<>"
SRC.EXP.RESERVED	>PSTR "^!|&<=>+-*/"
ASM.6502			>CSTR "6502"
*---------------------------------------
ASM.T.FILENAME		.BS 65

FIO.Stat			.BS S.STAT

EXP.Operator		.BS	1
EXP.Modifier		.BS 1

SRC.LINENUM			.BS 2
SRC.LinePtrSave		.BS 2
SRC.Keyword.ID		.BS 1
SRC.ACC				.BS 4
SRC.ACCTMP			.BS 4
SRC.ARG				.BS 4
SRC.AM.ID			.BS 1
SRC.AM.StrBuf		.BS 32
SRC.AM.tmpBuf		.BS 32
*--------------------------------------
					.DUMMY
					.OR 0
DS.START				
bPause				.BS 1

SRC.hFILENAME		.BS 1
SRC.hLineBuf		.BS 1
SRC.hTmpBuf			.BS 1

SRC.COUNT			.BS 1
SRC.hFILES			.BS SRC.IN.MAXDEPTH
SRC.hFILETYPES		.BS SRC.IN.MAXDEPTH

DST.hFILENAME		.BS 1
DST.hREFNUM			.BS 1
DST.hBUFFER			.BS 1
DST.hFILETYPE		.BS 1

ASM.T.hMem			.BS 1

DIR.Counter			.BS 2
DIR.Byte			.BS 1

ASM.PASS			.BS 1
ASM.MACRO.ON		.BS 1
ASM.DO.Count		.BS 1
ASM.DOELSE.Flag		.BS SRC.DO.MAXDEPTH
ASM.DO.ON			.BS 1
ASM.PH.ON			.BS 1
ASM.LI.ON			.BS 1
ASM.LI.CON			.BS 1
ASM.LI.XON			.BS 1
ASM.PC				.BS 4
ASM.PC.PH			.BS 4
ASM.PC.GLABEL		.BS 4
ASM.LOCAL.OFFSET	.BS 1
ASM.LOCAL.INVALID	.BS 1

SYM.hGlobals		.BS 1
SYM.bGlobal			.BS 1
SYM.Global			.BS 6
SYM.Lookup			.BS 6
SYM.ID				.BS 2
DS.END				.ED
*---------------------------------------
					.DO DS.END-DS.START>$FF
					ERROR:DS too big
					.FIN
*---------------------------------------
MAN
SAVE /A2OSX.BUILD/BIN/DEV/ASM.S
ASM
