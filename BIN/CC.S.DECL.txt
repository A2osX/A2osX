NEW
  AUTO 3,1
*--------------------------------------
DECL.AUTO
DECL.REGISTER
DECL.STATIC
DECL.EXTERN
.98				lda #E.CSYN
				sec
.99				rts
*--------------------------------------
DECL.TYPEDEF	jsr CORE.GetNCharNB
				bcs .98
 
				jsr DECL.GetType
				bcs .99

				jsr CC.GetCharNB
				bcs .98

				cmp #';'
				beq .80					Anonymous typedef...useless

				jsr CC.IsLetter
				bcs .98

				jsr TYPE.New
				bcs .99
				
				jsr CC.GetCharNB
				bcs .98
				
.1				cmp #'['
				bne .8
				
				ldy #SYM.Q
				lda (ZP.pTypeBuf),y
				and #SYM.Q.AAARRAY
				cmp #SYM.Q.AAARRAY
				beq .98					already [][][] ?
				
				lda (ZP.pTypeBuf),y
				clc
				adc #SYM.Q.ARRAY
				sta (ZP.pTypeBuf),y 

				jsr CORE.GetNCharNB	Skip [
				bcs .98

				cmp #']'
				bne .2

				ldy #SYM.Q
				lda (ZP.pTypeBuf),y
				and #SYM.Q.PPPOINTER
				beq .98					[] only allowed for *
				
				bra .4

.2				jsr EXP.IntConst
				bcs .98

				jsr SYM.IncCnt
				

				jsr CC.GetCharNB
				bcs .98

				cmp #']'
				bne .98

.3				jsr CORE.GetNCharNB	Skip ]
				bra .1
				
.4				jsr CORE.GetNCharNB	Skip ]

.5 				cmp #';'
				bne .98

.8				jsr TYPE.Store

				rts

.80				clc
				rts

.98				lda #E.CSYN
				sec
.99				rts
*--------------------------------------
DECL.GetType	jsr TYPE.Lookup			Search in typedefs
				bcs .1
	
				jmp TYPE.SetQ
	
.1				>LDYA L.CC.TYPEQUAL		Search in default types
				jsr CC.LookupID
				bcs .9
				
				jsr TYPE.Reset

				jmp (J.CC.TYPEQUAL,x)
				
.9				rts				
*--------------------------------------				
DECL.AddSym		lda (ZP.pTypeBuf)

				pha

				ldy #1					Q
				lda (ZP.pTypeBuf),y				
				
				ply
				sec

				cpy #SYM.T.SU
				bne .7

				tax						save Q
				jsr CC.GetCharNB
				bcs .98

				cmp #';'				from a tag def
				beq .8

				jsr CC.IsLetter
				bcs .98

.1				clc						reuse buffer
				ldy #SYM.T.SU
				txa						restore Q
				jsr DECL.NewSym
				bcs .99

				jsr CC.GetCharNB
				bcs .98

				cmp #','
				bne .2

				jsr CORE.GetNCharNBNL
				bcc .1

				bcs .98

.2				cmp #';'				TODO: struct initalizers
				bne .98

.8				clc
				rts

.98				lda #E.CSYN
				sec
.99				rts

.7				sec						Reset SYM Buffer
*--------------------------------------
DECL.NewSym		ldx ScopePtr			#SYM.SC.STATIC
				beq .22

				ldx #SYM.SC.AUTO

.22				jsr SYM.NewX
				bcs .99					OOM or DUP

				ldy #SYM.Q
				lda (ZP.pLSymBuf),y
				bit #SYM.Q.FUNCTION
				bne .8

				jsr SYM.Store
				bcs .99

				jsr CC.GetCharNB
				bcs .98

				cmp #';'				no initializer...store SYM
				beq .28

				cmp #'='				type var = value ?
				bne .98

				jsr CORE.GetNCharNB	skip '='
				bcs .98

				>LDYA ZP.pLSymBuf		target
				jsr EXP.Eval
				bcs .99

				jsr SYM.GetAddr1
				bcs .99
			
				jsr SYM.PopValue		Set value to this var
				bcs .99

.28				jsr CC.GetCharNB
				cmp #';'
				bne .98

.8				clc
				rts

.98				lda #E.CSYN
				sec
.99				rts
*--------------------------------------
MAN
SAVE usr/src/bin/cc.s.decl
LOAD usr/src/bin/cc.s
ASM
