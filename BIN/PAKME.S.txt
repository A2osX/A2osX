NEW
  AUTO 3,1
				.LIST OFF
				.OP	65C02
				.OR	$2000
				.TF bin/pakme
*--------------------------------------
				.INB inc/macros.i
				.INB inc/a2osx.i
				.INB inc/pak.i
				.INB inc/mli.e.i
*--------------------------------------
CHUNK.MAX		.EQ 32
*--------------------------------------
				.DUMMY
				.OR ZPBIN
ZS.START
ZPPtr1			.BS 2
ZPPtr2			.BS 2
ZPSrcFileSize	.BS 2
ZPDstTableOfs	.BS 2

ZPChunkOfs		.BS 2
ZPChunkLen		.BS 2
ZPChunkPakedLen	.BS 2
ZPChunkNewOfs	.BS 2

ZPChunkIndex	.BS 1
ZPChunkCnt		.BS 1

ZPCopyBuf		.BS 2

ZPSrcBufPtr		.BS 2
ZPDstBufPtr		.BS 2
ZPSrcBLPtr		.BS 2
ZPCount			.BS 2
ZPBLCnt			.BS 2

bPause			.BS 1

ZS.END			.ED
*--------------------------------------
*			File Header (16 Bytes)
*--------------------------------------
CS.START		cld
				jmp (.1,x)
				.DA #$61				6502,Level 1 (65c02)
				.DA #2					BIN Layout Version 2
				.DA #0
				.DA #0
				.DA CS.END
				.DA ID.END
				.DA DS.END
				.DA #64					Stack Size
				.DA #ZS.END-ZS.START	Zero Page Size
*--------------------------------------
* Relocation Table
*--------------------------------------
.1				.DA CS.INIT
				.DA CS.RUN
				.DA CS.SIG
				.DA	CS.QUIT
L.MSG.USAGE		.DA MSG.USAGE
L.MSG.SRCFILE	.DA MSG.SRCFILE
L.MSG.CHUNK		.DA MSG.CHUNK
L.MSG.PAKED		.DA MSG.PAKED
L.MSG.STORE		.DA MSG.STORE
L.MSG.E.IARC	.DA MSG.E.IARC
L.TAG			.DA TAG
				.DA 0
*--------------------------------------
CS.INIT			clc
				rts
*--------------------------------------
CS.RUN			ldy #S.PS.ARGC
				jsr A2osX.GetPSy
				cmp #2
				bne .9

				jsr CS.RUN.CheckSrcFile
				bcs .99

				lda #2
				>KAPI ArgV
				>SS
				>PUSHYA
				>PUSHBI	O.CREATE+O.WRONLY
				>PUSHB.G STATBUF+S.STAT.P.TYPE
				>PUSHW.G STATBUF+S.STAT.P.AUXTYPE
				>LIBC FOpen
				>SR
				bcs .99

				>STYA.G pDstFile

				jsr CS.RUN.START
				bcs .99
				
				jsr CS.RUN.WriteTable	Write Fake table
				bcs .99

				jsr CS.RUN.LOOP
				bcs .99
				
.8				jsr CS.RUN.RewriteTable	Write modified Table
				bcs .99

				lda #0

				sec

				rts				

.9				>LDYA L.MSG.USAGE
				>LIBC PutS
				lda #E.SYN
				sec
.99				rts
*--------------------------------------
CS.RUN.START	>SS
				>PUSHW L.MSG.SRCFILE
				lda #1
				>KAPI ArgV
				>PUSHYA
				>PUSHW ZPSrcFileSize
				>PUSHW.G PAKME.HEADER+5
				>PUSHB.G PAKME.HEADER+7
				>PUSHW ZPDstTableOfs
				>PUSHBI 9
				>LIBC PrintF
				>SR

				>LDYA ZPDstTableOfs
				>LIBC Malloc
				bcs .9
				
				>STYA ZPCopyBuf

				>SS
				>PUSHW.G pSrcFile
				>PUSHLZ
				>PUSHWI SEEK.SET
				>LIBC FSeek
				>SR
				bcs CS.RUN.RTS

				>SS
				>PUSHW.G pSrcFile
				>PUSHW ZPCopyBuf
				>PUSHW ZPDstTableOfs
				>LIBC FRead
				>SR
.9				bcs CS.RUN.RTS

				>SS
				>PUSHW.G pDstFile
				>PUSHW ZPCopyBuf
				>PUSHW ZPDstTableOfs
				>LIBC FWrite
				>SR
				bcs CS.RUN.RTS

				>LDYA ZPCopyBuf
				>LIBC Free
				
				stz ZPCopyBuf+1

CS.RUN.RTS		rts
*--------------------------------------
CS.RUN.LOOP		>SLEEP
	
				jsr X.CheckCtrl
				bcs CS.RUN.RTS

				bvs CS.RUN.LOOP			Pause...

				jsr CS.RUN.GetChunk
				bcs CS.RUN.RTS

				>SS
				>PUSHW L.MSG.CHUNK
				lda ZPChunkIndex
				inc
				>PUSHA
				>PUSHW ZPChunkOfs
				>PUSHW ZPChunkLen
				>PUSHBI 5
				>LIBC PrintF
				>SR
				bcs .9

				jsr CS.RUN.Pak
				bcs .2

				jsr CS.RUN.WritePak
				bcc .7

				rts

.2				jsr CS.RUN.WriteStore
				bcs .9

.7				jsr CS.QUIT.BUF

				jsr CS.RUN.UpdateTable

				inc ZPChunkIndex
				dec ZPChunkCnt
				bne CS.RUN.LOOP

				clc
.9				rts
*--------------------------------------
CS.RUN.CheckSrcFile
				lda #1
				>KAPI ArgV

				>SS
				>PUSHYA
				>PUSHBI	O.RDONLY
				>PUSHBI 0				Type
				>PUSHWZ					Aux type
				>LIBC FOpen
				>SR
				bcs .99

				>STYA.G pSrcFile

				>SS
				lda #1
				>KAPI ArgV
				>PUSHYA
				>PUSHEA.G STATBUF
				>LIBC Stat
				>SR

.99				bcs .9

				>LDA.G STATBUF+S.STAT.SIZE+3
				dey
				ora (pData),y
				bne .90

				dey
				lda (pData),y
				sta ZPSrcFileSize+1
				dey
				lda (pData),y
				sta ZPSrcFileSize

				jsr CS.RUN.CheckTAG
				bcs .9

				jsr CS.RUN.GetTable
				bcs .9


				clc
				rts

.90				lda #MLI.E.INCFF
				sec
.9
CS.RUN.CheckSrcFile.RTS
				rts
*--------------------------------------
CS.RUN.CheckTAG	>SS
				>PUSHW.G pSrcFile
				>PUSHWZ
				lda ZPSrcFileSize
				sec
				sbc #10
				tay
				lda ZPSrcFileSize+1
				sbc #0
				>PUSHYA
				>PUSHWI SEEK.SET
				>LIBC FSeek
				>SR

				bcs CS.RUN.CheckSrcFile.RTS

				>SS
				>PUSHW.G pSrcFile
				>PUSHEA.G PAKME.HEADER
				>PUSHWI 10
				>LIBC FRead
				>SR
				bcs .9

				ldx #4

				ldy #PAKME.HEADER+4

.1				lda TAG,x
				cmp (pData),y
				bne .90
				dey
				dex
				bpl .1

				clc
				rts

.90				lda #MLI.E.INCFF
				sec
.9				rts
*--------------------------------------
CS.RUN.GetTable	>LDA.G PAKME.HEADER+8
				sec
				>SBC.G PAKME.HEADER+5
				sta ZPDstTableOfs

				>LDA.G PAKME.HEADER+9
				>SBC.G PAKME.HEADER+6
				sta ZPDstTableOfs+1

				>SS
				>PUSHW.G pSrcFile
				>PUSHWZ
				>PUSHW ZPDstTableOfs
				>PUSHWI SEEK.SET
				>LIBC FSeek
				>SR

				bcs .9

				>SS
				>PUSHW.G pSrcFile
				>PUSHEA.G PAKME.TABLE
				>LDA.G PAKME.HEADER+7
				sta ZPChunkCnt

				asl
				tay
				lda #0
				>PUSHYA

				>LIBC FRead
				>SR

.9				rts
*--------------------------------------
CS.RUN.GetChunk	lda ZPChunkIndex

				asl
				clc
				adc #PAKME.TABLE+1
				tay
				lda (pData),y
				pha
				dey
				lda (pData),y
				sec
				ldy #PAKME.HEADER+5
				sbc (pData),y
				sta ZPChunkOfs

				iny
				pla
				sbc (pData),y
				sta ZPChunkOfs+1

				>SS
				>PUSHW.G pSrcFile
				>PUSHWZ
				>PUSHW ZPChunkOfs
				>PUSHWI SEEK.SET
				>LIBC FSeek
				>SR

				bcs .91

				>SS
				>PUSHW.G pSrcFile
				>PUSHEA.G CHUNK.HEADER
				>PUSHWI 3
				>LIBC FRead
				>SR
				bcs .9

				>LDA.G CHUNK.HEADER
				bne .90

				>LDA.G CHUNK.HEADER+1
				sta ZPChunkLen
				pha
				iny
				lda (pData),y
				sta ZPChunkLen+1
				ply

				>LIBC Malloc
.91				bcs .9

				>STYA X.Pak.SrcPtr

				>SS
				>PUSHW.G pSrcFile
				>PUSHW X.Pak.SrcPtr
				>PUSHW ZPChunkLen
				>LIBC FRead
				>SR
				bcs .9

*				clc
				rts

.90				lda #MLI.E.INCFF
				sec

.9				rts
*--------------------------------------
CS.RUN.Pak		>LDYA ZPChunkLen
				>LIBC Malloc
				bcs .9

				>STYA X.Pak.DstPtr
				
				>LDYA ZPChunkLen
				jsr X.Pak
				bcs .9

				>STYA ZPChunkPakedLen

.9				rts
*--------------------------------------
CS.RUN.RewriteTable
				>SS
				>PUSHW.G pDstFile
				>PUSHWZ
				>PUSHW ZPDstTableOfs
				>PUSHWI SEEK.SET
				>LIBC FSeek
				>SR
				bcs CS.RUN.WriteTable.RTS
*--------------------------------------
CS.RUN.WriteTable
				>SS
				>PUSHW.G pDstFile
				>PUSHEA.G PAKME.TABLE
				>LDA.G PAKME.HEADER+7
				asl
				tay
				lda #0
				>PUSHYA
				>LIBC FWrite
				>SR

CS.RUN.WriteTable.RTS
				rts
*--------------------------------------
CS.RUN.WritePak	>SL
				>LDYA.G pDstFile
				>LIBC FTell
				bcs .9

				lda (pStack)
				inc pStack
				sta ZPChunkNewOfs
				lda (pStack)
				inc pStack
				sta ZPChunkNewOfs+1
				inc pStack
				inc pStack

				>SS
				>PUSHW.G pDstFile
				>PUSHW X.Pak.DstPtr
				>PUSHW ZPChunkPakedLen
				>LIBC FWrite
				>SR
				bcs .9

				>SS
				>PUSHW L.MSG.PAKED
				>PUSHW ZPChunkPakedLen
				>PUSHW ZPChunkNewOfs
				>PUSHBI 4
				>LIBC PrintF
				>SR
.9
CS.RUN.WritePak.RTS
				rts
*--------------------------------------
CS.RUN.WriteStore
				>SL
				>LDYA.G pDstFile
				>LIBC FTell
				bcs CS.RUN.WritePak.RTS

				lda (pStack)
				inc pStack
				sta ZPChunkNewOfs
				lda (pStack)
				inc pStack
				sta ZPChunkNewOfs+1
				inc pStack
				inc pStack

				>SS
				>PUSHW.G pDstFile
				>PUSHEA.G CHUNK.HEADER
				>PUSHWI 3
				>LIBC FWrite
				>SR
				bcs .9

				>SS
				>PUSHW.G pDstFile
				>PUSHW X.Pak.SrcPtr
				>PUSHW ZPChunkLen
				>LIBC FWrite
				>SR
				bcs .9

				>SS
				>PUSHW L.MSG.STORE
				>PUSHW ZPChunkLen
				>PUSHW ZPChunkNewOfs
				>PUSHBI 4
				>LIBC PrintF
				>SR

.9				rts
*--------------------------------------
CS.RUN.UpdateTable
				ldy #PAKME.HEADER+6
				lda (pData),y
				pha

				dey
				lda (pData),y
				pha

				lda ZPChunkIndex

				asl
				clc
				adc #PAKME.TABLE
				tay

				pla
				clc
				adc ZPChunkNewOfs
				sta (pData),y

				iny

				pla
				adc ZPChunkNewOfs+1
				sta (pData),y
				rts
*--------------------------------------
CS.SIG			sec
				rts
*--------------------------------------
CS.QUIT			>LDYA.G pDstFile
				cmp #0
				beq .2

				>LIBC FClose

.2				>LDYA.G pSrcFile
				cmp #0
				beq .3

				>LIBC FClose

.3				>LDYA ZPCopyBuf
				beq CS.QUIT.BUF

				>LIBC Free
*--------------------------------------
CS.QUIT.BUF		>LDYA X.Pak.DstPtr
				beq .1

				>LIBC Free

				stz X.Pak.DstPtr+1

.1				>LDYA X.Pak.SrcPtr
				beq .8

				>LIBC Free

				stz X.Pak.SrcPtr+1

.8				clc
				rts
*--------------------------------------
				.INB usr/src/shared/x.checkctrl.s
				.INB usr/src/shared/x.pak.s
*--------------------------------------
MSG.USAGE		.CZ "Usage : PAKME SourceBIN PackedBIN\r\n"
MSG.SRCFILE		.CZ "Source File : %s, Size=%5D, Org=$%H, %d Chunks at $%H.\r\n"
MSG.CHUNK		.CZ "  Chunk #%02d : Ofs=$%H, Len=%5D ... "
MSG.PAKED		.CZ "PAKed : %5D Bytes, New Ofs=$%H\r\n"
MSG.STORE		.CZ "Store : %5D Bytes, New Ofs=$%H\r\n"
MSG.E.IARC		.CZ "Invalid/corrupt archive"
TAG				.CZ "PAKME"
*--------------------------------------
ID.END			.EQ *
*--------------------------------------
				.DUMMY
				.OR 0
STATBUF			.BS S.STAT
PAKME.HEADER	.BS 10
PAKME.TABLE		.BS CHUNK.MAX*2
CHUNK.HEADER	.BS 3

pSrcFile		.BS 2
pDstFile		.BS 2

DS.END			.ED
*--------------------------------------
MAN
SAVE usr/src/bin/pakme.s
ASM
