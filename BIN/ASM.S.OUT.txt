NEW
  AUTO 3,1
*---------------------------------------
OUT.Init		lda #PAGE.LEN
				>STA.G OUT.LineCnt
				clc
				rts
*---------------------------------------
OUT.EmitByte	phy
				phx
				>STA.G OUT.Byte

				>LDA.G OUT.BufCnt
				cmp #4
				bne .4

				jsr OUT.PrintBuf
				bcs .9
				
.4				>LDA.G ASM.PASS
				beq .1

				>LDA.G ASM.DU.ON
				bmi .1

				>SS
				>PUSHB 0
				>PUSHB.G OUT.Byte
				>PUSHW.G DST.pFILE
				>LIBC FPutC
				>SR
				bcs .9

.1				ldy #ASM.PC
				jsr CORE.IncDWordY

				>LDA.G ASM.PH.ON
				beq .3

				>LDA.G ASM.DU.ON
				bmi .3
				
				ldy #ASM.PC.PH
				jsr CORE.IncDWordY

.3				>LDA.G OUT.Byte
				tax

				>LDA.G OUT.BufCnt
				inc
				sta (pData),y
				clc
				adc #OUT.Buf-1
				tay
				txa
				sta (pData),y

.8				clc

.9				plx
				ply
				rts
*---------------------------------------
OUT.PrintBuf	jsr OUT.PrintLineOn
				bcs OUT.PrintBufReset

				>LDA.G ASM.LI.XON
				bpl OUT.PrintBufReset

				jsr OUT.PrintLineOutBuf
				bcs OUT.PrintBuf.RTS

				jsr OUT.PrintCR
				bcs OUT.PrintBuf.RTS

OUT.PrintBufReset
				>STZ.G OUT.BufCnt
				>STZ.G OUT.bEquate
				
				ldx #4
				ldy #ASM.PC

.2				lda (pData),y
				pha
				iny
				dex
				bne .2

				ldx #4
				ldy #OUT.PC+3

.3				pla
				sta (pData),y
				dey
				dex
				bne .3

OUT.PrintBuf.CLCRTS
				clc

OUT.PrintBuf.RTS
				rts
*---------------------------------------
OUT.PrintLine	jsr OUT.PrintLineOn
				bcs OUT.PrintBuf.CLCRTS

OUT.PrintLine.1	jsr OUT.PrintLineOutBuf
				bcs OUT.PrintBuf.RTS

				>LDA.G SRC.Depth

.1				dec
				beq .2

				pha
				lda #'>'
				>LIBC PutChar
				pla
				bra .1

.2				>SS
				>PUSHW L.MSG.LINENUM
				>PUSHW.G SRC.LINENUM
				>PUSHBI 2
				>LIBC PrintF
				>SR

				>LDA.G MAC.StkPtr
				lsr
				lsr
				lsr

.3				dec
				bmi .4

				pha
				lda #'>'
				>LIBC PutChar
				pla
				bra .3

.4				>LDYA ZPLineBuf
				>LIBC PutS

				jmp OUT.PrintCR1
*---------------------------------------
OUT.PrintLineOutBuf
				>LDA.G OUT.bEquate
				bne OUT.PrintLineEQU

				>SS
				>LDA.G OUT.BufCnt
				asl
				tax
				>PUSHB L.MSG.OUT0+1,x
				>PUSHB L.MSG.OUT0,x

				ldy #OUT.PC+1
				>PUSHB (pData),y
				dey
				>PUSHB (pData),y

				>LDA.G OUT.BufCnt
				beq .2
				
				pha
				tax

				lda #0
				sta (pData),y

				ldy #OUT.Buf

.1				>PUSHB (pData),y
				iny
				dex
				bne .1

				pla

.2				inc
				inc
				>PUSHA					Byte Count+2 for PC
				>LIBC PrintF
				>SR

				rts
*---------------------------------------
OUT.PrintLineEQU
				>SS

				lda SRC.ACC.SIZE
				asl
				tax
				>PUSHB L.MSG.EQU0+1,x
				>PUSHB L.MSG.EQU0,x

				lda SRC.ACC.SIZE
				beq .2

				tay

.1				dey
				>PUSHB SRC.ACC,y
				tya
				bne .1

				lda SRC.ACC.SIZE

.2				>PUSHA					Byte Count
				>LIBC PrintF

				>SR
				rts
*---------------------------------------
OUT.PrintLineOn
				>LDA.G bListAll
				bmi .8

				>LDA.G ASM.LI.ON
				bpl .9

				>LDA.G MAC.bLearning	MACRO Mode ?
				bmi .1

				lda ZPMacroCtxID		within MACRO ?
				beq .11

.1				>LDA.G ASM.LI.MON
				bpl .9

				clc
				rts

.11				>LDA.G ASM.DO.StackPtr	within a DO/ELSE ?
				beq .2

				clc
				adc #ASM.DO.Stack-1
				tay
				lda (pData),y			TRUE ?
				bne .8					yes, print always

				>LDA.G ASM.LI.CON		FALSE, check CON flag...
				bpl .9

				clc
				rts

.2

.8				clc
				rts

.9				sec
OUT.PrintLineOnRTS
				rts
*---------------------------------------
OUT.PrintLineErr
				sta DIR.Byte			Save Error code

				jsr OUT.PrintLine.1
				bcs OUT.PrintLineOnRTS

				>SS
				>PUSHW L.MSG.ERROR
				>PUSHB DIR.Byte
				>PUSHBI 1
				>LIBC PrintF
				>SR

				lda ZPLinePtr
				sec
				sbc ZPLineBuf
				jsr OUT.PrintLineErrDashA

				>LDA.G SRC.Depth
				dec
				jsr OUT.PrintLineErrDashA

				lda ZPMacroCtxID
				jsr OUT.PrintLineErrDashA

				lda #'^'
				>LIBC PutChar
				bcs OUT.PrintLineOnRTS

				jsr OUT.PrintCR

				jsr OUT.PrintPass

				jsr OUT.PrintCR

				jmp OUT.PrintCR
*---------------------------------------
OUT.PrintLineErrDashA
				tax
				beq .8

.1				phx
				lda #'-'
				>LIBC PutChar
				plx
				bcs .9

				dex
				bne .1

.8				clc
.9				rts
*---------------------------------------
OUT.PrintStats	jsr OUT.PrintCR

				>SS
				>PUSHW L.MSG.STATS
				>PUSHL.G ASM.TotalLines
				>PUSHL.G ASM.CodeLines
				>PUSHBI 8
				>LIBC PrintF
				>SR
				bcc OUT.PrintCR1

				rts
*---------------------------------------
OUT.PrintPass	>SS
				>PUSHW L.MSG.PASS
				>LDA.G ASM.PASS
				inc
				>PUSHA
				>PUSHBI 1
				>LIBC PrintF
				>SR
				bcc OUT.PrintCR1

				rts
*---------------------------------------
OUT.PrintWarn1	jsr OUT.PrintLine.1
				bcs .9

				>LDYA L.MSG.WARN1
				>LIBC PutS
				bcc OUT.PrintCR1

.9				rts
*---------------------------------------
OUT.PrintCR		>SS
				>PUSHW L.MSG.CRLF
				>PUSHBI 0
				>LIBC PrintF
				>SR

OUT.PrintCR1	>DEC.G OUT.LineCnt
				bne .8

				lda #PAGE.LEN
				sta (pData),y

.8
*				clc
OUT.Print.RTS	rts
*---------------------------------------
MAN
SAVE usr/src/bin/asm.s.out
LOAD usr/src/bin/asm.s
ASM
