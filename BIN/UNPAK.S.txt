NEW
  AUTO 3,1
				.LIST OFF
				.OP 65C02
				.OR $2000
				.TF bin/unpak
*--------------------------------------
				.INB inc/macros.i
				.INB inc/a2osx.i
				.INB inc/mli.e.i
				.INB inc/pak.i
*--------------------------------------
				.DUMMY
				.OR ZPBIN
ZS.START
ZPPtr1			.BS 2
ZPPtr2			.BS 2

ZPInBufPtr		.BS 2
ZPOutBufPtr		.BS 2

ZPnCnt			.BS 2
ZPInMask		.BS 1
ZPBLOfsLBits	.BS 1
ZPBLOfsHBits	.BS 1
ZPBLLenBits		.BS 1

ZPInBufLen		.BS 2
ZPOutBufLen		.BS 2

ZPFullPathPtr	.BS 2
ZPRelPathPtr	.BS 2

Index			.BS 1
bList			.BS 1
bSpinner		.BS 1

ZPSpinState		.BS 1

ZS.END			.ED
*--------------------------------------
* File Header (16 Bytes)
*--------------------------------------
CS.START		cld
				jmp (.1,x)
				.DA #$61				6502,Level 1 (65c02)
				.DA #2					BIN Layout Version 2
				.DA #0					S.PS.F.EVENT
				.DA #0
				.DA CS.END
				.DA ID.END
				.DA DS.END
				.DA #64					Stack Size
				.DA #ZS.END-ZS.START	Zero Page Size
*--------------------------------------
* Relocation Table
*--------------------------------------
.1				.DA CS.INIT
				.DA CS.RUN
				.DA CS.SIG
				.DA CS.QUIT
L.MSG.USAGE		.DA MSG.USAGE
L.MSG.DIR		.DA MSG.DIR
L.MSG.FILE		.DA MSG.FILE
L.MSG.OK		.DA MSG.OK
L.MSG.E.IARC	.DA MSG.E.IARC
				.DA 0
*--------------------------------------
CS.INIT         clc
CS.INIT.RTS     rts
*--------------------------------------
CS.RUN			inc Index
				lda Index
				>KAPI ArgV
				bcs .3

				>STYA ZPPtr1

				lda (ZPPtr1)
				cmp #'-'
				bne .1

				jsr CS.RUN.CheckOpt
				bcc CS.RUN

				bcs .99

.1				>LDA.G pArcFile+1
				bne .2

				jsr CS.RUN.OpenArc
				bcc CS.RUN

				bcs .9

.2				lda ZPFullPathPtr+1
				bne .99

				jsr CS.RUN.SetupPath1
				bcc CS.RUN

				bcs .9
*--------------------------------------
.3				>LDA.G pArcFile+1
				beq .99

				lda ZPFullPathPtr+1
				bne .5

				ldy #S.PS.pCWD
				jsr A2osX.GetPSy
				pha
				iny
				jsr A2osX.GetPSy
				ply

				jsr CS.RUN.SetupPath
				bcs .9

.5				jsr CS.RUN.SetupBufs
				bcs .9

				lda bSpinner
				beq .6

				lda #' '				Space for spinner to eat
				>LIBC PutChar

.6				jsr CS.RUN.LOOP
				bcs .9

				jsr CS.RUN.TidyUp

				lda #0
				sec
.9				rts

.99				>LDYA L.MSG.USAGE
				>LIBC PutS
				lda #E.SYN
				sec
				rts
*--------------------------------------
CS.RUN.CheckOpt	ldy #1
				lda (ZPPtr1),y

				ldx #OptionVars-OptionList-1

.2				cmp OptionList,x
				beq .3

				dex
				bpl .2

				sec
				rts

.3				ldy OptionVars,x
				ldx #$ff
				stx 0,y
				clc
				rts
*--------------------------------------
CS.RUN.SetupPath
				>STYA ZPPtr1
CS.RUN.SetupPath1
				>LDYAI 256
				>LIBC Malloc
				bcs .9

				>STYA ZPFullPathPtr

				ldy #$ff

.2				iny
				lda (ZPPtr1),y
				sta (ZPFullPathPtr),y
				bne .2

				dey
				lda #'/'
				cmp (ZPFullPathPtr),y
				beq .3

                iny
                sta (ZPFullPathPtr),y

.3				tya
				sec
				adc ZPFullPathPtr
				sta ZPRelPathPtr
				lda #0
				adc ZPFullPathPtr+1
				sta ZPRelPathPtr+1

				clc

.9				rts
*--------------------------------------
CS.RUN.SetupBufs
				>LDYAI CHNK.SIZE
				>LIBC Malloc
				bcs .9

				>STYA ZPInBufPtr
				>STYA.G pInBuf

				>LDYAI CHNK.SIZE
				>LIBC Malloc
				bcs .9

				>STYA ZPOutBufPtr
				>STYA.G pOutBuf

.9				rts
*--------------------------------------
CS.RUN.LOOP		jsr CS.RUN.GetByte
				bcs .9

.10				cmp #CHNK.T.DIR
				bne .1

				jsr CS.RUN.GetFileName
				bcs .99

				ldy #0
				jsr CS.RUN.PrintFN

				jsr CS.RUN.CheckDir
				bcs .99

				lda bSpinner
				bne CS.RUN.LOOP

				>LDYA L.MSG.OK
				>LIBC PutS
				bra CS.RUN.LOOP

.99				rts

.9				jmp CS.RUN.E.IARC
*--------------------------------------
.1				cmp #CHNK.T.FILE
				bne .9

				jsr CS.RUN.GetFileType
				bcs .99

				jsr CS.RUN.GetFileName
				bcs .99

				ldy #2
				jsr CS.RUN.PrintFN
				jsr CS.RUN.OpenFile
				bcs .99
*--------------------------------------
				jsr CS.RUN.GetByte		DATA
				bcs CS.RUN.Exit			eof

.2				cmp #CHNK.T.DATA
				bne .3					Could be a 0 byte file

.20				lda bSpinner
				beq .21

				jsr CS.RUN.Spinner
				bra .22

.21				lda #'.'
				>LIBC PutChar

.22				jsr CS.RUN.GetByte		DataLen LO
				bcs .99

				sta ZPInBufLen

				jsr CS.RUN.GetByte		DataLen HI
				bcs .99

				sta ZPInBufLen+1

				jsr CS.RUN.ReadData
				bcs .99

				ldy #1
				lda (ZPInBufPtr),y
				sta ZPOutBufLen

				iny
				lda (ZPInBufPtr),y
				sta ZPOutBufLen+1

				>LDYA.G pOutBuf
				>STYA ZPOutBufPtr

				jsr X.Unpak
				bcs .9

				jsr CS.RUN.WriteFile
				bcs .99

				jsr CS.RUN.GetByte
				bcs CS.RUN.Exit

				cmp #CHNK.T.DATA
				beq .20

.3              pha
				jsr CS.RUN.Exit
				pla

				jmp .10
*--------------------------------------
CS.RUN.Exit		bit bList
				clc
				bmi .8
				
				>LDYA.G pFile
				>LIBC FClose

				>STZ.G pFile+1

.8				lda bSpinner
				bne .9

				>LDYA L.MSG.OK
				>LIBC PutS

.9				rts
*--------------------------------------
CS.RUN.PrintFN  lda bSpinner
				bne .9

				>SS
				>PUSHW L.MSG.DIR,y
				>PUSHW ZPFullPathPtr
				>PUSHBI 2
				>LIBC PrintF
				>SR

.9				rts
*--------------------------------------
CS.RUN.Spinner  lda #C.BS
				>LIBC PutChar

				lda ZPSpinState
				tax

				inc
				and #3
				sta ZPSpinState
				tax

				lda MSG.SPINNER,x

				>LIBC PutChar

				rts
*--------------------------------------
CS.RUN.NewLine  lda #C.CR
				>LIBC PutChar
				lda #C.LF
				>LIBC PutChar
				rts
*--------------------------------------
CS.RUN.TidyUp	lda bSpinner
				beq .9

				lda #8
				>LIBC PutChar

				lda #' '
				>LIBC PutChar

				jsr CS.RUN.NewLine

.9				rts
*--------------------------------------
CS.RUN.OpenArc  >SS
				>PUSHW ZPPtr1
				>PUSHBI O.RDONLY
				>PUSHBI $CF				PAK
				>PUSHWZ					Aux type
				>LIBC FOpen
				>SR
				bcs .9

				>STYA.G pArcFile

				>SS
				>PUSHW.G pArcFile
				>PUSHW ZPInBufPtr
				>PUSHWI 3
				>LIBC FRead
				>SR
				bcs .9

				cpy #3
				bne CS.RUN.E.IARC

				dey

.1              lda MSG.PAK,y
				cmp (ZPInBufPtr),y
				bne CS.RUN.E.IARC

				dey
				bpl .1

				clc
.9				rts
*--------------------------------------
CS.RUN.E.IARC   >LDYA L.MSG.E.IARC
				>LIBC PutS

				lda #E.SYN
				sec
				rts
*--------------------------------------
CS.RUN.GetFileType
				>SS
				>PUSHW.G pArcFile
				>PUSHEA.G FileType
				>PUSHWI 3
				>LIBC FRead
				>SR
				rts
*--------------------------------------
CS.RUN.GetFileName
				jsr CS.RUN.GetByte
				bcs .9

				>SS
				pha
				>PUSHW.G pArcFile
				>PUSHW ZPRelPathPtr
				ply
				lda #0
				>PUSHYA
				>LIBC FRead
				>SR
				bcs .9

				lda #0
				sta (ZPRelPathPtr),y

*				clc
.9				rts
*--------------------------------------
CS.RUN.ReadData >SS
				>PUSHW.G pArcFile
				>LDYA.G pInBuf
				>STYA ZPInBufPtr
				>PUSHYA
				>PUSHW ZPInBufLen
				>LIBC FRead
				>SR
				rts
*--------------------------------------
CS.RUN.GetByte  >LDYA.G pArcFile
				>LIBC GetC
				rts
*--------------------------------------
CS.RUN.CheckDir bit bList
				clc
				bmi .9
				
				>SS
				>PUSHW ZPFullPathPtr
				>PUSHEA.G STATBUF
				>LIBC Stat
				>SR
				bcc .1

				>SS
				>PUSHW ZPFullPathPtr
				>PUSHWI S.STAT.MODE.FO+S.STAT.MODE.FG+S.STAT.MODE.FU
				>LIBC MKDir
				>SR

				rts

.1				ldy #STATBUF+S.STAT.MODE+1
				lda (pData),y
				and #$F0
				cmp /S.STAT.MODE.DIR
				bne .99

				clc
				rts

.99				lda #MLI.E.INVPATH
				sec
.9				rts
*--------------------------------------
CS.RUN.OpenFile bit bList
				clc
				bmi .9
				
				>SS
				>PUSHW ZPFullPathPtr
				>PUSHBI O.CREATE+O.WRONLY+O.TRUNC
				>PUSHB.G FileType
				>PUSHW.G FileAuxType
				>LIBC FOpen
				>SR
				bcs .9

				>STYA.G pFile

.9				rts
*--------------------------------------
CS.RUN.WriteFile
				bit bList
				clc
				bmi .9
				
				>SS
				>PUSHW.G pFile
				>PUSHW.G pOutBuf
				>PUSHW ZPOutBufLen
				>LIBC FWrite
				>SR
				
.9				rts
*--------------------------------------
CS.SIG			sec
				rts
*--------------------------------------
CS.QUIT			>LDYA.G pFile
				cmp #0
				beq .1

				>LIBC FClose

.1				>LDYA.G pArcFile
				cmp #0
				beq .2

				>LIBC FClose

.2				>LDYA ZPFullPathPtr
				beq .3

				>LIBC Free

.3				>LDYA.G pOutBuf
				cmp #0
				beq .4

				>LIBC Free

.4				>LDYA.G pInBuf
				cmp #0
				beq .8

				>LIBC Free

.8				clc
				rts
*--------------------------------------
				.INB usr/src/shared/x.unpak.s
*--------------------------------------
CS.END			.EQ *
*--------------------------------------
OptionList		.AS "LlPp"
OptionVars		.DA #bList,#bList,#bSpinner,#bSpinner
*--------------------------------------
MSG.USAGE		.CS "Usage : UNPAK Archive [DstDir]\r\n"
				.CS "   -L : List content only\r\n"
				.CZ "   -P : Show progress spinner\r\n"
MSG.DIR			.CZ "Creating Dir:%s..."
MSG.FILE		.CZ "Extracting File:%s..."
MSG.OK			.CZ "[OK]"
MSG.E.IARC		.CZ "\r\nInvalid/corrupt archive"
MSG.PAK			.CS "PAK"
MSG.SPINNER		.AS "|/-\"
*--------------------------------------
ID.END			.EQ *
*--------------------------------------
				.DUMMY
				.OR 0
pInBuf			.BS 2
pOutBuf			.BS 2
pArcFile		.BS 2
pFile			.BS 2
FileType		.BS 1
FileAuxType		.BS 2
STATBUF			.BS S.STAT
DS.END			.ED
*--------------------------------------
MAN
SAVE usr/src/bin/unpak.s
ASM
