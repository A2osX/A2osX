NEW
  AUTO 3,1
*---------------------------------------
MAC.Init		lda #SL..+SL._
				>KAPI SListNew
				bcs .9

				>STYA.G MAC.pList

				>LDYAI 256
				>LIBC Malloc
				bcs .9

				>STYA.G MAC.pBuf

				>LDYAI MA.MAXDEPTH*8
				>LIBC Malloc
				bcs .9

				>STYA.G MAC.pStack

.9				rts
*---------------------------------------
MAC.Quit		>LDA.G MAC.StkPtr
				beq .10

				jsr MAC.Pop
				bra MAC.Quit

.10				>LDYA.G MAC.pStack
				cmp #0
				beq .1

				>LIBC Free

.1				>LDYA.G MAC.pBuf
				cmp #0
				beq .2

				>LIBC Free

.2				>LDYA.G MAC.pList
				cmp #0
				beq .8

				>KAPI SListFree

.8				clc
				rts
*---------------------------------------
MAC.New			>SS
				>PUSHW.G MAC.pList
				>PUSHW ZPLinePtr
				>PUSHWZ					ScopeID
				>PUSHWI ZPLinePtr		NextPtr
				>KAPI SListNewKey
				>SR
				bcs .99

				>STYA.G MAC.ID

*				clc

.99				rts
*---------------------------------------
MAC.Learn		>LDYA.G MAC.pBuf
				>STYA R1

				>STZ.G MAC.BufPtr
				sta (R1)

				lda (ZPLinePtr)
				cmp #C.SPACE			No label, scan to DIR/OP if any
				bne .1

				jsr MAC.AddChar			Store ONE blank
				bcs .90

				jsr SRC.GetNextCharNB
				bcc .2

				bra .80
*---------------------------------------
.1				jsr MAC.AddChar
				bcs .99

				jsr SRC.GetNextChar
				bcs .80

				cmp #C.SPACE
				bne .1

				jsr MAC.AddChar
.90				bcs .99

				jsr SRC.GetNextCharNB
				bcs .80
*---------------------------------------
.2				cmp #'.'				Directive ?
				bne .4

				ldy #1
				lda (ZPLinePtr),y
				beq .3

				jsr SRC.ToUpperCase
				cmp #'E'
				bne .3

.21				iny
				lda (ZPLinePtr),y
				beq .3

				jsr SRC.ToUpperCase
				cmp #'M'
				bne .3

				>STZ.G MAC.bLearning

*				lda #0
				jmp MAC.AddChar			End Of Macro

.80				lda #C.CR
				jmp MAC.AddChar
*---------------------------------------
.3				lda (ZPLinePtr)

.4				jsr MAC.AddChar
				bcs .99

				jsr SRC.GetNextChar
				bcs .80

				cmp #C.SPACE
				bne .4

				jsr SRC.GetNextChar
				bcs .80

				cmp #C.SPACE
				beq .80					Comments...

				pha
				lda #C.SPACE
				jsr MAC.AddChar
				pla

				bcs .99

.5				jsr MAC.AddChar			Store ARG....
				bcs .99

				jsr SRC.GetNextChar
				bcs .80

				cmp #C.SPACE
				bne .5
				bra .80					End of Line

.99				rts
*---------------------------------------
MAC.AddChar		tax
				>LDA.G ASM.PASS			If Pass#2, ignore
				bne .8

				>LDA.G MAC.BufPtr
				tay
				txa
				sta (R1),y
				>INC.G MAC.BufPtr
				txa
				beq .1

				eor #C.CR
				bne .8

.1				>SS
				>PUSHW.G MAC.pList
				>PUSHW.G MAC.ID
				>PUSHW R1
				>LDA.G MAC.BufPtr
				tay
				lda #0
				>PUSHYA
				>KAPI SListAddData
				>SR

				rts

.8				clc
				rts
*---------------------------------------
MAC.Exec		jsr MAC.Push
				bcs .99
				
				inc ZPMacroNextID
				lda ZPMacroNextID
				sta ZPMacroCtxID

				jsr MAC.GetBody
				bcs .99

				>STYA ZPMacroBuf
				>STYA ZPMacroBufPtr

				stz ZPMacroArgBuf+1

				jsr SRC.GetChar
				bcs .8

				cmp #C.SPACE
				bne .92

				jsr SRC.GetNextChar
				bcs .8					eol..

				cmp #C.SPACE			comment....skip
				beq .8

				jsr MAC.GetArgs
				bcs .99

.8				clc
				rts

.90				lda #E.MACRO.INV
*				sec
.99				rts

.92				lda #E.SYNTAX.ERROR
				sec
MAC.Exec.RTS	rts
*---------------------------------------
MAC.GetBody		>SS
				>PUSHW.G MAC.pList
				>PUSHW ZPLinePtr
				>PUSHWZ					ScopeID
				>PUSHWI ZPLinePtr		NextPtr
				>KAPI SListLookup
				>SR
				bcs .99

				>STYA R1				MAC.ID

				>SS
				>PUSHW.G MAC.pList
				>PUSHW R1				Mac ID
				>PUSHWZ					allocate
				>PUSHWI $ffff			all
				>PUSHWZ					from Start
				>KAPI SListGetData
				>SR

.99				rts
*---------------------------------------
MAC.GetArgs		ldy #$ff

.10				iny
				lda (ZPLinePtr),y
				bne .10

				iny
				iny

				lda #0

				>LIBC Malloc
				bcs .99

				>STYA ZPMacroArgBuf

				>STYA R2

				ldx #0					arg cnt

.1				ldy #$ff

				stz DIR.Byte			between " flag

.2				iny
				lda	(ZPLinePtr),y
				beq .3

				cmp #C.SPACE			end of args ?
				bne .21

				bit DIR.Byte
				bpl .3

.20				sta	(R2)
				inc R2
				bne .2

				inc R2+1
				bra .2

.21				cmp #'"'
				bne .22

				lda DIR.Byte
				eor #$ff
				sta DIR.Byte
				bra .2

.22				cmp #','
				bne .20

				bit DIR.Byte
				bmi .20

				lda #0
				sta	(R2)

				inc R2
				bne .23

				inc R2+1

.23				tya
				beq .4

				inx

				sec
				adc ZPLinePtr
				sta ZPLinePtr
				bcc .1

				inc ZPLinePtr+1
				bra .1

.3				lda #0
				sta	(R2)

				tya
				beq .4

				inx

.4				stx ZPMacroArgCnt

				clc

.99				rts
*---------------------------------------
MAC.ReadLine	ldy #0

				stz DIR.Byte

.1				lda (ZPMacroBufPtr)
				beq .80

				cmp #C.CR
				beq .8

				inc ZPMacroBufPtr
				bne .2

				inc ZPMacroBufPtr+1

.2				cmp #']'
				bne .7

				bit DIR.Byte
				bmi .7

				lda (ZPMacroBufPtr)
				beq .9

				inc ZPMacroBufPtr
				bne .21

				inc ZPMacroBufPtr+1

.21				cmp #'#'
				bne .22

				lda ZPMacroArgCnt
				ora #$30
				bra .7

.22				cmp #'1'
				bcc .6

				cmp #'9'+1
				bcs .6

				and #$0f
				tax
				dec
				cmp ZPMacroArgCnt
				bcs .1

				jsr MAC.GetArgX
				bcs .1					no arg ]n, append nothing

.3				lda (R1)
				sta (ZPLineBuf),y
				iny

				inc R1
				bne .4

				inc R1+1

.4				dex
				bne .3

				bra .1

.6				pha
				lda #']'
				sta (ZPLineBuf),y
				iny
				pla

.7				sta (ZPLineBuf),y
				iny
				bra .1

.8				inc ZPMacroBufPtr
				bne .80

				inc ZPMacroBufPtr+1

.80				lda #0
				sta (ZPLineBuf),y

				clc
				rts

.9				lda #E.SYNTAX.ERROR
				sec
				rts
*---------------------------------------
MAC.GetArgX		phy

				>LDYA ZPMacroArgBuf
				>STYA R1

.1				ldy #$ff

.2				iny
				lda (R1),y
				bne .2

.3				dex
				beq .4

				tya
				beq .9

				sec
				adc R1
				sta R1
				bcc .1

				inc R1+1
				bra .1

.4				tya
				tax
				beq .9

				ply
				clc
				rts

.9				ply
				sec
				rts
*---------------------------------------
MAC.Push		>LDA.G MAC.StkPtr
				cmp #MA.MAXDEPTH*8
				bcs .98

				>LDYA.G MAC.pStack
				>STYA R1

				>LDA.G MAC.StkPtr
				tay

				ldx #0

.1				lda ZPMacroBuf,x
				sta (R1),y
				iny
				inx
				cpx #8
				bcc .1

				tya
				>STA.G MAC.StkPtr
				
				clc
				rts

.98				lda #E.MACRO.TOO.MANY
*				sec
				rts
*---------------------------------------
MAC.Pop			>LDYA ZPMacroArgBuf
				beq .1
				
				>LIBC Free

				stz ZPMacroArgBuf+1

.1				>LDYA ZPMacroBuf
				beq .2
				
				>LIBC Free

				stz ZPMacroBuf+1

.2				>LDYA.G MAC.pStack
				>STYA R1

				>LDA.G MAC.StkPtr
				beq .8
				
				sec
				sbc #8
				sta (pData),y				8 bytes off stack

				tay

				ldx #0

.3				lda (R1),y
				sta ZPMacroBuf,x
				iny
				inx
				cpx #8
				bcc .3

.8				clc
				rts
*---------------------------------------
MAN
SAVE usr/src/bin/asm.s.mac
LOAD usr/src/bin/asm.s
ASM
