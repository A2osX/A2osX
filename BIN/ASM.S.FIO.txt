NEW
  AUTO 3,1
*---------------------------------------
FIO.Quit		>LDA.G SRC.Depth
				beq .1

				jsr FIO.FileClose
				bra FIO.Quit

.1				>LDYA.G DST.pFILE
				cmp #0
				beq .2

				>LIBC FClose

.2				>LDYA ZPLineBuf
				beq .3
				
				>LIBC Free
				
.3				>LDYA ZPTmpBuf
				beq .4
				
				>LIBC Free
			
.4				ldy #ASM.pCPUDEF+1
				jsr .7

				ldy #SRC.pFILENAME+1

.7				lda (pData),y
				beq .8
				
				pha
				dey
				lda (pData),y
				tay
				pla
				
				>LIBC Free

.8				rts
*---------------------------------------
FIO.Init.RTS	rts

FIO.Init		>LDYAI 256
				>LIBC Malloc
				bcs FIO.Init.RTS

				>STYA ZPLineBuf

				>LDYAI 256
				>LIBC Malloc
				bcs FIO.Init.RTS

				>STYA ZPTmpBuf

				>LDYA L.ASM.6502
*---------------------------------------
FIO.LOAD.CPU	>STYA R2

				ldy #S.PS.pCmdLine
				jsr A2osX.GetPSy
				pha
				iny
				jsr A2osX.GetPSy
				ply

				>STYA R1
				ldy #$ff
				ldx #$ff

.1				iny
				inx
				lda (R1),y
				sta ASM.CPU.FILE,x
				bne .1

				lda #'.'
				sta ASM.CPU.FILE,x
				ldy #$ff

.2				iny
				inx
				lda (R2),y
				jsr SRC.IsLetterOrDigit
				bcs .3

				sta ASM.CPU.FILE,x
				bra .2

.3				stz ASM.CPU.FILE,x

				>LDYA.G ASM.pCPUDEF
				cmp #0
				beq .4

				>LIBC Free

				>STZ.G ASM.pCPUDEF+1

.4				>SS
				>PUSHW L.MSG.CPU.FILE
				>PUSHW L.ASM.CPU.FILE
				>PUSHBI 2
				>LIBC PrintF
				>SR
				jsr OUT.PrintCR

				>SS
				>PUSHW L.ASM.CPU.FILE
				>PUSHBI	O.RDONLY
				>PUSHBI S.FI.T.BIN
				>PUSHWZ				Aux type
				>LIBC LoadFile
				>SR
				bcs .9

				>STYA R1
				>STYA.G ASM.pCPUDEF

				ldy #ASM.T.AM
				lda (R1),y
				clc
				adc R1
				sta ZPAMPtr
				iny
				lda (R1),y
				adc R1+1
				sta ZPAMPtr+1

				iny

				lda (R1),y
				clc
				adc R1
				sta ZPRegPtr
				iny
				lda (R1),y
				adc R1+1
				sta ZPRegPtr+1

				iny

				lda (R1),y
				clc
				adc R1
				sta ZPOpsPtr
				iny
				lda (R1),y
				adc R1+1
				sta ZPOpsPtr+1

.9				rts
*---------------------------------------
FIO.OpenFile	>SS
				>STYA R1
				>PUSHW L.MSG.SRC.FILE
				>PUSHW R1
				>PUSHBI 2
				>LIBC PrintF
				>SR
				jsr OUT.PrintCR

				>LDA.G SRC.Depth
				cmp #IN.MAXDEPTH
				bne .1

				lda #E.SRC.TOO.MANY.IN
				sec
				rts

.1				>SS
				>PUSHW R1
				>PUSHW ZPTmpBuf
				>LIBC Stat
				>SR
				bcs .99

				ldy #S.STAT.P.TYPE
				lda (ZPTmpBuf),y
				cmp #S.FI.T.TXT
				bne .2

				ldy #O.RDONLY+O.TEXT
				bra .3

.2				cmp #$FA			S-C/BAS?
				bne .98

				ldy #O.RDONLY

.3				>SS
				>PUSHW R1
				tya
				>PUSHA
				ldy #S.STAT.P.TYPE
				lda (ZPTmpBuf),y
				>PUSHA
				>PUSHWZ
				>LIBC FOpen
				>SR
				bcs .99

				>STYA R2
				
				>INC.G SRC.Depth

*				clc
				asl
				adc #SRC.pFILES-2
				tay
				
				lda R2
				sta (pData),y
				iny
				lda R2+1
				sta (pData),y
				
				>LDA.G SRC.Depth
				clc
				adc #SRC.FILETYPES-1
				tay

				phy
				ldy #S.STAT.P.TYPE
				lda (ZPTmpBuf),y
				ply
				sta (pData),y

				lda #0
				>STA.G SRC.LINENUM
				iny
				sta (pData),y

				clc
				rts

.98				lda #E.SRC.INV.TYPE
				sec
.99				rts
*---------------------------------------
FIO.ReadLine	>LDA.G SRC.Depth
				clc
				adc #SRC.FILETYPES-1
				tay
				lda (pData),y
				bmi FIO.ReadLineA

				>SS
				jsr FIO.PushpFile
				>PUSHW ZPLineBuf
				>PUSHWI 256
				>LIBC FRead
				>SR
				bcs .99

				tax						$100 byte transfered ?
				bne .98

				tya
				beq .13

				dey
				lda (ZPLineBuf),y
				eor #C.CR
				beq .13					replace ending $0D with $00

				iny

				lda #0

.13				sta (ZPLineBuf),y

				>INC.G SRC.LINENUM
				bne .8

				>INC.G SRC.LINENUM+1
				
.8				clc				
				rts
				
.98				lda #E.LINE.TOO.LONG

				sec

.99				rts
*---------------------------------------
FIO.ReadLineA	>SS
				jsr FIO.PushpFile
				>PUSHW ZPTmpBuf
				>PUSHWI 3
				>LIBC FRead
				>SR
				bcs .99

				cpy #3
				bcs .1
				
.98				lda #MLI.E.IO
				sec
.99				rts

.1				lda (ZPTmpBuf)			LEN
				sec
				sbc #3
				bcc .98					LEN should be at least 3
				bne .13 

				sta (ZPLineBuf)
				clc
				rts
			
.13				sta (ZPTmpBuf)

				ldy #1
				lda (ZPTmpBuf),y
				pha
				iny
				lda (ZPTmpBuf),y
				>STA.G SRC.LINENUM+1
				pla
				>STA.G SRC.LINENUM

				>SS
				jsr FIO.PushpFile
				>PUSHW ZPTmpBuf
				lda #0					LENHI = 0
				>PUSHA
				lda (ZPTmpBuf)			LEN
				>PUSHA
				>LIBC FRead
				>SR
				bcs .99

				>LDYA ZPTmpBuf
				>STYA R1
				ldy #0

.10				lda (R1)
				inc R1
				bne .11

				inc R1+1

.11				tax
				bmi .2

				sta (ZPLineBuf),y
				beq .8				Ending 00

				iny
				bne .10

				bra .97

.2				cmp #$C0			REPEAT char?
				bne .5

				lda (R1)		Get Repeat Count
				inc R1
				bne .3

				inc R1+1

.3				tax

				lda (R1)		Get Repeat Char
				inc R1
				bne .4

				inc R1+1

.4				sta (ZPLineBuf),y
				iny
				beq .97

				dex
				bne .4

				bra .10

.5				and #$3F			Compute blank count
				tax
				lda #$20

.6				sta (ZPLineBuf),y
				iny
				beq .97

				dex
				bne .6

				bra .10

.8				clc
.9				rts

.97				lda #E.LINE.TOO.LONG
				sec
				rts
*--------------------------------------
FIO.PushpFile	>LDA.G SRC.Depth
*				clc
				asl
				adc #SRC.pFILES-1
				tay
				lda (pData),y
				>PUSHA
				dey
				lda (pData),y
				>PUSHA
				
				rts
*---------------------------------------
FIO.FileClose	>LDA.G SRC.Depth
				beq .8

				dec
				sta (pData),y

				inc
				
				asl
*				clc				
				adc #SRC.pFILES-2
				tay
				lda (pData),y
				pha
				iny
				lda (pData),y
				ply
				
				>LIBC FClose

.8				clc
				rts
*---------------------------------------
MAN
SAVE usr/src/bin/asm.s.fio
LOAD usr/src/bin/asm.s
ASM
